{"function_name":"AnalyticsDashboard.__init__","module":"compareblocks.analytics.dashboard","class":"AnalyticsDashboard","description":"Initialize analytics dashboard.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_dashboard.py","test_description":"Tests AnalyticsDashboard.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\dashboard.py","line_number":22,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8501503467559814,"execution_count":3,"average_duration":2.2074271043141684,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnalyticsDashboard.create_optimization_dashboard","module":"compareblocks.analytics.dashboard","class":"AnalyticsDashboard","description":"Create an optimization insights dashboard.","parameters":["self","metrics","recent_reports"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_dashboard.py","test_description":"Tests AnalyticsDashboard.create_optimization_dashboard functionality","field_attributes":{"metrics":{"type":"Any","constraint":"valid input","description":"Parameter metrics"},"recent_reports":{"type":"Any","constraint":"valid input","description":"Parameter recent_reports"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Created or built object"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\dashboard.py","line_number":152,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8501503467559814,"execution_count":3,"average_duration":2.2074271043141684,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnalyticsDashboard.create_performance_dashboard","module":"compareblocks.analytics.dashboard","class":"AnalyticsDashboard","description":"Create a performance dashboard view.","parameters":["self","metrics"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_dashboard.py","test_description":"Tests AnalyticsDashboard.create_performance_dashboard functionality","field_attributes":{"metrics":{"type":"Any","constraint":"valid input","description":"Parameter metrics"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Created or built object"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\dashboard.py","line_number":27,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8501503467559814,"execution_count":3,"average_duration":2.2074271043141684,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnalyticsDashboard.create_quality_dashboard","module":"compareblocks.analytics.dashboard","class":"AnalyticsDashboard","description":"Create a quality metrics dashboard view.","parameters":["self","variation_scores","consensus_decisions"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_dashboard.py","test_description":"Tests AnalyticsDashboard.create_quality_dashboard functionality","field_attributes":{"variation_scores":{"type":"Any","constraint":"valid input","description":"Parameter variation_scores"},"consensus_decisions":{"type":"Any","constraint":"valid input","description":"Parameter consensus_decisions"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Created or built object"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\dashboard.py","line_number":81,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8501503467559814,"execution_count":3,"average_duration":2.2074271043141684,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnalyticsExporter.__init__","module":"compareblocks.analytics.export","class":"AnalyticsExporter","description":"Initialize analytics exporter.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_export.py","test_description":"Tests AnalyticsExporter.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\export.py","line_number":23,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9331314563751221,"execution_count":1,"average_duration":0.9331314563751221,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnalyticsExporter.create_export_summary","module":"compareblocks.analytics.export","class":"AnalyticsExporter","description":"Create a summary of exported files.","parameters":["self","exported_files"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_export.py","test_description":"Tests AnalyticsExporter.create_export_summary functionality","field_attributes":{"exported_files":{"type":"Any","constraint":"valid input","description":"Parameter exported_files"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Created or built object"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\export.py","line_number":389,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9331314563751221,"execution_count":1,"average_duration":0.9331314563751221,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnalyticsExporter.export_analytics_report","module":"compareblocks.analytics.export","class":"AnalyticsExporter","description":"Export analytics report in specified format.","parameters":["self","report","format_type","output_path"],"return_type":"Path","test_file":"tests/unit/test_export.py","test_description":"Tests AnalyticsExporter.export_analytics_report functionality","field_attributes":{"report":{"type":"Any","constraint":"valid input","description":"Parameter report"},"format_type":{"type":"Any","constraint":"valid input","description":"Parameter format_type"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"return_value":{"type":"Path","constraint":"valid return value","description":"Path result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\export.py","line_number":171,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9331314563751221,"execution_count":1,"average_duration":0.9331314563751221,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnalyticsExporter.export_batch_metrics","module":"compareblocks.analytics.export","class":"AnalyticsExporter","description":"Export multiple sets of engine metrics for batch analysis.","parameters":["self","metrics_list","output_path"],"return_type":"Path","test_file":"tests/unit/test_export.py","test_description":"Tests AnalyticsExporter.export_batch_metrics functionality","field_attributes":{"metrics_list":{"type":"Any","constraint":"valid input","description":"Parameter metrics_list"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"return_value":{"type":"Path","constraint":"valid return value","description":"Path result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\export.py","line_number":352,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9331314563751221,"execution_count":1,"average_duration":0.9331314563751221,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnalyticsExporter.export_comparison_data","module":"compareblocks.analytics.export","class":"AnalyticsExporter","description":"Export comparison data for trend analysis.","parameters":["self","comparison_data","output_path"],"return_type":"Path","test_file":"tests/unit/test_export.py","test_description":"Tests AnalyticsExporter.export_comparison_data functionality","field_attributes":{"comparison_data":{"type":"Any","constraint":"valid input","description":"Parameter comparison_data"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"return_value":{"type":"Path","constraint":"valid return value","description":"Path result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\export.py","line_number":326,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9331314563751221,"execution_count":1,"average_duration":0.9331314563751221,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnalyticsExporter.export_dashboard_data","module":"compareblocks.analytics.export","class":"AnalyticsExporter","description":"Export dashboard data for external visualization tools.","parameters":["self","dashboard_data","output_path"],"return_type":"Path","test_file":"tests/unit/test_export.py","test_description":"Tests AnalyticsExporter.export_dashboard_data functionality","field_attributes":{"dashboard_data":{"type":"Any","constraint":"valid input","description":"Parameter dashboard_data"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"return_value":{"type":"Path","constraint":"valid return value","description":"Path result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\export.py","line_number":292,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9331314563751221,"execution_count":1,"average_duration":0.9331314563751221,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnalyticsExporter.export_engine_metrics_csv","module":"compareblocks.analytics.export","class":"AnalyticsExporter","description":"Export engine metrics to CSV format.","parameters":["self","metrics","output_path"],"return_type":"Path","test_file":"tests/unit/test_export.py","test_description":"Tests AnalyticsExporter.export_engine_metrics_csv functionality","field_attributes":{"metrics":{"type":"Any","constraint":"valid input","description":"Parameter metrics"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"return_value":{"type":"Path","constraint":"valid return value","description":"Path result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\export.py","line_number":64,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9331314563751221,"execution_count":1,"average_duration":0.9331314563751221,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnalyticsExporter.export_engine_metrics_json","module":"compareblocks.analytics.export","class":"AnalyticsExporter","description":"Export engine metrics to JSON format.","parameters":["self","metrics","output_path"],"return_type":"Path","test_file":"tests/unit/test_export.py","test_description":"Tests AnalyticsExporter.export_engine_metrics_json functionality","field_attributes":{"metrics":{"type":"Any","constraint":"valid input","description":"Parameter metrics"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"return_value":{"type":"Path","constraint":"valid return value","description":"Path result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\export.py","line_number":27,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9331314563751221,"execution_count":1,"average_duration":0.9331314563751221,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnalyticsExporter.export_engine_metrics_ndjson","module":"compareblocks.analytics.export","class":"AnalyticsExporter","description":"Export engine metrics to NDJSON format.","parameters":["self","metrics","output_path"],"return_type":"Path","test_file":"tests/unit/test_export.py","test_description":"Tests AnalyticsExporter.export_engine_metrics_ndjson functionality","field_attributes":{"metrics":{"type":"Any","constraint":"valid input","description":"Parameter metrics"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"return_value":{"type":"Path","constraint":"valid return value","description":"Path result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\export.py","line_number":138,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9331314563751221,"execution_count":1,"average_duration":0.9331314563751221,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnalyticsReport.to_dict","module":"compareblocks.analytics.report_generator","class":"AnalyticsReport","description":"Convert to dictionary format.","parameters":["self"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_report_generator.py","test_description":"Tests AnalyticsReport.to_dict functionality","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Dict[str, Any] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\report_generator.py","line_number":37,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":1.0116229057312012,"execution_count":1,"average_duration":1.0116229057312012,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnalyticsWriter.__init__","module":"src.compareblocks.io.writer","class":"AnalyticsWriter","description":"Initialize analytics writer with flexible schema validation","parameters":["self"],"return_type":"None","test_file":"tests/unit/test_io_validation.py","test_description":"Tests initialization of analytics writer for flexible reporting data","field_attributes":{"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnalyticsWriter.write_analytics_report","module":"src.compareblocks.io.writer","class":"AnalyticsWriter","description":"Write analytics report to NDJSON format","parameters":["self","analytics_data: Dict[str, Any]","file_path: Path","overwrite: bool = False"],"return_type":"None","test_file":"tests/unit/test_io_validation.py","test_description":"Tests writing of analytics reports in NDJSON format","field_attributes":{"analytics_data":{"type":"Dict[str, Any]","constraint":"non-empty string","description":"Parameter analytics_data"},"file_path":{"type":"Path","constraint":"valid file path","description":"Parameter file_path"},"overwrite":{"type":"bool","constraint":"boolean value","description":"Parameter overwrite","default":"False"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnomalyDetector.__init__","module":"src.compareblocks.features.anomaly","class":"AnomalyDetector","description":"Initialize the anomaly detector.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests __init__ functionality with real PDF data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnomalyDetector.calculate_char_per_line_ratio","module":"src.compareblocks.features.anomaly","class":"AnomalyDetector","description":"Calculate average characters per line.","parameters":["self","text"],"return_type":"float","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests calculate_char_per_line_ratio functionality with real PDF data","field_attributes":{"return_value":{"type":"float","constraint":"0.0 <= value <= 1.0","description":"Calculated float result"},"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnomalyDetector.calculate_digit_ratio","module":"src.compareblocks.features.anomaly","class":"AnomalyDetector","description":"Calculate ratio of digit characters to total characters.","parameters":["self","text"],"return_type":"float","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests calculate_digit_ratio functionality with real PDF data","field_attributes":{"return_value":{"type":"float","constraint":"0.0 <= value <= 1.0","description":"Calculated float result"},"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnomalyDetector.calculate_entropy","module":"src.compareblocks.features.anomaly","class":"AnomalyDetector","description":"Calculate Shannon entropy of text.","parameters":["self","text"],"return_type":"float","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests calculate_entropy functionality with real PDF data","field_attributes":{"return_value":{"type":"float","constraint":">= 0.0","description":"Calculated float result"},"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnomalyDetector.calculate_repetition_score","module":"src.compareblocks.features.anomaly","class":"AnomalyDetector","description":"Calculate repetition score based on repeated patterns.","parameters":["self","text"],"return_type":"float","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests calculate_repetition_score functionality with real PDF data","field_attributes":{"return_value":{"type":"float","constraint":"0.0 <= value <= 1.0","description":"Normalized score or IoU value"},"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnomalyDetector.calculate_space_ratio","module":"src.compareblocks.features.anomaly","class":"AnomalyDetector","description":"Calculate ratio of whitespace characters to total characters.","parameters":["self","text"],"return_type":"float","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests calculate_space_ratio functionality with real PDF data","field_attributes":{"return_value":{"type":"float","constraint":"0.0 <= value <= 1.0","description":"Calculated float result"},"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnomalyDetector.calculate_special_char_ratio","module":"src.compareblocks.features.anomaly","class":"AnomalyDetector","description":"Calculate ratio of special characters (non-alphanumeric, non-space).","parameters":["self","text"],"return_type":"float","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests calculate_special_char_ratio functionality with real PDF data","field_attributes":{"return_value":{"type":"float","constraint":"0.0 <= value <= 1.0","description":"Calculated float result"},"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnomalyDetector.detect_specific_patterns","module":"src.compareblocks.features.anomaly","class":"AnomalyDetector","description":"Detect specific anomaly patterns in text.","parameters":["self","text"],"return_type":"Any","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests detect_specific_patterns functionality with real PDF data","field_attributes":{"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnomalyDetector.extract_anomaly_features","module":"src.compareblocks.features.anomaly","class":"AnomalyDetector","description":"Extract anomaly detection features from text.","parameters":["self","text"],"return_type":"AnomalyFeatures","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests extract_anomaly_features functionality with real PDF data","field_attributes":{"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"return_value":{"type":"AnomalyFeatures","constraint":"valid return value","description":"Extracted anomalyfeatures data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnomalyDetector.extract_features_for_variations","module":"src.compareblocks.features.anomaly","class":"AnomalyDetector","description":"Extract anomaly features for multiple variations.","parameters":["self","variations"],"return_type":"Any","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests extract_features_for_variations functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Extracted any data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnomalyDetector.get_anomaly_statistics","module":"src.compareblocks.features.anomaly","class":"AnomalyDetector","description":"Get anomaly statistics for a set of variations.","parameters":["self","variations"],"return_type":"Any","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests get_anomaly_statistics functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnomalyDetector.is_anomalous","module":"src.compareblocks.features.anomaly","class":"AnomalyDetector","description":"Check if text is anomalous based on threshold.","parameters":["self","text","threshold"],"return_type":"bool","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests is_anomalous functionality with real PDF data","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"bool result"},"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"threshold":{"type":"Any","constraint":"valid input","description":"Parameter threshold"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnomalyDetector.rank_by_anomaly_score","module":"src.compareblocks.features.anomaly","class":"AnomalyDetector","description":"Rank variations by anomaly score (lower is better).","parameters":["self","variations"],"return_type":"Any","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests rank_by_anomaly_score functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AnomalyFeatures.to_dict","module":"compareblocks.features.anomaly","class":"AnomalyFeatures","description":"Convert features to dictionary format.","parameters":["self"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_anomaly.py","test_description":"Tests AnomalyFeatures.to_dict functionality","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Dict[str, Any] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"source_file":"src\\compareblocks\\features\\anomaly.py","line_number":26,"test_functions":[],"test_count":0}
{"function_name":"AssociationManager.__init__","module":"compareblocks.association.manager","class":"AssociationManager","description":"Initialize association manager.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_manager.py","test_description":"Tests AssociationManager.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\association\\manager.py","line_number":40,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AssociationManager.get_association_summary","module":"compareblocks.association.manager","class":"AssociationManager","description":"Get summary of associations for a PDF.","parameters":["self","pdf_path"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_manager.py","test_description":"Tests AssociationManager.get_association_summary functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Retrieved dict[str, any] value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\association\\manager.py","line_number":118,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AssociationManager.get_associations","module":"compareblocks.association.manager","class":"AssociationManager","description":"Get cached associations for a PDF.","parameters":["self","pdf_path"],"return_type":"Optional[PDFAssociations]","test_file":"tests/unit/test_manager.py","test_description":"Tests AssociationManager.get_associations functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"Optional[PDFAssociations]","constraint":"valid return value","description":"Retrieved optional[pdfassociations] value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\association\\manager.py","line_number":106,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AssociationManager.load_associations_for_pdf","module":"compareblocks.association.manager","class":"AssociationManager","description":"Load all associations for a PDF file.","parameters":["self","pdf_path"],"return_type":"PDFAssociations","test_file":"tests/unit/test_manager.py","test_description":"Tests AssociationManager.load_associations_for_pdf functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"PDFAssociations","constraint":"valid return value","description":"PDFAssociations result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","May raise FileNotFoundError"],"dependencies":["json","PyMuPDF","pathlib","fitz"],"source_file":"src\\compareblocks\\association\\manager.py","line_number":44,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"AssociationManager.refresh_associations","module":"compareblocks.association.manager","class":"AssociationManager","description":"Refresh associations for a PDF (reload from disk).","parameters":["self","pdf_path"],"return_type":"PDFAssociations","test_file":"tests/unit/test_manager.py","test_description":"Tests AssociationManager.refresh_associations functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"PDFAssociations","constraint":"valid return value","description":"PDFAssociations result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\association\\manager.py","line_number":111,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"BECRMainWindow.__init__","module":"compareblocks.gui.app","class":"BECRMainWindow","description":"Function description","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_app.py","test_description":"Tests BECRMainWindow.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\app.py","line_number":263,"test_functions":[],"test_count":0}
{"function_name":"BECRMainWindow.add_pdf_configuration","module":"compareblocks.gui.app","class":"BECRMainWindow","description":"Add PDF-specific configuration for an engine.","parameters":["self","engine_name"],"return_type":"Any","test_file":"tests/unit/test_app.py","test_description":"Tests BECRMainWindow.add_pdf_configuration functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\app.py","line_number":383,"test_functions":[],"test_count":0}
{"function_name":"BECRMainWindow.create_individual_config_files","module":"compareblocks.gui.app","class":"BECRMainWindow","description":"Create individual configuration files for each engine.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_app.py","test_description":"Tests BECRMainWindow.create_individual_config_files functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Created or built object"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\app.py","line_number":330,"test_functions":[],"test_count":0}
{"function_name":"BECRMainWindow.setup_menus","module":"compareblocks.gui.app","class":"BECRMainWindow","description":"Setup application menus.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_app.py","test_description":"Tests BECRMainWindow.setup_menus functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\app.py","line_number":303,"test_functions":[],"test_count":0}
{"function_name":"BECRMainWindow.setup_ui","module":"compareblocks.gui.app","class":"BECRMainWindow","description":"Setup the main UI.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_app.py","test_description":"Tests BECRMainWindow.setup_ui functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\app.py","line_number":271,"test_functions":[],"test_count":0}
{"function_name":"BECRMainWindow.show_engine_statistics","module":"compareblocks.gui.app","class":"BECRMainWindow","description":"Show comprehensive engine statistics.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_app.py","test_description":"Tests BECRMainWindow.show_engine_statistics functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\app.py","line_number":343,"test_functions":[],"test_count":0}
{"function_name":"BlockIDGenerator.extract_coordinates_from_id_string","module":"compareblocks.gbg.ids","class":"BlockIDGenerator","description":"Extract page and normalized coordinates from the ID string (for debugging).","parameters":["id_string"],"return_type":"tuple[int, float, float, float, float]","test_file":"tests/unit/test_ids.py","test_description":"Tests BlockIDGenerator.extract_coordinates_from_id_string functionality","field_attributes":{"id_string":{"type":"Any","constraint":"valid input","description":"Parameter id_string"},"return_value":{"type":"tuple[int, float, float, float, float]","constraint":"valid tuple","description":"Extracted tuple[int, float, float, float, float] data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\gbg\\ids.py","line_number":77,"test_functions":[],"test_count":0}
{"function_name":"BlockIDGenerator.generate_block_id","module":"compareblocks.gbg.ids","class":"BlockIDGenerator","description":"Generate a stable block ID using hash of page number and normalized coordinates.","parameters":["page","bbox","page_width","page_height"],"return_type":"str","test_file":"tests/unit/test_ids.py","test_description":"Tests BlockIDGenerator.generate_block_id functionality","field_attributes":{"page":{"type":"Any","constraint":"valid input","description":"Parameter page"},"bbox":{"type":"Any","constraint":"valid input","description":"Parameter bbox"},"page_width":{"type":"Any","constraint":"valid input","description":"Parameter page_width"},"page_height":{"type":"Any","constraint":"valid input","description":"Parameter page_height"},"return_value":{"type":"str","constraint":"valid string","description":"str result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\gbg\\ids.py","line_number":16,"test_functions":[],"test_count":0}
{"function_name":"BlockIDGenerator.validate_block_id","module":"compareblocks.gbg.ids","class":"BlockIDGenerator","description":"Validate that a block ID follows the expected format.","parameters":["block_id"],"return_type":"bool","test_file":"tests/unit/test_ids.py","test_description":"Tests BlockIDGenerator.validate_block_id functionality","field_attributes":{"block_id":{"type":"Any","constraint":"valid input","description":"Parameter block_id"},"return_value":{"type":"bool","constraint":"boolean value","description":"Validation result"},"performance":{"time_complexity":"O(1)","memory_usage":"Low - Validation operations"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["May raise ValidationError"],"dependencies":["jsonschema","PyMuPDF","fitz"],"source_file":"src\\compareblocks\\gbg\\ids.py","line_number":49,"test_functions":[],"test_count":0}
{"function_name":"BoundingBox.__post_init__","module":"src.compareblocks.gbg.types","class":"BoundingBox","description":"Validate bounding box coordinates ensuring width/height are positive and coordinates are non-negative","parameters":["self"],"return_type":"None","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests validation of bounding box coordinates with real PDF data","field_attributes":{"self.x":{"type":"float","constraint":">= 0.0","description":"X coordinate of top-left corner"},"self.y":{"type":"float","constraint":">= 0.0","description":"Y coordinate of top-left corner"},"self.width":{"type":"float","constraint":"> 0.0","description":"Width of bounding box"},"self.height":{"type":"float","constraint":"> 0.0","description":"Height of bounding box"}},"side_effects":["Raises ValueError if width/height <= 0 or coordinates < 0"],"dependencies":["dataclasses"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"BoundingBox.area","module":"src.compareblocks.gbg.types","class":"BoundingBox","description":"Calculate the area of the bounding box","parameters":["self"],"return_type":"float","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests area calculation for various bounding box sizes","field_attributes":{"return_value":{"type":"float","constraint":">= 0.0","description":"float result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"BoundingBox.center","module":"src.compareblocks.gbg.types","class":"BoundingBox","description":"Get the center point of the bounding box","parameters":["self"],"return_type":"tuple[float, float]","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests center point calculation for different bounding boxes","field_attributes":{"return_value":{"type":"tuple[float, float]","constraint":"valid tuple","description":"tuple[float, float] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"BoundingBox.normalize_coordinates","module":"src.compareblocks.gbg.types","class":"BoundingBox","description":"Normalize coordinates to 0-1 range based on page dimensions","parameters":["self","page_width: float","page_height: float"],"return_type":"BoundingBox","test_file":"tests/unit/test_io_validation.py","test_description":"Tests coordinate normalization with various page dimensions","field_attributes":{"page_width":{"type":"float","constraint":">= 0.0","description":"Parameter page_width"},"page_height":{"type":"float","constraint":">= 0.0","description":"Parameter page_height"},"return_value":{"type":"BoundingBox","constraint":"valid return value","description":"BoundingBox result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"CSVParser.get_format_type","module":"compareblocks.association.parsers","class":"CSVParser","description":"Function description","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_parsers.py","test_description":"Tests CSVParser.get_format_type functionality","field_attributes":{"return_value":{"type":"str","constraint":"non-empty string","description":"Retrieved str value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\association\\parsers.py","line_number":102,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846378326416016,"execution_count":1,"average_duration":0.8846378326416016,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"CSVParser.parse","module":"compareblocks.association.parsers","class":"CSVParser","description":"Parse CSV content and extract tabular data.","parameters":["self","content","file_path"],"return_type":"ParsedContent","test_file":"tests/unit/test_parsers.py","test_description":"Tests CSVParser.parse functionality","field_attributes":{"content":{"type":"Any","constraint":"valid input","description":"Parameter content"},"file_path":{"type":"Any","constraint":"valid input","description":"Parameter file_path"},"return_value":{"type":"ParsedContent","constraint":"valid return value","description":"ParsedContent result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\association\\parsers.py","line_number":45,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846378326416016,"execution_count":1,"average_duration":0.8846378326416016,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"CatalogFieldEnhancer.add_performance_attributes","module":"functions.enhance_catalog_fields","class":"CatalogFieldEnhancer","description":"Add performance-related attributes","parameters":["self","func_entry: Dict[str, Any]"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_catalog_enhancement.py","test_description":"Tests addition of performance-related metadata","field_attributes":{"func_entry":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Function catalog entry"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Performance attributes dictionary"}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.033219575881958,"execution_count":1,"average_duration":1.033219575881958,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"CatalogFieldEnhancer.analyze_function_signature","module":"functions.enhance_catalog_fields","class":"CatalogFieldEnhancer","description":"Analyze function signature to extract parameter information","parameters":["self","func_entry: Dict[str, Any]"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_catalog_enhancement.py","test_description":"Tests function signature analysis and parameter extraction","field_attributes":{"func_entry":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Function catalog entry"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Parameter information dictionary"}},"side_effects":[],"dependencies":["re"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.033219575881958,"execution_count":1,"average_duration":1.033219575881958,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"CatalogFieldEnhancer.enhance_function_entry","module":"functions.enhance_catalog_fields","class":"CatalogFieldEnhancer","description":"Enhance a single function entry with comprehensive field attributes","parameters":["self","func_entry: Dict[str, Any]"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_catalog_enhancement.py","test_description":"Tests comprehensive enhancement of function catalog entry","field_attributes":{"func_entry":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Function catalog entry to enhance"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Enhanced function catalog entry"}},"side_effects":["Configuration state changes"],"dependencies":["datetime"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.033219575881958,"execution_count":1,"average_duration":1.033219575881958,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"CatalogFieldEnhancer.enhance_return_value_attributes","module":"functions.enhance_catalog_fields","class":"CatalogFieldEnhancer","description":"Enhance return value attributes based on return type and function purpose","parameters":["self","func_entry: Dict[str, Any]"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_catalog_enhancement.py","test_description":"Tests enhancement of return value attribute specifications","field_attributes":{"func_entry":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Function catalog entry"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Enhanced return value attributes"}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.033219575881958,"execution_count":1,"average_duration":1.033219575881958,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"CatalogFieldEnhancer.infer_dependencies","module":"functions.enhance_catalog_fields","class":"CatalogFieldEnhancer","description":"Infer dependencies based on function characteristics","parameters":["self","func_entry: Dict[str, Any]"],"return_type":"List[str]","test_file":"tests/unit/test_catalog_enhancement.py","test_description":"Tests dependency inference from function and module patterns","field_attributes":{"func_entry":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Function catalog entry"},"return_value":{"type":"List[str]","constraint":"valid list","description":"List of inferred dependencies"}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.033219575881958,"execution_count":1,"average_duration":1.033219575881958,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"CatalogFieldEnhancer.infer_side_effects","module":"functions.enhance_catalog_fields","class":"CatalogFieldEnhancer","description":"Infer side effects based on function characteristics","parameters":["self","func_entry: Dict[str, Any]"],"return_type":"List[str]","test_file":"tests/unit/test_catalog_enhancement.py","test_description":"Tests side effect inference from function patterns","field_attributes":{"func_entry":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Function catalog entry"},"return_value":{"type":"List[str]","constraint":"valid list","description":"List of inferred side effects"}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.033219575881958,"execution_count":1,"average_duration":1.033219575881958,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"CatalogFieldEnhancer.needs_enhancement","module":"functions.enhance_catalog_fields","class":"CatalogFieldEnhancer","description":"Check if function entry needs field enhancement","parameters":["self","func_entry: Dict[str, Any]"],"return_type":"bool","test_file":"tests/unit/test_catalog_enhancement.py","test_description":"Tests determination of whether function entry needs enhancement","field_attributes":{"func_entry":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Function catalog entry"},"return_value":{"type":"bool","constraint":"boolean value","description":"True if enhancement is needed"}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.033219575881958,"execution_count":1,"average_duration":1.033219575881958,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"CatalogFieldEnhancer.process_catalog","module":"functions.enhance_catalog_fields","class":"CatalogFieldEnhancer","description":"Process the entire function catalog","parameters":["self","catalog_path: Path"],"return_type":"None","test_file":"tests/unit/test_catalog_enhancement.py","test_description":"Tests processing and enhancement of entire function catalog","field_attributes":{"catalog_path":{"type":"Path","constraint":"valid file path","description":"Path to function catalog file"},"return_value":{"type":"None","constraint":"no return value","description":"Processes catalog in place"}},"side_effects":["File I/O operations","Creates or modifies files","Logging operations"],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.033219575881958,"execution_count":1,"average_duration":1.033219575881958,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"CharacterConsistency.to_dict","module":"src.compareblocks.features.consistency","class":"CharacterConsistency","description":"Convert to dictionary format.","parameters":["self"],"return_type":"Any","test_file":"tests/integration/test_consistency.py","test_description":"Tests CharacterConsistency.CharacterConsistency.to_dict functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"CharacterConsistencyTracker.add_override_terms","module":"src.compareblocks.features.consistency","class":"CharacterConsistencyTracker","description":"Add terms where consistency trumps spelling.","parameters":["self","terms: Any"],"return_type":"Any","test_file":"tests/integration/test_consistency.py","test_description":"Tests CharacterConsistencyTracker.CharacterConsistencyTracker.add_override_terms functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"CharacterConsistencyTracker.calculate_character_consistency","module":"src.compareblocks.features.consistency","class":"CharacterConsistencyTracker","description":"Calculate character-by-character consistency across variations for a single block.","parameters":["self","variations: Any","normalize_for_comparison: Any","include_multiple_methods: Any"],"return_type":"Any","test_file":"tests/integration/test_consistency.py","test_description":"Tests CharacterConsistencyTracker.CharacterConsistencyTracker.calculate_character_consistency functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"CharacterConsistencyTracker.calculate_spelling_accuracy","module":"src.compareblocks.features.consistency","class":"CharacterConsistencyTracker","description":"Calculate spelling accuracy score based on word consistency.","parameters":["self","word_details: Any"],"return_type":"Any","test_file":"tests/integration/test_consistency.py","test_description":"Tests CharacterConsistencyTracker.CharacterConsistencyTracker.calculate_spelling_accuracy functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"CharacterConsistencyTracker.calculate_word_consistency","module":"src.compareblocks.features.consistency","class":"CharacterConsistencyTracker","description":"Calculate word-level consistency with spelling accuracy.","parameters":["self","variations: Any"],"return_type":"Any","test_file":"tests/integration/test_consistency.py","test_description":"Tests CharacterConsistencyTracker.CharacterConsistencyTracker.calculate_word_consistency functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"CharacterConsistencyTracker.is_override_term","module":"src.compareblocks.features.consistency","class":"CharacterConsistencyTracker","description":"Check if word is an override term (acronym/domain term).","parameters":["self","word: Any"],"return_type":"Any","test_file":"tests/integration/test_consistency.py","test_description":"Tests CharacterConsistencyTracker.CharacterConsistencyTracker.is_override_term functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"CharacterConsistencyTracker.track_consistency_for_block","module":"src.compareblocks.features.consistency","class":"CharacterConsistencyTracker","description":"Track comprehensive consistency metrics for a block.","parameters":["self","block_id: Any","variations: Any"],"return_type":"Any","test_file":"tests/integration/test_consistency.py","test_description":"Tests CharacterConsistencyTracker.CharacterConsistencyTracker.track_consistency_for_block functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"CharacterConsistencyTracker.track_consistency_for_block_with_context","module":"src.compareblocks.features.consistency","class":"CharacterConsistencyTracker","description":"Track consistency for a block with optional surrounding block context.","parameters":["self","block_id: Any","variations: Any","surrounding_blocks: Any"],"return_type":"Any","test_file":"tests/integration/test_consistency.py","test_description":"Tests CharacterConsistencyTracker.CharacterConsistencyTracker.track_consistency_for_block_with_context functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"CharacterConsistencyTracker.update_consistency_with_new_files","module":"src.compareblocks.features.consistency","class":"CharacterConsistencyTracker","description":"Update consistency metrics when new associated files are added.","parameters":["self","existing_consistency: Any","new_variations: Any"],"return_type":"Any","test_file":"tests/integration/test_consistency.py","test_description":"Tests CharacterConsistencyTracker.CharacterConsistencyTracker.update_consistency_with_new_files functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"ComprehensiveEngineGBGProcessor.__init__","module":"compareblocks.engines.comprehensive_engine_gbg_processor","class":"ComprehensiveEngineGBGProcessor","description":"Initialize the comprehensive processor.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_comprehensive_engine_gbg_processor.py","test_description":"Tests ComprehensiveEngineGBGProcessor.__init__ functionality","field_attributes":{},"side_effects":["Initializes object state"],"dependencies":[],"source_file":"src\\compareblocks\\engines\\comprehensive_engine_gbg_processor.py","line_number":77,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8798336982727051,"execution_count":1,"average_duration":0.8798336982727051,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ComprehensiveEngineGBGProcessor.check_existing_extraction_results","module":"compareblocks.engines.comprehensive_engine_gbg_processor","class":"ComprehensiveEngineGBGProcessor","description":"Check if extraction results already exist for this engine and configuration.","parameters":["self","engine_name","config_result","pdf_path"],"return_type":"tuple[bool, Optional[str]]","test_file":"tests/unit/test_comprehensive_engine_gbg_processor.py","test_description":"Tests ComprehensiveEngineGBGProcessor.check_existing_extraction_results functionality","field_attributes":{"return_value":{"type":"tuple[bool, Optional[str]]","constraint":"valid tuple","description":"Tuple result"}},"side_effects":[],"dependencies":[],"source_file":"src\\compareblocks\\engines\\comprehensive_engine_gbg_processor.py","line_number":124,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8798336982727051,"execution_count":1,"average_duration":0.8798336982727051,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ComprehensiveEngineGBGProcessor.check_existing_results","module":"compareblocks.engines.comprehensive_engine_gbg_processor","class":"ComprehensiveEngineGBGProcessor","description":"Check for existing results with same engine and configuration.","parameters":["self","gbg_analysis","engine_name","config_hash"],"return_type":"List[Dict[str, Any]]","test_file":"tests/unit/test_comprehensive_engine_gbg_processor.py","test_description":"Tests ComprehensiveEngineGBGProcessor.check_existing_results functionality","field_attributes":{"return_value":{"type":"List[Dict[str, Any]]","constraint":"valid list","description":"List of results"}},"side_effects":[],"dependencies":[],"source_file":"src\\compareblocks\\engines\\comprehensive_engine_gbg_processor.py","line_number":128,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8798336982727051,"execution_count":1,"average_duration":0.8798336982727051,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ComprehensiveEngineGBGProcessor.create_processing_summary","module":"compareblocks.engines.comprehensive_engine_gbg_processor","class":"ComprehensiveEngineGBGProcessor","description":"Create processing summary.","parameters":["self","engine_results","total_time"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_comprehensive_engine_gbg_processor.py","test_description":"Tests ComprehensiveEngineGBGProcessor.create_processing_summary functionality","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Dictionary result"}},"side_effects":[],"dependencies":[],"source_file":"src\\compareblocks\\engines\\comprehensive_engine_gbg_processor.py","line_number":471,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8798336982727051,"execution_count":1,"average_duration":0.8798336982727051,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ComprehensiveEngineGBGProcessor.enhance_engine_output_with_configuration","module":"compareblocks.engines.comprehensive_engine_gbg_processor","class":"ComprehensiveEngineGBGProcessor","description":"Enhance engine output file with configuration metadata.","parameters":["self","output_path","config_result","processing_time"],"return_type":"None","test_file":"tests/unit/test_comprehensive_engine_gbg_processor.py","test_description":"Tests ComprehensiveEngineGBGProcessor.enhance_engine_output_with_configuration functionality","field_attributes":{},"side_effects":[],"dependencies":[],"source_file":"src\\compareblocks\\engines\\comprehensive_engine_gbg_processor.py","line_number":196,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8798336982727051,"execution_count":1,"average_duration":0.8798336982727051,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ComprehensiveEngineGBGProcessor.enhance_output_with_configuration_metadata","module":"compareblocks.engines.comprehensive_engine_gbg_processor","class":"ComprehensiveEngineGBGProcessor","description":"Enhance engine output file with configuration metadata.","parameters":["self","output_path","configuration","config_hash","processing_timestamp"],"return_type":"None","test_file":"tests/unit/test_comprehensive_engine_gbg_processor.py","test_description":"Tests ComprehensiveEngineGBGProcessor.enhance_output_with_configuration_metadata functionality","field_attributes":{},"side_effects":[],"dependencies":[],"source_file":"src\\compareblocks\\engines\\comprehensive_engine_gbg_processor.py","line_number":189,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8798336982727051,"execution_count":1,"average_duration":0.8798336982727051,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ComprehensiveEngineGBGProcessor.generate_config_hash","module":"compareblocks.engines.comprehensive_engine_gbg_processor","class":"ComprehensiveEngineGBGProcessor","description":"Generate hash for configuration to detect duplicates.","parameters":["self","configuration"],"return_type":"str","test_file":"tests/unit/test_comprehensive_engine_gbg_processor.py","test_description":"Tests ComprehensiveEngineGBGProcessor.generate_config_hash functionality","field_attributes":{"return_value":{"type":"str","constraint":"valid string","description":"String result"}},"side_effects":[],"dependencies":[],"source_file":"src\\compareblocks\\engines\\comprehensive_engine_gbg_processor.py","line_number":106,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8798336982727051,"execution_count":1,"average_duration":0.8798336982727051,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ComprehensiveEngineGBGProcessor.get_available_engines","module":"compareblocks.engines.comprehensive_engine_gbg_processor","class":"ComprehensiveEngineGBGProcessor","description":"Get list of available extraction engines.","parameters":["self"],"return_type":"List[str]","test_file":"tests/unit/test_comprehensive_engine_gbg_processor.py","test_description":"Tests ComprehensiveEngineGBGProcessor.get_available_engines functionality","field_attributes":{"return_value":{"type":"List[str]","constraint":"valid list","description":"List of results"}},"side_effects":[],"dependencies":[],"source_file":"src\\compareblocks\\engines\\comprehensive_engine_gbg_processor.py","line_number":84,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8798336982727051,"execution_count":1,"average_duration":0.8798336982727051,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ComprehensiveEngineGBGProcessor.get_configuration_hash","module":"compareblocks.engines.comprehensive_engine_gbg_processor","class":"ComprehensiveEngineGBGProcessor","description":"Generate hash for configuration to detect duplicates.","parameters":["self","configuration"],"return_type":"str","test_file":"tests/unit/test_comprehensive_engine_gbg_processor.py","test_description":"Tests ComprehensiveEngineGBGProcessor.get_configuration_hash functionality","field_attributes":{"return_value":{"type":"str","constraint":"valid string","description":"String result"}},"side_effects":[],"dependencies":[],"source_file":"src\\compareblocks\\engines\\comprehensive_engine_gbg_processor.py","line_number":110,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8798336982727051,"execution_count":1,"average_duration":0.8798336982727051,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ComprehensiveEngineGBGProcessor.get_engine_configuration","module":"compareblocks.engines.comprehensive_engine_gbg_processor","class":"ComprehensiveEngineGBGProcessor","description":"Get optimized or default configuration for an engine.","parameters":["self","engine_name","pdf_path"],"return_type":"EngineConfigurationResult","test_file":"tests/unit/test_comprehensive_engine_gbg_processor.py","test_description":"Tests ComprehensiveEngineGBGProcessor.get_engine_configuration functionality","field_attributes":{},"side_effects":[],"dependencies":[],"source_file":"src\\compareblocks\\engines\\comprehensive_engine_gbg_processor.py","line_number":236,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8798336982727051,"execution_count":1,"average_duration":0.8798336982727051,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ComprehensiveEngineGBGProcessor.get_pdf_hash_for_configuration","module":"compareblocks.engines.comprehensive_engine_gbg_processor","class":"ComprehensiveEngineGBGProcessor","description":"Get PDF hash for configuration lookup.","parameters":["self","pdf_path"],"return_type":"str","test_file":"tests/unit/test_comprehensive_engine_gbg_processor.py","test_description":"Tests ComprehensiveEngineGBGProcessor.get_pdf_hash_for_configuration functionality","field_attributes":{"return_value":{"type":"str","constraint":"valid string","description":"String result"}},"side_effects":["Opens/closes PDF documents"],"dependencies":["fitz","PyMuPDF"],"source_file":"src\\compareblocks\\engines\\comprehensive_engine_gbg_processor.py","line_number":88,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8798336982727051,"execution_count":1,"average_duration":0.8798336982727051,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ComprehensiveEngineGBGProcessor.load_existing_gbg_analysis","module":"compareblocks.engines.comprehensive_engine_gbg_processor","class":"ComprehensiveEngineGBGProcessor","description":"Load existing GBG analysis file.","parameters":["self","gbg_analysis_path"],"return_type":"Optional[Dict[str, Any]]","test_file":"tests/unit/test_comprehensive_engine_gbg_processor.py","test_description":"Tests ComprehensiveEngineGBGProcessor.load_existing_gbg_analysis functionality","field_attributes":{},"side_effects":["File I/O operations"],"dependencies":["pathlib","json"],"source_file":"src\\compareblocks\\engines\\comprehensive_engine_gbg_processor.py","line_number":355,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8798336982727051,"execution_count":1,"average_duration":0.8798336982727051,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ComprehensiveEngineGBGProcessor.process_all_engines_comprehensive","module":"compareblocks.engines.comprehensive_engine_gbg_processor","class":"ComprehensiveEngineGBGProcessor","description":"Process all available engines with optimized configurations and integrate into GBG analysis.","parameters":["self","pdf_path","gbg_analysis_path","overwrite_mode"],"return_type":"ComprehensiveProcessingResult","test_file":"tests/unit/test_comprehensive_engine_gbg_processor.py","test_description":"Tests ComprehensiveEngineGBGProcessor.process_all_engines_comprehensive functionality","field_attributes":{},"side_effects":[],"dependencies":[],"source_file":"src\\compareblocks\\engines\\comprehensive_engine_gbg_processor.py","line_number":508,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8798336982727051,"execution_count":1,"average_duration":0.8798336982727051,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ComprehensiveEngineGBGProcessor.process_engine_with_configuration","module":"compareblocks.engines.comprehensive_engine_gbg_processor","class":"ComprehensiveEngineGBGProcessor","description":"Process a single engine with its configuration.","parameters":["self","engine_name","config_result","pdf_path","overwrite_mode"],"return_type":"ComprehensiveEngineResult","test_file":"tests/unit/test_comprehensive_engine_gbg_processor.py","test_description":"Tests ComprehensiveEngineGBGProcessor.process_engine_with_configuration functionality","field_attributes":{},"side_effects":[],"dependencies":[],"source_file":"src\\compareblocks\\engines\\comprehensive_engine_gbg_processor.py","line_number":280,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8798336982727051,"execution_count":1,"average_duration":0.8798336982727051,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ComprehensiveEngineGBGProcessor.process_specific_engines","module":"compareblocks.engines.comprehensive_engine_gbg_processor","class":"ComprehensiveEngineGBGProcessor","description":"Process specific engines with optimized configurations.","parameters":["self","engine_names","pdf_path","gbg_analysis_path","overwrite_mode"],"return_type":"ComprehensiveProcessingResult","test_file":"tests/unit/test_comprehensive_engine_gbg_processor.py","test_description":"Tests ComprehensiveEngineGBGProcessor.process_specific_engines functionality","field_attributes":{},"side_effects":[],"dependencies":[],"source_file":"src\\compareblocks\\engines\\comprehensive_engine_gbg_processor.py","line_number":657,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8798336982727051,"execution_count":1,"average_duration":0.8798336982727051,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ComprehensiveEngineGBGProcessor.save_updated_gbg_analysis","module":"compareblocks.engines.comprehensive_engine_gbg_processor","class":"ComprehensiveEngineGBGProcessor","description":"Save updated GBG analysis to file.","parameters":["self","gbg_analysis","output_path"],"return_type":"str","test_file":"tests/unit/test_comprehensive_engine_gbg_processor.py","test_description":"Tests ComprehensiveEngineGBGProcessor.save_updated_gbg_analysis functionality","field_attributes":{"return_value":{"type":"str","constraint":"valid string","description":"String result"}},"side_effects":[],"dependencies":[],"source_file":"src\\compareblocks\\engines\\comprehensive_engine_gbg_processor.py","line_number":451,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8798336982727051,"execution_count":1,"average_duration":0.8798336982727051,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ComprehensiveEngineGBGProcessor.should_process_engine","module":"compareblocks.engines.comprehensive_engine_gbg_processor","class":"ComprehensiveEngineGBGProcessor","description":"Determine if engine should be processed based on overwrite mode and existing results.","parameters":["self","engine_name","overwrite_mode","existing_found","existing_path"],"return_type":"bool","test_file":"tests/unit/test_comprehensive_engine_gbg_processor.py","test_description":"Tests ComprehensiveEngineGBGProcessor.should_process_engine functionality","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"Boolean result"}},"side_effects":[],"dependencies":[],"source_file":"src\\compareblocks\\engines\\comprehensive_engine_gbg_processor.py","line_number":172,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8798336982727051,"execution_count":1,"average_duration":0.8798336982727051,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ComprehensiveEngineGBGProcessor.should_skip_processing","module":"compareblocks.engines.comprehensive_engine_gbg_processor","class":"ComprehensiveEngineGBGProcessor","description":"Determine if processing should be skipped based on existing results and overwrite mode.","parameters":["self","gbg_analysis","engine_name","config_hash"],"return_type":"bool","test_file":"tests/unit/test_comprehensive_engine_gbg_processor.py","test_description":"Tests ComprehensiveEngineGBGProcessor.should_skip_processing functionality","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"Boolean result"}},"side_effects":[],"dependencies":[],"source_file":"src\\compareblocks\\engines\\comprehensive_engine_gbg_processor.py","line_number":165,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8798336982727051,"execution_count":1,"average_duration":0.8798336982727051,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ComprehensiveEngineGBGProcessor.update_gbg_analysis_with_engine_results","module":"compareblocks.engines.comprehensive_engine_gbg_processor","class":"ComprehensiveEngineGBGProcessor","description":"Update GBG analysis with engine results.","parameters":["self","gbg_analysis","engine_results"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_comprehensive_engine_gbg_processor.py","test_description":"Tests ComprehensiveEngineGBGProcessor.update_gbg_analysis_with_engine_results functionality","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Dictionary result"}},"side_effects":[],"dependencies":[],"source_file":"src\\compareblocks\\engines\\comprehensive_engine_gbg_processor.py","line_number":397,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8798336982727051,"execution_count":1,"average_duration":0.8798336982727051,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ComprehensiveEngineGBGProcessor.validate_gbg_analysis_structure","module":"compareblocks.engines.comprehensive_engine_gbg_processor","class":"ComprehensiveEngineGBGProcessor","description":"Validate GBG analysis structure.","parameters":["self","analysis"],"return_type":"bool","test_file":"tests/unit/test_comprehensive_engine_gbg_processor.py","test_description":"Tests ComprehensiveEngineGBGProcessor.validate_gbg_analysis_structure functionality","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"Boolean result"}},"side_effects":["May raise ValidationException"],"dependencies":["jsonschema"],"source_file":"src\\compareblocks\\engines\\comprehensive_engine_gbg_processor.py","line_number":378,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8798336982727051,"execution_count":1,"average_duration":0.8798336982727051,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ConfigurationManagerWidget.__init__","module":"compareblocks.gui.config_forms","class":"ConfigurationManagerWidget","description":"Function description","parameters":["self","config_manager"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests ConfigurationManagerWidget.__init__ functionality","field_attributes":{"config_manager":{"type":"Any","constraint":"valid input","description":"Parameter config_manager"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":585,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ConfigurationManagerWidget.add_pdf_override_tab","module":"compareblocks.gui.config_forms","class":"ConfigurationManagerWidget","description":"Add a tab for PDF-specific overrides.","parameters":["self","engine_name","pdf_path"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests ConfigurationManagerWidget.add_pdf_override_tab functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":611,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ConfigurationManagerWidget.on_configuration_changed","module":"compareblocks.gui.config_forms","class":"ConfigurationManagerWidget","description":"Handle configuration changes.","parameters":["self","engine_name","settings"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests ConfigurationManagerWidget.on_configuration_changed functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"settings":{"type":"Any","constraint":"valid input","description":"Parameter settings"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":628,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ConfigurationManagerWidget.on_override_created","module":"compareblocks.gui.config_forms","class":"ConfigurationManagerWidget","description":"Handle PDF override creation.","parameters":["self","engine_name","pdf_path","overrides"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests ConfigurationManagerWidget.on_override_created functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"overrides":{"type":"Any","constraint":"valid input","description":"Parameter overrides"},"return_value":{"type":"Any","constraint":"valid return value","description":"Created Any object"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":634,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ConfigurationManagerWidget.on_proposal_approved","module":"compareblocks.gui.config_forms","class":"ConfigurationManagerWidget","description":"Handle proposal approval.","parameters":["self","proposal_id"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests ConfigurationManagerWidget.on_proposal_approved functionality","field_attributes":{"proposal_id":{"type":"Any","constraint":"valid input","description":"Parameter proposal_id"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":638,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ConfigurationManagerWidget.on_proposal_rejected","module":"compareblocks.gui.config_forms","class":"ConfigurationManagerWidget","description":"Handle proposal rejection.","parameters":["self","proposal_id"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests ConfigurationManagerWidget.on_proposal_rejected functionality","field_attributes":{"proposal_id":{"type":"Any","constraint":"valid input","description":"Parameter proposal_id"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":642,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ConfigurationManagerWidget.setup_ui","module":"compareblocks.gui.config_forms","class":"ConfigurationManagerWidget","description":"Setup the main configuration management UI.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests ConfigurationManagerWidget.setup_ui functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":590,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ConsensusDecision.to_dict","module":"src.compareblocks.consensus.policy","class":"ConsensusDecision","description":"Convert to dictionary format.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_consensus_policy.py","test_description":"Tests to_dict functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.110443353652954,"execution_count":1,"average_duration":1.110443353652954,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ConsensusScorer.__init__","module":"src.compareblocks.consensus.score","class":"ConsensusScorer","description":"Initialize the consensus scorer.","parameters":["self","weights","thresholds"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests __init__ functionality with real consensus data","field_attributes":{"weights":{"type":"Any","constraint":"valid input","description":"Parameter weights"},"thresholds":{"type":"Any","constraint":"valid input","description":"Parameter thresholds"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ConsensusScorer.get_best_variation","module":"src.compareblocks.consensus.score","class":"ConsensusScorer","description":"Get the best scoring variation.","parameters":["self","variations","context_texts"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests get_best_variation functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ConsensusScorer.get_configuration","module":"src.compareblocks.consensus.score","class":"ConsensusScorer","description":"Get current scorer configuration.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests get_configuration functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ConsensusScorer.get_scoring_statistics","module":"src.compareblocks.consensus.score","class":"ConsensusScorer","description":"Get scoring statistics for a set of variations.","parameters":["self","variations","context_texts"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests get_scoring_statistics functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ConsensusScorer.rank_variations","module":"src.compareblocks.consensus.score","class":"ConsensusScorer","description":"Rank variations by score (best first).","parameters":["self","variations","context_texts"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests rank_variations functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ConsensusScorer.score_variation","module":"src.compareblocks.consensus.score","class":"ConsensusScorer","description":"Score a single text variation.","parameters":["self","variation_text","engine_name","variation_index","all_variations","expected_orientation","actual_orientation","context_texts"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests score_variation functionality with real consensus data","field_attributes":{"variation_text":{"type":"Any","constraint":"valid input","description":"Parameter variation_text"},"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"variation_index":{"type":"Any","constraint":"valid input","description":"Parameter variation_index"},"all_variations":{"type":"Any","constraint":"valid input","description":"Parameter all_variations"},"expected_orientation":{"type":"Any","constraint":"valid input","description":"Parameter expected_orientation"},"actual_orientation":{"type":"Any","constraint":"valid input","description":"Parameter actual_orientation"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ConsensusScorer.score_variations","module":"src.compareblocks.consensus.score","class":"ConsensusScorer","description":"Score multiple text variations.","parameters":["self","variations","context_texts"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests score_variations functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ConsensusScorer.update_thresholds","module":"src.compareblocks.consensus.score","class":"ConsensusScorer","description":"Update scoring thresholds.","parameters":["self","new_thresholds"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests update_thresholds functionality with real consensus data","field_attributes":{"new_thresholds":{"type":"Any","constraint":"valid input","description":"Parameter new_thresholds"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ConsensusScorer.update_weights","module":"src.compareblocks.consensus.score","class":"ConsensusScorer","description":"Update scoring weights.","parameters":["self","new_weights"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests update_weights functionality with real consensus data","field_attributes":{"new_weights":{"type":"Any","constraint":"valid input","description":"Parameter new_weights"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ConsistencyIntegrationManager.apply_consistency_overrides","module":"src.compareblocks.features.consistency_integration","class":"ConsistencyIntegrationManager","description":"Apply consistency overrides for specific terms in a block.","parameters":["self","block_id: Any","override_terms: Any"],"return_type":"Any","test_file":"tests/integration/test_consistency_integration.py","test_description":"Tests ConsistencyIntegrationManager.ConsistencyIntegrationManager.apply_consistency_overrides functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"ConsistencyIntegrationManager.get_consistency_summary_for_pdf","module":"src.compareblocks.features.consistency_integration","class":"ConsistencyIntegrationManager","description":"Get comprehensive consistency summary for a PDF.","parameters":["self","pdf_path: Any"],"return_type":"Any","test_file":"tests/integration/test_consistency_integration.py","test_description":"Tests ConsistencyIntegrationManager.ConsistencyIntegrationManager.get_consistency_summary_for_pdf functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"ConsistencyIntegrationManager.get_dynamic_consistency_percentages","module":"src.compareblocks.features.consistency_integration","class":"ConsistencyIntegrationManager","description":"Get dynamic consistency percentages for all blocks in a PDF.","parameters":["self","pdf_path: Any"],"return_type":"Any","test_file":"tests/integration/test_consistency_integration.py","test_description":"Tests ConsistencyIntegrationManager.ConsistencyIntegrationManager.get_dynamic_consistency_percentages functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"ConsistencyIntegrationManager.track_block_consistency_with_associations","module":"src.compareblocks.features.consistency_integration","class":"ConsistencyIntegrationManager","description":"Track block consistency including all associated files for the PDF.","parameters":["self","pdf_path: Any","block_id: Any","block_variations: Any","block_position: Any"],"return_type":"Any","test_file":"tests/integration/test_consistency_integration.py","test_description":"Tests ConsistencyIntegrationManager.ConsistencyIntegrationManager.track_block_consistency_with_associations functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"ConsistencyIntegrationManager.track_block_consistency_with_surrounding_context","module":"src.compareblocks.features.consistency_integration","class":"ConsistencyIntegrationManager","description":"Track block consistency with surrounding block context when needed.","parameters":["self","pdf_path: Any","block_id: Any","block_variations: Any","surrounding_blocks: Any"],"return_type":"Any","test_file":"tests/integration/test_consistency_integration.py","test_description":"Tests ConsistencyIntegrationManager.ConsistencyIntegrationManager.track_block_consistency_with_surrounding_context functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"ConsistencyIntegrationManager.update_consistency_with_new_association","module":"src.compareblocks.features.consistency_integration","class":"ConsistencyIntegrationManager","description":"Update block consistency when a new associated file is added.","parameters":["self","pdf_path: Any","block_id: Any","new_file_path: Any"],"return_type":"Any","test_file":"tests/integration/test_consistency_integration.py","test_description":"Tests ConsistencyIntegrationManager.ConsistencyIntegrationManager.update_consistency_with_new_association functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"ConsistencyIntegrationManager.validate_consistency_state","module":"src.compareblocks.features.consistency_integration","class":"ConsistencyIntegrationManager","description":"Validate consistency state for a PDF and identify issues.","parameters":["self","pdf_path: Any"],"return_type":"Any","test_file":"tests/integration/test_consistency_integration.py","test_description":"Tests ConsistencyIntegrationManager.ConsistencyIntegrationManager.validate_consistency_state functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"ConsistencyOverrideManager.add_acronyms","module":"src.compareblocks.features.consistency","class":"ConsistencyOverrideManager","description":"Add known acronyms.","parameters":["self","acronyms: Any"],"return_type":"Any","test_file":"tests/integration/test_consistency.py","test_description":"Tests ConsistencyOverrideManager.ConsistencyOverrideManager.add_acronyms functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"ConsistencyOverrideManager.add_custom_overrides","module":"src.compareblocks.features.consistency","class":"ConsistencyOverrideManager","description":"Add custom override terms.","parameters":["self","terms: Any"],"return_type":"Any","test_file":"tests/integration/test_consistency.py","test_description":"Tests ConsistencyOverrideManager.ConsistencyOverrideManager.add_custom_overrides functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"ConsistencyOverrideManager.add_domain_terms","module":"src.compareblocks.features.consistency","class":"ConsistencyOverrideManager","description":"Add domain-specific terms.","parameters":["self","terms: Any"],"return_type":"Any","test_file":"tests/integration/test_consistency.py","test_description":"Tests ConsistencyOverrideManager.ConsistencyOverrideManager.add_domain_terms functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"ConsistencyOverrideManager.get_all_override_terms","module":"src.compareblocks.features.consistency","class":"ConsistencyOverrideManager","description":"Get all override terms.","parameters":["self"],"return_type":"Any","test_file":"tests/integration/test_consistency.py","test_description":"Tests ConsistencyOverrideManager.ConsistencyOverrideManager.get_all_override_terms functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"ConsistencyOverrideManager.should_override_spelling","module":"src.compareblocks.features.consistency","class":"ConsistencyOverrideManager","description":"Determine if consistency should trump spelling for a word.","parameters":["self","word: Any","consistency_score: Any","spelling_score: Any"],"return_type":"Any","test_file":"tests/integration/test_consistency.py","test_description":"Tests ConsistencyOverrideManager.ConsistencyOverrideManager.should_override_spelling functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"ContentAligner.__init__","module":"compareblocks.association.alignment","class":"ContentAligner","description":"Initialize content aligner.","parameters":["self","similarity_threshold"],"return_type":"Any","test_file":"tests/unit/test_alignment.py","test_description":"Tests ContentAligner.__init__ functionality","field_attributes":{"similarity_threshold":{"type":"Any","constraint":"valid input","description":"Parameter similarity_threshold"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\association\\alignment.py","line_number":27,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8660709857940674,"execution_count":1,"average_duration":0.8660709857940674,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ContentAligner.align_to_blocks","module":"compareblocks.association.alignment","class":"ContentAligner","description":"Align content to blocks using fuzzy matching.","parameters":["self","content","blocks"],"return_type":"List[AlignmentResult]","test_file":"tests/unit/test_alignment.py","test_description":"Tests ContentAligner.align_to_blocks functionality","field_attributes":{"content":{"type":"Any","constraint":"valid input","description":"Parameter content"},"blocks":{"type":"Any","constraint":"valid input","description":"Parameter blocks"},"return_value":{"type":"List[AlignmentResult]","constraint":"valid list","description":"List[AlignmentResult] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\association\\alignment.py","line_number":31,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8660709857940674,"execution_count":1,"average_duration":0.8660709857940674,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ContextFeatures.to_dict","module":"compareblocks.features.context","class":"ContextFeatures","description":"Convert features to dictionary format.","parameters":["self"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_context.py","test_description":"Tests ContextFeatures.to_dict functionality","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Dict[str, Any] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"source_file":"src\\compareblocks\\features\\context.py","line_number":24,"test_functions":[],"test_count":0}
{"function_name":"ContextSimilarityExtractor.__init__","module":"src.compareblocks.features.context","class":"ContextSimilarityExtractor","description":"Initialize the context similarity extractor.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_features_context.py","test_description":"Tests __init__ functionality with real PDF data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Extracted any data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2251174449920654,"execution_count":1,"average_duration":1.2251174449920654,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ContextSimilarityExtractor.compare_context_relevance","module":"src.compareblocks.features.context","class":"ContextSimilarityExtractor","description":"Compare context relevance scores across variations.","parameters":["self","variations","context_texts"],"return_type":"Any","test_file":"tests/unit/test_features_context.py","test_description":"Tests compare_context_relevance functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Extracted any data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2251174449920654,"execution_count":1,"average_duration":1.2251174449920654,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ContextSimilarityExtractor.extract_context_features","module":"src.compareblocks.features.context","class":"ContextSimilarityExtractor","description":"Extract context similarity features from text.","parameters":["self","text","context_texts"],"return_type":"ContextFeatures","test_file":"tests/unit/test_features_context.py","test_description":"Tests extract_context_features functionality with real PDF data","field_attributes":{"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"ContextFeatures","constraint":"valid return value","description":"Extracted contextfeatures data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2251174449920654,"execution_count":1,"average_duration":1.2251174449920654,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ContextSimilarityExtractor.extract_features_for_variations","module":"src.compareblocks.features.context","class":"ContextSimilarityExtractor","description":"Extract context features for multiple variations.","parameters":["self","variations","context_texts"],"return_type":"Any","test_file":"tests/unit/test_features_context.py","test_description":"Tests extract_features_for_variations functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Extracted any data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2251174449920654,"execution_count":1,"average_duration":1.2251174449920654,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ContextSimilarityExtractor.get_context_statistics","module":"src.compareblocks.features.context","class":"ContextSimilarityExtractor","description":"Get context statistics for a set of variations.","parameters":["self","variations","context_texts"],"return_type":"Any","test_file":"tests/unit/test_features_context.py","test_description":"Tests get_context_statistics functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Extracted any data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2251174449920654,"execution_count":1,"average_duration":1.2251174449920654,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ContextSimilarityExtractor.rank_by_context_relevance","module":"src.compareblocks.features.context","class":"ContextSimilarityExtractor","description":"Rank variations by context relevance score.","parameters":["self","variations","context_texts"],"return_type":"Any","test_file":"tests/unit/test_features_context.py","test_description":"Tests rank_by_context_relevance functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Extracted any data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2251174449920654,"execution_count":1,"average_duration":1.2251174449920654,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"CoreFeatureExtractor.__init__","module":"src.compareblocks.features.core","class":"CoreFeatureExtractor","description":"Initialize the core feature extractor.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_features_lengths.py","test_description":"Tests __init__ functionality with real PDF data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Extracted any data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.21600341796875,"execution_count":1,"average_duration":1.21600341796875,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"CoreFeatureExtractor.compute_consistency_score","module":"src.compareblocks.features.core","class":"CoreFeatureExtractor","description":"Compute length consistency scores for variations based on median length.","parameters":["self","variations"],"return_type":"Any","test_file":"tests/unit/test_features_lengths.py","test_description":"Tests compute_consistency_score functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Extracted any data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.21600341796875,"execution_count":1,"average_duration":1.21600341796875,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"CoreFeatureExtractor.extract_features_for_variations","module":"src.compareblocks.features.core","class":"CoreFeatureExtractor","description":"Extract features for multiple variations and compute consistency scores.","parameters":["self","variations"],"return_type":"Any","test_file":"tests/unit/test_features_lengths.py","test_description":"Tests extract_features_for_variations functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Extracted any data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.21600341796875,"execution_count":1,"average_duration":1.21600341796875,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"CoreFeatureExtractor.extract_length_features","module":"src.compareblocks.features.core","class":"CoreFeatureExtractor","description":"Extract length and line features from a single text variation.","parameters":["self","text"],"return_type":"LengthFeatures","test_file":"tests/unit/test_features_lengths.py","test_description":"Tests extract_length_features functionality with real PDF data","field_attributes":{"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"return_value":{"type":"LengthFeatures","constraint":"valid return value","description":"Extracted lengthfeatures data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.21600341796875,"execution_count":1,"average_duration":1.21600341796875,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"CoreFeatureExtractor.get_variation_statistics","module":"src.compareblocks.features.core","class":"CoreFeatureExtractor","description":"Get summary statistics for a set of variations.","parameters":["self","variations"],"return_type":"Any","test_file":"tests/unit/test_features_lengths.py","test_description":"Tests get_variation_statistics functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Extracted any data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.21600341796875,"execution_count":1,"average_duration":1.21600341796875,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"CoverageTracker.__init__","module":"compareblocks.testing.coverage_tracker","class":"CoverageTracker","description":"Initialize coverage tracker.","parameters":["self","db_path"],"return_type":"Any","test_file":"tests/unit/test_coverage_tracker.py","test_description":"Tests CoverageTracker.__init__ functionality","field_attributes":{"db_path":{"type":"Any","constraint":"valid input","description":"Parameter db_path"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\coverage_tracker.py","line_number":62,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8736326694488525,"execution_count":1,"average_duration":0.8736326694488525,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"CoverageTracker.export_coverage_data","module":"compareblocks.testing.coverage_tracker","class":"CoverageTracker","description":"Export coverage data to JSON file.","parameters":["self","output_path"],"return_type":"str","test_file":"tests/unit/test_coverage_tracker.py","test_description":"Tests CoverageTracker.export_coverage_data functionality","field_attributes":{"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"return_value":{"type":"str","constraint":"non-empty string","description":"Retrieved str value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\coverage_tracker.py","line_number":524,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8736326694488525,"execution_count":1,"average_duration":0.8736326694488525,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"CoverageTracker.generate_coverage_report","module":"compareblocks.testing.coverage_tracker","class":"CoverageTracker","description":"Generate comprehensive coverage report.","parameters":["self","engine_name"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_coverage_tracker.py","test_description":"Tests CoverageTracker.generate_coverage_report functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Retrieved dict[str, any] value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\coverage_tracker.py","line_number":418,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8736326694488525,"execution_count":1,"average_duration":0.8736326694488525,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"CoverageTracker.get_file_type_coverage","module":"compareblocks.testing.coverage_tracker","class":"CoverageTracker","description":"Get file type coverage for an engine.","parameters":["self","engine_name"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_coverage_tracker.py","test_description":"Tests CoverageTracker.get_file_type_coverage functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Retrieved dict[str, any] value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\coverage_tracker.py","line_number":294,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8736326694488525,"execution_count":1,"average_duration":0.8736326694488525,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"CoverageTracker.get_parameter_coverage","module":"compareblocks.testing.coverage_tracker","class":"CoverageTracker","description":"Get parameter coverage for a specific function.","parameters":["self","engine_name","function_name"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_coverage_tracker.py","test_description":"Tests CoverageTracker.get_parameter_coverage functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"function_name":{"type":"Any","constraint":"valid input","description":"Parameter function_name"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Retrieved dict[str, any] value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\coverage_tracker.py","line_number":243,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8736326694488525,"execution_count":1,"average_duration":0.8736326694488525,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"CoverageTracker.identify_coverage_gaps","module":"compareblocks.testing.coverage_tracker","class":"CoverageTracker","description":"Identify coverage gaps for an engine.","parameters":["self","engine_name"],"return_type":"List[CoverageGap]","test_file":"tests/unit/test_coverage_tracker.py","test_description":"Tests CoverageTracker.identify_coverage_gaps functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"return_value":{"type":"List[CoverageGap]","constraint":"valid list","description":"Extracted or retrieved items"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\coverage_tracker.py","line_number":341,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8736326694488525,"execution_count":1,"average_duration":0.8736326694488525,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"CoverageTracker.record_file_type_test","module":"compareblocks.testing.coverage_tracker","class":"CoverageTracker","description":"Record a file type test result.","parameters":["self","record"],"return_type":"Any","test_file":"tests/unit/test_coverage_tracker.py","test_description":"Tests CoverageTracker.record_file_type_test functionality","field_attributes":{"record":{"type":"Any","constraint":"valid input","description":"Parameter record"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\coverage_tracker.py","line_number":167,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8736326694488525,"execution_count":1,"average_duration":0.8736326694488525,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"CoverageTracker.record_parameter_test","module":"compareblocks.testing.coverage_tracker","class":"CoverageTracker","description":"Record a parameter test result.","parameters":["self","record"],"return_type":"Any","test_file":"tests/unit/test_coverage_tracker.py","test_description":"Tests CoverageTracker.record_parameter_test functionality","field_attributes":{"record":{"type":"Any","constraint":"valid input","description":"Parameter record"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\coverage_tracker.py","line_number":134,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8736326694488525,"execution_count":1,"average_duration":0.8736326694488525,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DebugImageWidget.__init__","module":"compareblocks.gui.app","class":"DebugImageWidget","description":"Function description","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_app.py","test_description":"Tests DebugImageWidget.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"performance":{"memory_usage":"Medium - Image data processing"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["cv2","PySide6","PIL"],"source_file":"src\\compareblocks\\gui\\app.py","line_number":31,"test_functions":[],"test_count":0}
{"function_name":"DebugImageWidget.create_block_widget","module":"compareblocks.gui.app","class":"DebugImageWidget","description":"Create a widget for displaying a single block's debug information.","parameters":["self","region","tesseract_results","block_index"],"return_type":"QWidget","test_file":"tests/unit/test_app.py","test_description":"Tests DebugImageWidget.create_block_widget functionality","field_attributes":{"region":{"type":"Any","constraint":"valid input","description":"Parameter region"},"tesseract_results":{"type":"Any","constraint":"valid input","description":"Parameter tesseract_results"},"block_index":{"type":"Any","constraint":"valid input","description":"Parameter block_index"},"return_value":{"type":"QWidget","constraint":"valid return value","description":"Created QWidget object"},"performance":{"memory_usage":"Medium - Image data processing"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["cv2","PySide6","PIL"],"source_file":"src\\compareblocks\\gui\\app.py","line_number":145,"test_functions":[],"test_count":0}
{"function_name":"DebugImageWidget.create_image_label","module":"compareblocks.gui.app","class":"DebugImageWidget","description":"Create a label widget for displaying an image.","parameters":["self","image_path","title","max_size"],"return_type":"QWidget","test_file":"tests/unit/test_app.py","test_description":"Tests DebugImageWidget.create_image_label functionality","field_attributes":{"image_path":{"type":"Any","constraint":"valid input","description":"Parameter image_path"},"title":{"type":"Any","constraint":"valid input","description":"Parameter title"},"max_size":{"type":"Any","constraint":"valid input","description":"Parameter max_size"},"return_value":{"type":"QWidget","constraint":"valid return value","description":"Created QWidget object"},"performance":{"memory_usage":"Medium - Image data processing"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["cv2","PySide6","PIL"],"source_file":"src\\compareblocks\\gui\\app.py","line_number":227,"test_functions":[],"test_count":0}
{"function_name":"DebugImageWidget.display_debug_results","module":"compareblocks.gui.app","class":"DebugImageWidget","description":"Display the debug results in the UI.","parameters":["self","result"],"return_type":"Any","test_file":"tests/unit/test_app.py","test_description":"Tests DebugImageWidget.display_debug_results functionality","field_attributes":{"result":{"type":"Any","constraint":"valid input","description":"Parameter result"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"performance":{"memory_usage":"Medium - Image data processing"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["cv2","PySide6","PIL"],"source_file":"src\\compareblocks\\gui\\app.py","line_number":111,"test_functions":[],"test_count":0}
{"function_name":"DebugImageWidget.extract_debug_images","module":"compareblocks.gui.app","class":"DebugImageWidget","description":"Extract debug images for the selected page.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_app.py","test_description":"Tests DebugImageWidget.extract_debug_images functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Extracted any data"},"performance":{"memory_usage":"Medium - Image data processing"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["cv2","PySide6","PIL"],"source_file":"src\\compareblocks\\gui\\app.py","line_number":81,"test_functions":[],"test_count":0}
{"function_name":"DebugImageWidget.load_tesseract_results","module":"compareblocks.gui.app","class":"DebugImageWidget","description":"Load Tesseract results for the page.","parameters":["self","page_num"],"return_type":"List[Dict[str, Any]]","test_file":"tests/unit/test_app.py","test_description":"Tests DebugImageWidget.load_tesseract_results functionality","field_attributes":{"page_num":{"type":"Any","constraint":"valid input","description":"Parameter page_num"},"return_value":{"type":"List[Dict[str, Any]]","constraint":"valid list","description":"Extracted or retrieved items"},"performance":{"memory_usage":"Medium - Image data processing","io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","May raise FileNotFoundError"],"dependencies":["cv2","pathlib","PySide6","PIL"],"source_file":"src\\compareblocks\\gui\\app.py","line_number":131,"test_functions":[],"test_count":0}
{"function_name":"DebugImageWidget.setup_ui","module":"compareblocks.gui.app","class":"DebugImageWidget","description":"Setup the debug image UI.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_app.py","test_description":"Tests DebugImageWidget.setup_ui functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"performance":{"memory_usage":"Medium - Image data processing"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["cv2","PySide6","PIL"],"source_file":"src\\compareblocks\\gui\\app.py","line_number":36,"test_functions":[],"test_count":0}
{"function_name":"DecisionPolicyEngine.__init__","module":"src.compareblocks.consensus.policy","class":"DecisionPolicyEngine","description":"Initialize the decision policy engine.","parameters":["self","guard","policy_thresholds"],"return_type":"Any","test_file":"tests/unit/test_consensus_policy.py","test_description":"Tests __init__ functionality with real consensus data","field_attributes":{"guard":{"type":"Any","constraint":"valid input","description":"Parameter guard"},"policy_thresholds":{"type":"Any","constraint":"valid input","description":"Parameter policy_thresholds"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.110443353652954,"execution_count":1,"average_duration":1.110443353652954,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DecisionPolicyEngine.batch_decisions","module":"src.compareblocks.consensus.policy","class":"DecisionPolicyEngine","description":"Make decisions for multiple batches of variations.","parameters":["self","variation_batches","context_texts"],"return_type":"Any","test_file":"tests/unit/test_consensus_policy.py","test_description":"Tests batch_decisions functionality with real consensus data","field_attributes":{"variation_batches":{"type":"Any","constraint":"valid input","description":"Parameter variation_batches"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.110443353652954,"execution_count":1,"average_duration":1.110443353652954,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DecisionPolicyEngine.get_decision_statistics","module":"src.compareblocks.consensus.policy","class":"DecisionPolicyEngine","description":"Get statistics for a set of decisions.","parameters":["self","decisions"],"return_type":"Any","test_file":"tests/unit/test_consensus_policy.py","test_description":"Tests get_decision_statistics functionality with real consensus data","field_attributes":{"decisions":{"type":"Any","constraint":"valid input","description":"Parameter decisions"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.110443353652954,"execution_count":1,"average_duration":1.110443353652954,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DecisionPolicyEngine.get_policy_configuration","module":"src.compareblocks.consensus.policy","class":"DecisionPolicyEngine","description":"Get current policy configuration.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_consensus_policy.py","test_description":"Tests get_policy_configuration functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.110443353652954,"execution_count":1,"average_duration":1.110443353652954,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DecisionPolicyEngine.make_decision","module":"src.compareblocks.consensus.policy","class":"DecisionPolicyEngine","description":"Make a consensus decision for the given variations.","parameters":["self","variations","context_texts"],"return_type":"Any","test_file":"tests/unit/test_consensus_policy.py","test_description":"Tests make_decision functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.110443353652954,"execution_count":1,"average_duration":1.110443353652954,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DecisionPolicyEngine.update_policy_thresholds","module":"src.compareblocks.consensus.policy","class":"DecisionPolicyEngine","description":"Update policy thresholds.","parameters":["self","new_thresholds"],"return_type":"Any","test_file":"tests/unit/test_consensus_policy.py","test_description":"Tests update_policy_thresholds functionality with real consensus data","field_attributes":{"new_thresholds":{"type":"Any","constraint":"valid input","description":"Parameter new_thresholds"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.110443353652954,"execution_count":1,"average_duration":1.110443353652954,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DoclingEngine.__init__","module":"compareblocks.engines.docling_engine","class":"DoclingEngine","description":"Initialize Docling engine.","parameters":["self","pipeline","export_format"],"return_type":"Any","test_file":"tests/unit/test_docling_engine.py","test_description":"Tests DoclingEngine.__init__ functionality","field_attributes":{"pipeline":{"type":"Any","constraint":"valid input","description":"Parameter pipeline"},"export_format":{"type":"Any","constraint":"valid input","description":"Parameter export_format"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\docling_engine.py","line_number":47,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8686854839324951,"execution_count":1,"average_duration":0.8686854839324951,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DoclingEngine.extract_pdf","module":"compareblocks.engines.docling_engine","class":"DoclingEngine","description":"Extract text from PDF using Docling.","parameters":["self","pdf_path"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_docling_engine.py","test_description":"Tests DoclingEngine.extract_pdf functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Extracted dict[str, any] data"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\docling_engine.py","line_number":84,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8686854839324951,"execution_count":1,"average_duration":0.8686854839324951,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DoclingEngine.is_available","module":"compareblocks.engines.docling_engine","class":"DoclingEngine","description":"Check if Docling is available.","parameters":["self"],"return_type":"bool","test_file":"tests/unit/test_docling_engine.py","test_description":"Tests DoclingEngine.is_available functionality","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"bool result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\docling_engine.py","line_number":73,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8686854839324951,"execution_count":1,"average_duration":0.8686854839324951,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DoclingEngine.save_extraction","module":"compareblocks.engines.docling_engine","class":"DoclingEngine","description":"Extract and save Docling data.","parameters":["self","pdf_path","output_path"],"return_type":"str","test_file":"tests/unit/test_docling_engine.py","test_description":"Tests DoclingEngine.save_extraction functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"return_value":{"type":"str","constraint":"valid string","description":"Extracted str data"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","Creates or modifies files"],"dependencies":["PyMuPDF","pathlib","fitz"],"source_file":"src\\compareblocks\\engines\\docling_engine.py","line_number":278,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8686854839324951,"execution_count":1,"average_duration":0.8686854839324951,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DualOutputEngineProcessor.__init__","module":"compareblocks.engines.dual_output_processor","class":"DualOutputEngineProcessor","description":"Initialize the dual-output processor.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_dual_output_processor.py","test_description":"Tests DualOutputEngineProcessor.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Processed any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\dual_output_processor.py","line_number":37,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8411269187927246,"execution_count":1,"average_duration":0.8411269187927246,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DualOutputEngineProcessor.process_all_engines_dual_output","module":"compareblocks.engines.dual_output_processor","class":"DualOutputEngineProcessor","description":"Process PDF with all available engines producing dual outputs.","parameters":["self","pdf_path"],"return_type":"Dict[str, DualOutputResult]","test_file":"tests/unit/test_dual_output_processor.py","test_description":"Tests DualOutputEngineProcessor.process_all_engines_dual_output functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"Dict[str, DualOutputResult]","constraint":"valid dictionary","description":"Processed dict[str, dualoutputresult] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Processing state changes"],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\dual_output_processor.py","line_number":501,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8411269187927246,"execution_count":1,"average_duration":0.8411269187927246,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DualOutputEngineProcessor.process_engine_dual_output","module":"compareblocks.engines.dual_output_processor","class":"DualOutputEngineProcessor","description":"Process PDF with a single engine producing both markdown and JSON outputs.","parameters":["self","engine_name","pdf_path"],"return_type":"DualOutputResult","test_file":"tests/unit/test_dual_output_processor.py","test_description":"Tests DualOutputEngineProcessor.process_engine_dual_output functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"DualOutputResult","constraint":"valid return value","description":"Processed dualoutputresult result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Processing state changes"],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\dual_output_processor.py","line_number":68,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8411269187927246,"execution_count":1,"average_duration":0.8411269187927246,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DynamicReprocessor.cleanup_old_versions","module":"src.compareblocks.processing.dynamic_reprocessor","class":"DynamicReprocessor","description":"Clean up old processing versions, keeping only the most recent.","parameters":["self","pdf_path: Any","keep_count: Any"],"return_type":"Any","test_file":"tests/unit/test_dynamic_reprocessor.py","test_description":"Tests DynamicReprocessor.DynamicReprocessor.cleanup_old_versions functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8613464832305908,"execution_count":1,"average_duration":0.8613464832305908,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DynamicReprocessor.create_processing_version","module":"src.compareblocks.processing.dynamic_reprocessor","class":"DynamicReprocessor","description":"Create a new processing version.","parameters":["self","pdf_path: Any","processing_mode: Any","storage_mode: Any","engines_used: Any","parent_version_id: Any","description: Any"],"return_type":"Any","test_file":"tests/unit/test_dynamic_reprocessor.py","test_description":"Tests DynamicReprocessor.DynamicReprocessor.create_processing_version functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8613464832305908,"execution_count":1,"average_duration":0.8613464832305908,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DynamicReprocessor.create_reprocessing_trigger","module":"src.compareblocks.processing.dynamic_reprocessor","class":"DynamicReprocessor","description":"Create a reprocessing trigger.","parameters":["self","trigger_type: Any","trigger_data: Any","requires_full_rebuild: Any"],"return_type":"Any","test_file":"tests/unit/test_dynamic_reprocessor.py","test_description":"Tests DynamicReprocessor.DynamicReprocessor.create_reprocessing_trigger functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8613464832305908,"execution_count":1,"average_duration":0.8613464832305908,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DynamicReprocessor.detect_configuration_changes","module":"src.compareblocks.processing.dynamic_reprocessor","class":"DynamicReprocessor","description":"Detect if configuration has changed since last processing.","parameters":["self","pdf_path: Any"],"return_type":"Any","test_file":"tests/unit/test_dynamic_reprocessor.py","test_description":"Tests DynamicReprocessor.DynamicReprocessor.detect_configuration_changes functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8613464832305908,"execution_count":1,"average_duration":0.8613464832305908,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DynamicReprocessor.detect_new_associated_files","module":"src.compareblocks.processing.dynamic_reprocessor","class":"DynamicReprocessor","description":"Detect if new associated files have been added.","parameters":["self","pdf_path: Any"],"return_type":"Any","test_file":"tests/unit/test_dynamic_reprocessor.py","test_description":"Tests DynamicReprocessor.DynamicReprocessor.detect_new_associated_files functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8613464832305908,"execution_count":1,"average_duration":0.8613464832305908,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DynamicReprocessor.generate_configuration_hash","module":"src.compareblocks.processing.dynamic_reprocessor","class":"DynamicReprocessor","description":"Generate hash for configuration to detect changes.","parameters":["self","configuration: Any"],"return_type":"Any","test_file":"tests/unit/test_dynamic_reprocessor.py","test_description":"Tests DynamicReprocessor.DynamicReprocessor.generate_configuration_hash functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8613464832305908,"execution_count":1,"average_duration":0.8613464832305908,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DynamicReprocessor.get_current_configuration","module":"src.compareblocks.processing.dynamic_reprocessor","class":"DynamicReprocessor","description":"Get current effective configuration for all engines.","parameters":["self","pdf_path: Any","include_timestamp: Any"],"return_type":"Any","test_file":"tests/unit/test_dynamic_reprocessor.py","test_description":"Tests DynamicReprocessor.DynamicReprocessor.get_current_configuration functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8613464832305908,"execution_count":1,"average_duration":0.8613464832305908,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DynamicReprocessor.get_latest_version","module":"src.compareblocks.processing.dynamic_reprocessor","class":"DynamicReprocessor","description":"Get the latest processing version for a PDF.","parameters":["self","pdf_path: Any"],"return_type":"Any","test_file":"tests/unit/test_dynamic_reprocessor.py","test_description":"Tests DynamicReprocessor.DynamicReprocessor.get_latest_version functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8613464832305908,"execution_count":1,"average_duration":0.8613464832305908,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DynamicReprocessor.get_processing_history","module":"src.compareblocks.processing.dynamic_reprocessor","class":"DynamicReprocessor","description":"Get processing history for a PDF.","parameters":["self","pdf_path: Any"],"return_type":"Any","test_file":"tests/unit/test_dynamic_reprocessor.py","test_description":"Tests DynamicReprocessor.DynamicReprocessor.get_processing_history functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8613464832305908,"execution_count":1,"average_duration":0.8613464832305908,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DynamicReprocessor.incremental_processing","module":"src.compareblocks.processing.dynamic_reprocessor","class":"DynamicReprocessor","description":"Process only new associated files incrementally.","parameters":["self","pdf_path: Any","new_files: Any","base_version_id: Any"],"return_type":"Any","test_file":"tests/unit/test_dynamic_reprocessor.py","test_description":"Tests DynamicReprocessor.DynamicReprocessor.incremental_processing functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8613464832305908,"execution_count":1,"average_duration":0.8613464832305908,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DynamicReprocessor.load_processing_versions","module":"src.compareblocks.processing.dynamic_reprocessor","class":"DynamicReprocessor","description":"Load all processing versions.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_dynamic_reprocessor.py","test_description":"Tests DynamicReprocessor.DynamicReprocessor.load_processing_versions functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8613464832305908,"execution_count":1,"average_duration":0.8613464832305908,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DynamicReprocessor.rebuild_all_comparisons","module":"src.compareblocks.processing.dynamic_reprocessor","class":"DynamicReprocessor","description":"Rebuild all comparisons from scratch.","parameters":["self","pdf_path: Any","storage_mode: Any","description: Any"],"return_type":"Any","test_file":"tests/unit/test_dynamic_reprocessor.py","test_description":"Tests DynamicReprocessor.DynamicReprocessor.rebuild_all_comparisons functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8613464832305908,"execution_count":1,"average_duration":0.8613464832305908,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DynamicReprocessor.save_processing_version","module":"src.compareblocks.processing.dynamic_reprocessor","class":"DynamicReprocessor","description":"Save processing version to storage.","parameters":["self","version: Any"],"return_type":"Any","test_file":"tests/unit/test_dynamic_reprocessor.py","test_description":"Tests DynamicReprocessor.DynamicReprocessor.save_processing_version functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8613464832305908,"execution_count":1,"average_duration":0.8613464832305908,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"DynamicReprocessor.update_consistency_percentages","module":"src.compareblocks.processing.dynamic_reprocessor","class":"DynamicReprocessor","description":"Update consistency percentages without full reprocessing.","parameters":["self","pdf_path: Any"],"return_type":"Any","test_file":"tests/unit/test_dynamic_reprocessor.py","test_description":"Tests DynamicReprocessor.DynamicReprocessor.update_consistency_percentages functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8613464832305908,"execution_count":1,"average_duration":0.8613464832305908,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineAnalytics.__init__","module":"compareblocks.analytics.engine_analytics","class":"EngineAnalytics","description":"Initialize engine analytics.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_engine_analytics.py","test_description":"Tests EngineAnalytics.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\engine_analytics.py","line_number":54,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8958520889282227,"execution_count":1,"average_duration":0.8958520889282227,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineAnalytics.analyze_consensus_decisions","module":"compareblocks.analytics.engine_analytics","class":"EngineAnalytics","description":"Analyze consensus decisions to generate engine performance metrics.","parameters":["self","decisions"],"return_type":"Dict[str, EnginePerformanceMetrics]","test_file":"tests/unit/test_engine_analytics.py","test_description":"Tests EngineAnalytics.analyze_consensus_decisions functionality","field_attributes":{"decisions":{"type":"Any","constraint":"valid input","description":"Parameter decisions"},"return_value":{"type":"Dict[str, EnginePerformanceMetrics]","constraint":"valid dictionary","description":"Dict[str, EnginePerformanceMetrics] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\engine_analytics.py","line_number":114,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8958520889282227,"execution_count":1,"average_duration":0.8958520889282227,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineAnalytics.analyze_engine_results","module":"compareblocks.analytics.engine_analytics","class":"EngineAnalytics","description":"Analyze engine extraction results and generate performance metrics.","parameters":["self","engine_results"],"return_type":"Dict[str, EnginePerformanceMetrics]","test_file":"tests/unit/test_engine_analytics.py","test_description":"Tests EngineAnalytics.analyze_engine_results functionality","field_attributes":{"engine_results":{"type":"Any","constraint":"valid input","description":"Parameter engine_results"},"return_value":{"type":"Dict[str, EnginePerformanceMetrics]","constraint":"valid dictionary","description":"Dict[str, EnginePerformanceMetrics] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\engine_analytics.py","line_number":61,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8958520889282227,"execution_count":1,"average_duration":0.8958520889282227,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineAnalytics.analyze_variation_scores","module":"compareblocks.analytics.engine_analytics","class":"EngineAnalytics","description":"Analyze variation scores to generate engine performance metrics.","parameters":["self","variation_scores"],"return_type":"Dict[str, EnginePerformanceMetrics]","test_file":"tests/unit/test_engine_analytics.py","test_description":"Tests EngineAnalytics.analyze_variation_scores functionality","field_attributes":{"variation_scores":{"type":"Any","constraint":"valid input","description":"Parameter variation_scores"},"return_value":{"type":"Dict[str, EnginePerformanceMetrics]","constraint":"valid dictionary","description":"Dict[str, EnginePerformanceMetrics] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\engine_analytics.py","line_number":214,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8958520889282227,"execution_count":1,"average_duration":0.8958520889282227,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineAnalytics.combine_metrics","module":"compareblocks.analytics.engine_analytics","class":"EngineAnalytics","description":"Combine multiple engine performance metrics dictionaries.","parameters":["self"],"return_type":"Dict[str, EnginePerformanceMetrics]","test_file":"tests/unit/test_engine_analytics.py","test_description":"Tests EngineAnalytics.combine_metrics functionality","field_attributes":{"return_value":{"type":"Dict[str, EnginePerformanceMetrics]","constraint":"valid dictionary","description":"Dict[str, EnginePerformanceMetrics] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\engine_analytics.py","line_number":285,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8958520889282227,"execution_count":1,"average_duration":0.8958520889282227,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineAnalytics.get_engine_rankings","module":"compareblocks.analytics.engine_analytics","class":"EngineAnalytics","description":"Rank engines by overall performance score.","parameters":["self","metrics"],"return_type":"List[Tuple[str, float]]","test_file":"tests/unit/test_engine_analytics.py","test_description":"Tests EngineAnalytics.get_engine_rankings functionality","field_attributes":{"metrics":{"type":"Any","constraint":"valid input","description":"Parameter metrics"},"return_value":{"type":"List[Tuple[str, float]]","constraint":"valid list","description":"Extracted or retrieved items"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\engine_analytics.py","line_number":407,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8958520889282227,"execution_count":1,"average_duration":0.8958520889282227,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineAnalytics.get_performance_summary","module":"compareblocks.analytics.engine_analytics","class":"EngineAnalytics","description":"Generate a performance summary across all engines.","parameters":["self","metrics"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_engine_analytics.py","test_description":"Tests EngineAnalytics.get_performance_summary functionality","field_attributes":{"metrics":{"type":"Any","constraint":"valid input","description":"Parameter metrics"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Retrieved dict[str, any] value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\engine_analytics.py","line_number":435,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8958520889282227,"execution_count":1,"average_duration":0.8958520889282227,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineAnalytics.load_metrics","module":"compareblocks.analytics.engine_analytics","class":"EngineAnalytics","description":"Load engine performance metrics from file.","parameters":["self","file_path"],"return_type":"Dict[str, EnginePerformanceMetrics]","test_file":"tests/unit/test_engine_analytics.py","test_description":"Tests EngineAnalytics.load_metrics functionality","field_attributes":{"file_path":{"type":"Any","constraint":"valid input","description":"Parameter file_path"},"return_value":{"type":"Dict[str, EnginePerformanceMetrics]","constraint":"valid dictionary","description":"Dict[str, EnginePerformanceMetrics] result"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","May raise FileNotFoundError"],"dependencies":["numpy","pandas","pathlib"],"source_file":"src\\compareblocks\\analytics\\engine_analytics.py","line_number":517,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8958520889282227,"execution_count":1,"average_duration":0.8958520889282227,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineAnalytics.save_metrics","module":"compareblocks.analytics.engine_analytics","class":"EngineAnalytics","description":"Save engine performance metrics to file.","parameters":["self","metrics","output_path"],"return_type":"Path","test_file":"tests/unit/test_engine_analytics.py","test_description":"Tests EngineAnalytics.save_metrics functionality","field_attributes":{"metrics":{"type":"Any","constraint":"valid input","description":"Parameter metrics"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"return_value":{"type":"Path","constraint":"valid return value","description":"Path result"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","Creates or modifies files"],"dependencies":["numpy","pandas","pathlib"],"source_file":"src\\compareblocks\\analytics\\engine_analytics.py","line_number":480,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8958520889282227,"execution_count":1,"average_duration":0.8958520889282227,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfiguration.from_ndjson_line","module":"compareblocks.config.engine_config","class":"EngineConfiguration","description":"Create from NDJSON line.","parameters":["cls","line"],"return_type":"'EngineConfiguration'","test_file":"tests/unit/test_engine_config.py","test_description":"Tests EngineConfiguration.from_ndjson_line functionality","field_attributes":{"cls":{"type":"Any","constraint":"valid input","description":"Parameter cls"},"line":{"type":"Any","constraint":"valid input","description":"Parameter line"},"return_value":{"type":"'EngineConfiguration'","constraint":"valid return value","description":"'EngineConfiguration' result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\config\\engine_config.py","line_number":102,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0079073905944824,"execution_count":1,"average_duration":1.0079073905944824,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfiguration.to_ndjson_line","module":"compareblocks.config.engine_config","class":"EngineConfiguration","description":"Convert to NDJSON line format.","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_engine_config.py","test_description":"Tests EngineConfiguration.to_ndjson_line functionality","field_attributes":{"return_value":{"type":"str","constraint":"valid string","description":"str result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\config\\engine_config.py","line_number":94,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0079073905944824,"execution_count":1,"average_duration":1.0079073905944824,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfigurationForm.__init__","module":"compareblocks.gui.config_forms","class":"EngineConfigurationForm","description":"Function description","parameters":["self","config_manager","engine_name"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests EngineConfigurationForm.__init__ functionality","field_attributes":{"config_manager":{"type":"Any","constraint":"valid input","description":"Parameter config_manager"},"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":140,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfigurationForm.apply_changes","module":"compareblocks.gui.config_forms","class":"EngineConfigurationForm","description":"Apply configuration changes.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests EngineConfigurationForm.apply_changes functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":214,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfigurationForm.load_configuration","module":"compareblocks.gui.config_forms","class":"EngineConfigurationForm","description":"Load current configuration for the engine.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests EngineConfigurationForm.load_configuration functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","May raise FileNotFoundError"],"dependencies":["pathlib","PySide6"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":179,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfigurationForm.reset_to_defaults","module":"compareblocks.gui.config_forms","class":"EngineConfigurationForm","description":"Reset all parameters to default values.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests EngineConfigurationForm.reset_to_defaults functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":201,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfigurationForm.setup_ui","module":"compareblocks.gui.config_forms","class":"EngineConfigurationForm","description":"Setup the configuration form UI.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests EngineConfigurationForm.setup_ui functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":149,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfigurationManager.__init__","module":"compareblocks.config.engine_config","class":"EngineConfigurationManager","description":"Initialize configuration manager.","parameters":["self","config_file"],"return_type":"Any","test_file":"tests/unit/test_engine_config.py","test_description":"Tests EngineConfigurationManager.__init__ functionality","field_attributes":{"config_file":{"type":"Any","constraint":"valid input","description":"Parameter config_file"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\config\\engine_config.py","line_number":173,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0079073905944824,"execution_count":1,"average_duration":1.0079073905944824,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfigurationManager.add_engine_configuration","module":"compareblocks.config.engine_config","class":"EngineConfigurationManager","description":"Add a new engine configuration with foreign key reference.","parameters":["self","engine_name","parent_config_id"],"return_type":"str","test_file":"tests/unit/test_engine_config.py","test_description":"Tests EngineConfigurationManager.add_engine_configuration functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"parent_config_id":{"type":"Any","constraint":"valid input","description":"Parameter parent_config_id"},"return_value":{"type":"str","constraint":"valid string","description":"str result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\config\\engine_config.py","line_number":212,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0079073905944824,"execution_count":1,"average_duration":1.0079073905944824,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfigurationManager.add_pdf_override","module":"compareblocks.config.engine_config","class":"EngineConfigurationManager","description":"Add PDF-specific configuration override.","parameters":["self","engine_name","pdf_path","overrides"],"return_type":"str","test_file":"tests/unit/test_engine_config.py","test_description":"Tests EngineConfigurationManager.add_pdf_override functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"overrides":{"type":"Any","constraint":"valid input","description":"Parameter overrides"},"return_value":{"type":"str","constraint":"valid string","description":"str result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["json","PyMuPDF","pathlib","fitz"],"source_file":"src\\compareblocks\\config\\engine_config.py","line_number":245,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0079073905944824,"execution_count":1,"average_duration":1.0079073905944824,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfigurationManager.approve_optimization_proposal","module":"compareblocks.config.engine_config","class":"EngineConfigurationManager","description":"Approve an optimization proposal and create PDF override.","parameters":["self","proposal_id"],"return_type":"str","test_file":"tests/unit/test_engine_config.py","test_description":"Tests EngineConfigurationManager.approve_optimization_proposal functionality","field_attributes":{"proposal_id":{"type":"Any","constraint":"valid input","description":"Parameter proposal_id"},"return_value":{"type":"str","constraint":"valid string","description":"str result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\config\\engine_config.py","line_number":1017,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0079073905944824,"execution_count":1,"average_duration":1.0079073905944824,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfigurationManager.archive_current_pdf_override","module":"compareblocks.config.engine_config","class":"EngineConfigurationManager","description":"Archive current PDF override as historical setting before creating new one.","parameters":["self","engine_name","pdf_path"],"return_type":"str","test_file":"tests/unit/test_engine_config.py","test_description":"Tests EngineConfigurationManager.archive_current_pdf_override functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"str","constraint":"valid string","description":"str result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["json","PyMuPDF","pathlib","fitz"],"source_file":"src\\compareblocks\\config\\engine_config.py","line_number":1103,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0079073905944824,"execution_count":1,"average_duration":1.0079073905944824,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfigurationManager.create_individual_config_files","module":"compareblocks.config.engine_config","class":"EngineConfigurationManager","description":"Create individual configuration files for each engine with foreign key references.","parameters":["self"],"return_type":"Dict[str, str]","test_file":"tests/unit/test_engine_config.py","test_description":"Tests EngineConfigurationManager.create_individual_config_files functionality","field_attributes":{"return_value":{"type":"Dict[str, str]","constraint":"valid dictionary","description":"Created or built object"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\config\\engine_config.py","line_number":933,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0079073905944824,"execution_count":1,"average_duration":1.0079073905944824,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfigurationManager.create_optimization_proposal","module":"compareblocks.config.engine_config","class":"EngineConfigurationManager","description":"Create an optimization proposal for review.","parameters":["self","engine_name","pdf_path","proposed_settings"],"return_type":"str","test_file":"tests/unit/test_engine_config.py","test_description":"Tests EngineConfigurationManager.create_optimization_proposal functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"proposed_settings":{"type":"Any","constraint":"valid input","description":"Parameter proposed_settings"},"return_value":{"type":"str","constraint":"valid string","description":"Created or built object"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\config\\engine_config.py","line_number":1062,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0079073905944824,"execution_count":1,"average_duration":1.0079073905944824,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfigurationManager.get_auto_optimize_parameters","module":"compareblocks.config.engine_config","class":"EngineConfigurationManager","description":"Get list of parameters included in auto-optimization.","parameters":["self","engine_name"],"return_type":"List[str]","test_file":"tests/unit/test_engine_config.py","test_description":"Tests EngineConfigurationManager.get_auto_optimize_parameters functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"return_value":{"type":"List[str]","constraint":"valid list","description":"Extracted or retrieved items"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\config\\engine_config.py","line_number":335,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0079073905944824,"execution_count":1,"average_duration":1.0079073905944824,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfigurationManager.get_effective_configuration","module":"compareblocks.config.engine_config","class":"EngineConfigurationManager","description":"Get effective configuration by merging parent, engine, and PDF-specific settings.","parameters":["self","engine_name","pdf_path"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_engine_config.py","test_description":"Tests EngineConfigurationManager.get_effective_configuration functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Retrieved dict[str, any] value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\config\\engine_config.py","line_number":273,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0079073905944824,"execution_count":1,"average_duration":1.0079073905944824,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfigurationManager.get_engine_configuration","module":"compareblocks.config.engine_config","class":"EngineConfigurationManager","description":"Get active engine configuration.","parameters":["self","engine_name"],"return_type":"Optional[EngineConfiguration]","test_file":"tests/unit/test_engine_config.py","test_description":"Tests EngineConfigurationManager.get_engine_configuration functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"return_value":{"type":"Optional[EngineConfiguration]","constraint":"valid return value","description":"Retrieved optional[engineconfiguration] value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\config\\engine_config.py","line_number":239,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0079073905944824,"execution_count":1,"average_duration":1.0079073905944824,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfigurationManager.get_engine_statistics","module":"compareblocks.config.engine_config","class":"EngineConfigurationManager","description":"Get comprehensive statistics for an engine.","parameters":["self","engine_name"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_engine_config.py","test_description":"Tests EngineConfigurationManager.get_engine_statistics functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Retrieved dict[str, any] value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\config\\engine_config.py","line_number":1146,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0079073905944824,"execution_count":1,"average_duration":1.0079073905944824,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfigurationManager.get_parameter_status","module":"compareblocks.config.engine_config","class":"EngineConfigurationManager","description":"Get parameter status information for GUI awareness.","parameters":["self","engine_name"],"return_type":"Dict[str, Dict[str, Any]]","test_file":"tests/unit/test_engine_config.py","test_description":"Tests EngineConfigurationManager.get_parameter_status functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"return_value":{"type":"Dict[str, Dict[str, Any]]","constraint":"valid dictionary","description":"Retrieved dict[str, dict[str, any]] value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\config\\engine_config.py","line_number":295,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0079073905944824,"execution_count":1,"average_duration":1.0079073905944824,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfigurationManager.get_parameter_usage_stats","module":"compareblocks.config.engine_config","class":"EngineConfigurationManager","description":"Get usage statistics for parameters across all PDF overrides.","parameters":["self","engine_name"],"return_type":"Dict[str, Dict[str, Any]]","test_file":"tests/unit/test_engine_config.py","test_description":"Tests EngineConfigurationManager.get_parameter_usage_stats functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"return_value":{"type":"Dict[str, Dict[str, Any]]","constraint":"valid dictionary","description":"Retrieved dict[str, dict[str, any]] value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\config\\engine_config.py","line_number":408,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0079073905944824,"execution_count":1,"average_duration":1.0079073905944824,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfigurationManager.get_parameters_by_category","module":"compareblocks.config.engine_config","class":"EngineConfigurationManager","description":"Get parameters grouped by category for GUI organization.","parameters":["self","engine_name"],"return_type":"Dict[str, List[str]]","test_file":"tests/unit/test_engine_config.py","test_description":"Tests EngineConfigurationManager.get_parameters_by_category functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"return_value":{"type":"Dict[str, List[str]]","constraint":"valid dictionary","description":"Retrieved dict[str, list[str]] value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\config\\engine_config.py","line_number":343,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0079073905944824,"execution_count":1,"average_duration":1.0079073905944824,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfigurationManager.get_pdf_configuration_history","module":"compareblocks.config.engine_config","class":"EngineConfigurationManager","description":"Get historical configurations for a specific PDF.","parameters":["self","engine_name","pdf_path"],"return_type":"List[EngineConfiguration]","test_file":"tests/unit/test_engine_config.py","test_description":"Tests EngineConfigurationManager.get_pdf_configuration_history functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"List[EngineConfiguration]","constraint":"valid list","description":"Extracted or retrieved items"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["json","PyMuPDF","pathlib","fitz"],"source_file":"src\\compareblocks\\config\\engine_config.py","line_number":1087,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0079073905944824,"execution_count":1,"average_duration":1.0079073905944824,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfigurationManager.get_pending_optimization_proposals","module":"compareblocks.config.engine_config","class":"EngineConfigurationManager","description":"Get all pending optimization proposals.","parameters":["self"],"return_type":"List[EngineConfiguration]","test_file":"tests/unit/test_engine_config.py","test_description":"Tests EngineConfigurationManager.get_pending_optimization_proposals functionality","field_attributes":{"return_value":{"type":"List[EngineConfiguration]","constraint":"valid list","description":"Extracted or retrieved items"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\config\\engine_config.py","line_number":1141,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0079073905944824,"execution_count":1,"average_duration":1.0079073905944824,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfigurationManager.get_tested_parameters","module":"compareblocks.config.engine_config","class":"EngineConfigurationManager","description":"Get list of tested parameters for an engine.","parameters":["self","engine_name"],"return_type":"List[str]","test_file":"tests/unit/test_engine_config.py","test_description":"Tests EngineConfigurationManager.get_tested_parameters functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"return_value":{"type":"List[str]","constraint":"valid list","description":"Extracted or retrieved items"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\config\\engine_config.py","line_number":327,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0079073905944824,"execution_count":1,"average_duration":1.0079073905944824,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineConfigurationManager.validate_parameter_value","module":"compareblocks.config.engine_config","class":"EngineConfigurationManager","description":"Validate a parameter value against its constraints.","parameters":["self","engine_name","param_name","value"],"return_type":"tuple[bool, str]","test_file":"tests/unit/test_engine_config.py","test_description":"Tests EngineConfigurationManager.validate_parameter_value functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"param_name":{"type":"Any","constraint":"valid input","description":"Parameter param_name"},"value":{"type":"Any","constraint":"valid input","description":"Parameter value"},"return_value":{"type":"tuple[bool, str]","constraint":"valid tuple","description":"Validation result"},"performance":{"time_complexity":"O(1)","memory_usage":"Low - Validation operations"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["May raise ValidationError"],"dependencies":["jsonschema","json","pathlib"],"source_file":"src\\compareblocks\\config\\engine_config.py","line_number":358,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0079073905944824,"execution_count":1,"average_duration":1.0079073905944824,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EnginePerformanceMetrics.to_dict","module":"compareblocks.analytics.engine_analytics","class":"EnginePerformanceMetrics","description":"Convert to dictionary format.","parameters":["self"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_engine_analytics.py","test_description":"Tests EnginePerformanceMetrics.to_dict functionality","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Dict[str, Any] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\engine_analytics.py","line_number":46,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8958520889282227,"execution_count":1,"average_duration":0.8958520889282227,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineValidator.__init__","module":"compareblocks.testing.engine_validator","class":"EngineValidator","description":"Initialize engine validator.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_engine_validator.py","test_description":"Tests EngineValidator.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\engine_validator.py","line_number":61,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.865286111831665,"execution_count":1,"average_duration":0.865286111831665,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineValidator.analyze_test_file","module":"compareblocks.testing.engine_validator","class":"EngineValidator","description":"Analyze a test file to find tested functions.","parameters":["self","test_file"],"return_type":"Dict[str, List[str]]","test_file":"tests/unit/test_engine_validator.py","test_description":"Tests EngineValidator.analyze_test_file functionality","field_attributes":{"test_file":{"type":"Any","constraint":"valid input","description":"Parameter test_file"},"return_value":{"type":"Dict[str, List[str]]","constraint":"valid dictionary","description":"Dict[str, List[str]] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\engine_validator.py","line_number":129,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.865286111831665,"execution_count":1,"average_duration":0.865286111831665,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineValidator.discover_engine_functions","module":"compareblocks.testing.engine_validator","class":"EngineValidator","description":"Discover all functions in an engine.","parameters":["self","engine_name"],"return_type":"List[Tuple[str, str]]","test_file":"tests/unit/test_engine_validator.py","test_description":"Tests EngineValidator.discover_engine_functions functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"return_value":{"type":"List[Tuple[str, str]]","constraint":"valid list","description":"List[Tuple[str, str]] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\engine_validator.py","line_number":75,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.865286111831665,"execution_count":1,"average_duration":0.865286111831665,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineValidator.find_test_files","module":"compareblocks.testing.engine_validator","class":"EngineValidator","description":"Find all test files in the test directory.","parameters":["self"],"return_type":"List[Path]","test_file":"tests/unit/test_engine_validator.py","test_description":"Tests EngineValidator.find_test_files functionality","field_attributes":{"return_value":{"type":"List[Path]","constraint":"valid list","description":"List[Path] result"},"performance":{"time_complexity":"O(n)"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\engine_validator.py","line_number":118,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.865286111831665,"execution_count":1,"average_duration":0.865286111831665,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineValidator.generate_coverage_report","module":"compareblocks.testing.engine_validator","class":"EngineValidator","description":"Generate comprehensive coverage report.","parameters":["self","coverage_results"],"return_type":"str","test_file":"tests/unit/test_engine_validator.py","test_description":"Tests EngineValidator.generate_coverage_report functionality","field_attributes":{"coverage_results":{"type":"Any","constraint":"valid input","description":"Parameter coverage_results"},"return_value":{"type":"str","constraint":"valid string","description":"str result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\engine_validator.py","line_number":441,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.865286111831665,"execution_count":1,"average_duration":0.865286111831665,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineValidator.run_comprehensive_validation","module":"compareblocks.testing.engine_validator","class":"EngineValidator","description":"Run comprehensive validation of all engines.","parameters":["self","pdf_path"],"return_type":"str","test_file":"tests/unit/test_engine_validator.py","test_description":"Tests EngineValidator.run_comprehensive_validation functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"str","constraint":"valid string","description":"str result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\engine_validator.py","line_number":502,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.865286111831665,"execution_count":1,"average_duration":0.865286111831665,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineValidator.run_engine_function_tests","module":"compareblocks.testing.engine_validator","class":"EngineValidator","description":"Run actual tests for engine functions with real PDF.","parameters":["self","engine_name","pdf_path"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_engine_validator.py","test_description":"Tests EngineValidator.run_engine_function_tests functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Dict[str, Any] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\engine_validator.py","line_number":296,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.865286111831665,"execution_count":1,"average_duration":0.865286111831665,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineValidator.validate_all_engines","module":"compareblocks.testing.engine_validator","class":"EngineValidator","description":"Validate test coverage for all engines.","parameters":["self"],"return_type":"Dict[str, EngineTestCoverage]","test_file":"tests/unit/test_engine_validator.py","test_description":"Tests EngineValidator.validate_all_engines functionality","field_attributes":{"return_value":{"type":"Dict[str, EngineTestCoverage]","constraint":"valid dictionary","description":"Validation result"},"performance":{"time_complexity":"O(1)","memory_usage":"Low - Validation operations"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["May raise ValidationError"],"dependencies":["jsonschema","time","pytest"],"source_file":"src\\compareblocks\\testing\\engine_validator.py","line_number":261,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.865286111831665,"execution_count":1,"average_duration":0.865286111831665,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"EngineValidator.validate_engine_coverage","module":"compareblocks.testing.engine_validator","class":"EngineValidator","description":"Validate test coverage for a specific engine.","parameters":["self","engine_name"],"return_type":"EngineTestCoverage","test_file":"tests/unit/test_engine_validator.py","test_description":"Tests EngineValidator.validate_engine_coverage functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"return_value":{"type":"EngineTestCoverage","constraint":"valid return value","description":"Validation result"},"performance":{"time_complexity":"O(1)","memory_usage":"Low - Validation operations"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["May raise ValidationError"],"dependencies":["jsonschema","time","pytest"],"source_file":"src\\compareblocks\\testing\\engine_validator.py","line_number":184,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.865286111831665,"execution_count":1,"average_duration":0.865286111831665,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ExtractionEngineManager.__init__","module":"compareblocks.engines.manager","class":"ExtractionEngineManager","description":"Initialize the engine manager.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_manager.py","test_description":"Tests ExtractionEngineManager.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Extracted any data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\manager.py","line_number":39,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ExtractionEngineManager.create_extraction_summary","module":"compareblocks.engines.manager","class":"ExtractionEngineManager","description":"Create a summary of all extraction results.","parameters":["self","results","pdf_path"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_manager.py","test_description":"Tests ExtractionEngineManager.create_extraction_summary functionality","field_attributes":{"results":{"type":"Any","constraint":"valid input","description":"Parameter results"},"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Extracted dict[str, any] data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\manager.py","line_number":294,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ExtractionEngineManager.extract_with_all_engines","module":"compareblocks.engines.manager","class":"ExtractionEngineManager","description":"Extract text using all available engines.","parameters":["self","pdf_path","parallel"],"return_type":"Dict[str, EngineResult]","test_file":"tests/unit/test_manager.py","test_description":"Tests ExtractionEngineManager.extract_with_all_engines functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"parallel":{"type":"Any","constraint":"valid input","description":"Parameter parallel"},"return_value":{"type":"Dict[str, EngineResult]","constraint":"valid dictionary","description":"Extracted dict[str, engineresult] data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\manager.py","line_number":163,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ExtractionEngineManager.extract_with_engine","module":"compareblocks.engines.manager","class":"ExtractionEngineManager","description":"Extract text using a specific engine.","parameters":["self","engine_name","pdf_path"],"return_type":"EngineResult","test_file":"tests/unit/test_manager.py","test_description":"Tests ExtractionEngineManager.extract_with_engine functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"EngineResult","constraint":"valid return value","description":"Extracted engineresult data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\manager.py","line_number":88,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ExtractionEngineManager.extract_with_engines","module":"compareblocks.engines.manager","class":"ExtractionEngineManager","description":"Extract text using specified engines.","parameters":["self","engine_names","pdf_path","parallel"],"return_type":"Dict[str, EngineResult]","test_file":"tests/unit/test_manager.py","test_description":"Tests ExtractionEngineManager.extract_with_engines functionality","field_attributes":{"engine_names":{"type":"Any","constraint":"valid input","description":"Parameter engine_names"},"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"parallel":{"type":"Any","constraint":"valid input","description":"Parameter parallel"},"return_value":{"type":"Dict[str, EngineResult]","constraint":"valid dictionary","description":"Extracted dict[str, engineresult] data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\manager.py","line_number":228,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ExtractionEngineManager.get_available_engines","module":"compareblocks.engines.manager","class":"ExtractionEngineManager","description":"Get list of available engine names.","parameters":["self"],"return_type":"List[str]","test_file":"tests/unit/test_manager.py","test_description":"Tests ExtractionEngineManager.get_available_engines functionality","field_attributes":{"return_value":{"type":"List[str]","constraint":"non-empty list","description":"Extracted or retrieved items"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\manager.py","line_number":84,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ExtractionEngineManager.save_extraction_summary","module":"compareblocks.engines.manager","class":"ExtractionEngineManager","description":"Save extraction summary to file.","parameters":["self","results","pdf_path","output_path"],"return_type":"str","test_file":"tests/unit/test_manager.py","test_description":"Tests ExtractionEngineManager.save_extraction_summary functionality","field_attributes":{"results":{"type":"Any","constraint":"valid input","description":"Parameter results"},"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"return_value":{"type":"str","constraint":"valid string","description":"Extracted str data"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","Creates or modifies files"],"dependencies":["PyMuPDF","pathlib","fitz"],"source_file":"src\\compareblocks\\engines\\manager.py","line_number":349,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ExtractionHandler.__init__","module":"src.compareblocks.mcp.handlers","class":"ExtractionHandler","description":"Initialize extraction handler with validator and protocol","parameters":["self","validator: MCPValidator","protocol: MCPProtocol"],"return_type":"None","test_file":"tests/unit/test_mcp_handlers.py","test_description":"Tests initialization of extraction handlers","field_attributes":{"validator":{"type":"MCPValidator","constraint":"valid validator","description":"MCP validator"},"protocol":{"type":"MCPProtocol","constraint":"valid protocol","description":"MCP protocol"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["concurrent.futures","asyncio"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1220347881317139,"execution_count":1,"average_duration":1.1220347881317139,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ExtractionHandler.get_session","module":"src.compareblocks.mcp.handlers","class":"ExtractionHandler","description":"Get processing session by ID.","parameters":["self","session_id: Any"],"return_type":"Any","test_file":"tests/unit/test_handlers.py","test_description":"Tests ExtractionHandler.ExtractionHandler.get_session functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9536342620849609,"execution_count":1,"average_duration":0.9536342620849609,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ExtractionHandler.handle_submission","module":"src.compareblocks.mcp.handlers","class":"ExtractionHandler","description":"Handle extraction submission request with validation and processing","parameters":["self","params: Dict[str, Any]"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_mcp_handlers.py","test_description":"Tests handling of extraction submission requests","field_attributes":{"params":{"type":"Dict[str, Any]","constraint":"submission data","description":"Extraction parameters"},"return_value":{"type":"Dict[str, Any]","constraint":"response data","description":"Submission response"},"performance":{"time_complexity":"O(n)","memory_usage":"High - PDF processing"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Creates processing session","Starts background processing"],"dependencies":["uuid","asyncio","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1220347881317139,"execution_count":1,"average_duration":1.1220347881317139,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ExtractionHandler.list_sessions","module":"src.compareblocks.mcp.handlers","class":"ExtractionHandler","description":"List all processing sessions.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_handlers.py","test_description":"Tests ExtractionHandler.ExtractionHandler.list_sessions functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9536342620849609,"execution_count":1,"average_duration":0.9536342620849609,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.__init__","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Initialize the file manager with default configuration","parameters":["self"],"return_type":"None","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests initialization of file manager with configuration loading","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.__new__","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Singleton pattern to ensure consistent configuration across application","parameters":["cls"],"return_type":"FileManager","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests singleton pattern implementation for file manager","field_attributes":{"cls":{"type":"Any","constraint":"valid input","description":"Parameter cls"},"return_value":{"type":"FileManager","constraint":"valid return value","description":"FileManager result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager._generate_timestamp_suffix","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Generate timestamp suffix if idempotent processing is disabled","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests timestamp suffix generation for non-idempotent processing","field_attributes":{"return_value":{"type":"str","constraint":"valid string","description":"str result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager._get_filename_with_timestamp","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Get filename with timestamp suffix if needed","parameters":["self","base_filename: str"],"return_type":"str","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests filename generation with timestamp insertion","field_attributes":{"return_value":{"type":"str","constraint":"non-empty string","description":"Retrieved str value"},"base_filename":{"type":"str","constraint":"non-empty string","description":"Parameter base_filename"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager._get_output_base_directory","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Get the base output directory based on configuration strategy","parameters":["self"],"return_type":"Path","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests output directory determination based on configuration strategy","field_attributes":{"return_value":{"type":"Path","constraint":"valid return value","description":"Retrieved path value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager._get_pdf_base_directory","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Get the base directory where the PDF is located","parameters":["self"],"return_type":"Path","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests determination of PDF base directory","field_attributes":{"return_value":{"type":"Path","constraint":"valid return value","description":"Retrieved path value"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents"],"dependencies":["fitz","PyMuPDF"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager._load_config","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Load configuration from default_files.json","parameters":["self"],"return_type":"None","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests loading of configuration from JSON file","field_attributes":{"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.cleanup_processing_directory","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Clean up the processing directory after moving files to final output","parameters":["self"],"return_type":"None","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests cleanup of processing directory after file movement","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Processing state changes"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.clear_mcp_overrides","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Clear all MCP overrides","parameters":["self"],"return_type":"None","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests clearing of all MCP overrides","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.complete_processing_workflow","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Complete the processing workflow by moving files from processing to final output","parameters":["self"],"return_type":"Dict[str, str]","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests complete processing workflow with file movement and cleanup","field_attributes":{"return_value":{"type":"Dict[str, str]","constraint":"valid dictionary","description":"Processed dict[str, str] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Processing state changes"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.ensure_output_directories","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Ensure all output directories exist","parameters":["self"],"return_type":"None","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests creation of output directories if they don't exist","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.get_analytics_output_path","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Get the analytics output file path","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests generation of analytics output file path","field_attributes":{"return_value":{"type":"str","constraint":"valid file path","description":"File or directory path"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.get_config_summary","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Get a summary of the current configuration","parameters":["self"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests generation of comprehensive configuration summary","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Retrieved dict[str, any] value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.get_default_encoding","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Get the default file encoding","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests retrieval of default file encoding from configuration","field_attributes":{"return_value":{"type":"str","constraint":"non-empty string","description":"Retrieved str value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.get_default_engines","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Get the list of default processing engines","parameters":["self"],"return_type":"list","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests retrieval of default engine list from configuration","field_attributes":{"return_value":{"type":"list","constraint":"valid return value","description":"Retrieved list value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.get_default_page_range","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Get the default page range for processing","parameters":["self"],"return_type":"Dict[str, int]","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests retrieval of default page range from configuration","field_attributes":{"return_value":{"type":"Dict[str, int]","constraint":"valid dictionary","description":"Dictionary result"}},"side_effects":["Opens/closes PDF documents"],"dependencies":["fitz","PyMuPDF"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.get_expected_pdf_blocks","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Get the expected number of blocks in the target PDF","parameters":["self"],"return_type":"int","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests retrieval of expected PDF block count from configuration","field_attributes":{"return_value":{"type":"int","constraint":">= 0","description":"Integer result"}},"side_effects":["Opens/closes PDF documents"],"dependencies":["fitz","PyMuPDF"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.get_expected_pdf_pages","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Get the expected number of pages in the target PDF","parameters":["self"],"return_type":"int","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests retrieval of expected PDF page count from configuration","field_attributes":{"return_value":{"type":"int","constraint":">= 0","description":"Integer result"}},"side_effects":["Opens/closes PDF documents"],"dependencies":["fitz","PyMuPDF"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.get_file_info","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Get complete information about a configured file","parameters":["self","file_key: str"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests retrieval of complete file information from configuration","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Retrieved dict[str, any] value"},"file_key":{"type":"str","constraint":"non-empty string","description":"Parameter file_key"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.get_final_output_directory","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Get the final output directory path","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests retrieval of final output directory path","field_attributes":{"return_value":{"type":"str","constraint":"non-empty string","description":"Retrieved str value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.get_gbg_analysis_output_path","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Get the GBG analysis output file path","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests generation of GBG analysis output file path","field_attributes":{"return_value":{"type":"str","constraint":"valid file path","description":"File or directory path"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.get_image_handling_config","module":"compareblocks.config.file_manager","class":"FileManager","description":"Get the complete image handling configuration.","parameters":["self"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_file_manager.py","test_description":"Tests FileManager.get_image_handling_config functionality","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Retrieved dict[str, any] value"},"performance":{"memory_usage":"Medium - Image data processing"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["json","cv2","pathlib","PIL"],"source_file":"src\\compareblocks\\config\\file_manager.py","line_number":248,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":1.0040209293365479,"execution_count":1,"average_duration":1.0040209293365479,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.get_image_placeholder_text","module":"compareblocks.config.file_manager","class":"FileManager","description":"Get the placeholder text used for image blocks.","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_file_manager.py","test_description":"Tests FileManager.get_image_placeholder_text functionality","field_attributes":{"return_value":{"type":"str","constraint":"non-empty string","description":"Retrieved str value"},"performance":{"memory_usage":"Medium - Image data processing"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","cv2","pathlib","PIL"],"source_file":"src\\compareblocks\\config\\file_manager.py","line_number":228,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":1.0040209293365479,"execution_count":1,"average_duration":1.0040209293365479,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.get_integration_test_output_path","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Get the integration test output file path","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests generation of integration test output file path","field_attributes":{"return_value":{"type":"str","constraint":"valid file path","description":"File or directory path"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.get_mcp_overrides","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Get current MCP overrides","parameters":["self"],"return_type":"Dict[str, str]","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests retrieval of current MCP overrides","field_attributes":{"return_value":{"type":"Dict[str, str]","constraint":"valid dictionary","description":"Retrieved dict[str, str] value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.get_ndjson_consensus_output_path","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Get the NDJSON consensus output file path","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests generation of NDJSON consensus output file path","field_attributes":{"return_value":{"type":"str","constraint":"valid file path","description":"File or directory path"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.get_ndjson_variations_output_path","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Get the NDJSON variations output file path","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests generation of NDJSON variations output file path","field_attributes":{"return_value":{"type":"str","constraint":"valid file path","description":"File or directory path"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.get_output_directory","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Get the current output directory (processing directory)","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests retrieval of current output directory","field_attributes":{"return_value":{"type":"str","constraint":"non-empty string","description":"Retrieved str value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.get_output_formats","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Get the supported output formats","parameters":["self"],"return_type":"list","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests retrieval of supported output formats from configuration","field_attributes":{"return_value":{"type":"list","constraint":"valid return value","description":"Retrieved list value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.get_processing_directory","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Get the processing in-progress directory path","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests retrieval of processing directory path","field_attributes":{"return_value":{"type":"str","constraint":"non-empty string","description":"Retrieved str value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Processing state changes"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.get_target_pdf_path","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Get the primary target PDF file path","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests retrieval of target PDF path with MCP override support","field_attributes":{"return_value":{"type":"str","constraint":"valid string","description":"String result"}},"side_effects":["Opens/closes PDF documents"],"dependencies":["fitz","PyMuPDF"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.get_test_output_directory","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Get the test output directory path","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests retrieval of test output directory path","field_attributes":{"return_value":{"type":"str","constraint":"non-empty string","description":"Retrieved str value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.get_timestamp_precision","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Get the configured timestamp precision","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests retrieval of timestamp precision setting from configuration","field_attributes":{"return_value":{"type":"str","constraint":"non-empty string","description":"Retrieved str value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.get_unit_test_output_path","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Get the unit test output file path","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests generation of unit test output file path","field_attributes":{"return_value":{"type":"str","constraint":"valid file path","description":"File or directory path"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.is_idempotent_processing","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Check if processing is idempotent (no timestamps)","parameters":["self"],"return_type":"bool","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests idempotent processing flag from configuration","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"Processed bool result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Processing state changes"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.is_image_block","module":"compareblocks.config.file_manager","class":"FileManager","description":"Check if a block represents an image based on its text content.","parameters":["self","text"],"return_type":"bool","test_file":"tests/unit/test_file_manager.py","test_description":"Tests FileManager.is_image_block functionality","field_attributes":{"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"return_value":{"type":"bool","constraint":"boolean value","description":"bool result"},"performance":{"memory_usage":"Medium - Image data processing"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","cv2","pathlib","PIL"],"source_file":"src\\compareblocks\\config\\file_manager.py","line_number":232,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":1.0040209293365479,"execution_count":1,"average_duration":1.0040209293365479,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.is_validation_enabled","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Check if validation is enabled by default","parameters":["self"],"return_type":"bool","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests validation enabled flag from configuration","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"bool result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.move_to_final_output","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Move all files from processing directory to final output directory","parameters":["self"],"return_type":"None","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests moving files from processing to final output directory","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.set_mcp_override","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Set an MCP override for dynamic file paths (future MCP integration)","parameters":["self","key: str","value: str"],"return_type":"None","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests setting of MCP overrides for dynamic configuration","field_attributes":{"key":{"type":"str","constraint":"non-empty string","description":"Parameter key"},"value":{"type":"str","constraint":"non-empty string","description":"Parameter value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.should_ignore_images","module":"compareblocks.config.file_manager","class":"FileManager","description":"Check if image blocks should be ignored in extraction and comparison.","parameters":["self","pdf_path"],"return_type":"bool","test_file":"tests/unit/test_file_manager.py","test_description":"Tests FileManager.should_ignore_images functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"bool","constraint":"boolean value","description":"bool result"},"performance":{"memory_usage":"Medium - Image data processing"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","cv2","pathlib","PIL"],"source_file":"src\\compareblocks\\config\\file_manager.py","line_number":210,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":1.0040209293365479,"execution_count":1,"average_duration":1.0040209293365479,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.supports_mcp_integration","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Check if configuration supports MCP integration","parameters":["self"],"return_type":"bool","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests MCP integration support flag","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"bool result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FileManager.validate_target_pdf","module":"src.compareblocks.config.file_manager","class":"FileManager","description":"Validate that the target PDF exists and is accessible","parameters":["self"],"return_type":"bool","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests validation of target PDF file existence and accessibility","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"Boolean result"}},"side_effects":["Opens/closes PDF documents"],"dependencies":["fitz","PyMuPDF"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FormatParser.get_format_type","module":"compareblocks.association.parsers","class":"FormatParser","description":"Return the format type this parser handles.","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_parsers.py","test_description":"Tests FormatParser.get_format_type functionality","field_attributes":{"return_value":{"type":"str","constraint":"non-empty string","description":"Retrieved str value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\association\\parsers.py","line_number":37,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846378326416016,"execution_count":1,"average_duration":0.8846378326416016,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FormatParser.parse","module":"compareblocks.association.parsers","class":"FormatParser","description":"Parse content and extract meaningful text.","parameters":["self","content","file_path"],"return_type":"ParsedContent","test_file":"tests/unit/test_parsers.py","test_description":"Tests FormatParser.parse functionality","field_attributes":{"content":{"type":"Any","constraint":"valid input","description":"Parameter content"},"file_path":{"type":"Any","constraint":"valid input","description":"Parameter file_path"},"return_value":{"type":"ParsedContent","constraint":"valid return value","description":"ParsedContent result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\association\\parsers.py","line_number":32,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846378326416016,"execution_count":1,"average_duration":0.8846378326416016,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FunctionAnalyzer.visit_AsyncFunctionDef","module":"src.functions.analyze_project_test_coverage","class":"FunctionAnalyzer","description":"Visit async function definitions.","parameters":["self","node: Any"],"return_type":"Any","test_file":"tests/unit/test_functions_analyze_project_test_coverage.py","test_description":"Tests FunctionAnalyzer.FunctionAnalyzer.visit_AsyncFunctionDef functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9731612205505371,"execution_count":1,"average_duration":0.9731612205505371,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FunctionAnalyzer.visit_ClassDef","module":"src.functions.analyze_project_test_coverage","class":"FunctionAnalyzer","description":"Visit class definitions.","parameters":["self","node: Any"],"return_type":"Any","test_file":"tests/unit/test_functions_analyze_project_test_coverage.py","test_description":"Tests FunctionAnalyzer.FunctionAnalyzer.visit_ClassDef functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9731612205505371,"execution_count":1,"average_duration":0.9731612205505371,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FunctionAnalyzer.visit_FunctionDef","module":"src.functions.analyze_project_test_coverage","class":"FunctionAnalyzer","description":"Visit function definitions.","parameters":["self","node: Any"],"return_type":"Any","test_file":"tests/unit/test_functions_analyze_project_test_coverage.py","test_description":"Tests FunctionAnalyzer.FunctionAnalyzer.visit_FunctionDef functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9731612205505371,"execution_count":1,"average_duration":0.9731612205505371,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FunctionDiscovery.__init__","module":"functions.detect_missing_functions","class":"FunctionDiscovery","description":"Initialize function discovery","parameters":["self","src_root: str = \"src\""],"return_type":"None","test_file":"tests/unit/test_function_discovery.py","test_description":"Tests initialization of function discovery system","field_attributes":{"src_root":{"type":"str","constraint":"valid file path","description":"Root directory for source code","default":"\"src\""},"return_value":{"type":"None","constraint":"no return value","description":"Initializes discovery system"}},"side_effects":["Initializes object state","Configuration state changes"],"dependencies":["pathlib","sys"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.142524003982544,"execution_count":1,"average_duration":1.142524003982544,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FunctionDiscovery.append_missing_functions","module":"functions.detect_missing_functions","class":"FunctionDiscovery","description":"Append missing functions to the catalog","parameters":["self","catalog_path: Path","missing_functions: List[Dict[str, Any]]"],"return_type":"int","test_file":"tests/unit/test_function_discovery.py","test_description":"Tests appending missing functions to catalog file","field_attributes":{"catalog_path":{"type":"Path","constraint":"valid file path","description":"Path to function catalog file"},"missing_functions":{"type":"List[Dict[str, Any]]","constraint":"valid list","description":"List of functions to append"},"return_value":{"type":"int","constraint":">= 0","description":"Number of functions appended"}},"side_effects":["Creates or modifies files","File I/O operations"],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.142524003982544,"execution_count":1,"average_duration":1.142524003982544,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FunctionDiscovery.discover_all_functions","module":"functions.detect_missing_functions","class":"FunctionDiscovery","description":"Discover all functions in the source directory","parameters":["self"],"return_type":"List[Dict[str, Any]]","test_file":"tests/unit/test_function_discovery.py","test_description":"Tests comprehensive function discovery across all source files","field_attributes":{"return_value":{"type":"List[Dict[str, Any]]","constraint":"non-empty list","description":"List of all discovered functions"}},"side_effects":["File I/O operations"],"dependencies":["pathlib","ast"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.142524003982544,"execution_count":1,"average_duration":1.142524003982544,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FunctionDiscovery.discover_functions_from_ast","module":"functions.detect_missing_functions","class":"FunctionDiscovery","description":"Discover functions from a Python file using AST parsing","parameters":["self","file_path: Path"],"return_type":"List[Dict[str, Any]]","test_file":"tests/unit/test_function_discovery.py","test_description":"Tests AST-based function discovery from Python files","field_attributes":{"file_path":{"type":"Path","constraint":"valid file path","description":"Path to Python file to analyze"},"return_value":{"type":"List[Dict[str, Any]]","constraint":"non-empty list","description":"List of discovered function information"}},"side_effects":["File I/O operations","May raise FileNotFoundError"],"dependencies":["ast","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.142524003982544,"execution_count":1,"average_duration":1.142524003982544,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FunctionDiscovery.find_missing_functions","module":"functions.detect_missing_functions","class":"FunctionDiscovery","description":"Find functions that exist in code but are missing from catalog","parameters":["self","catalog_path: Path"],"return_type":"List[Dict[str, Any]]","test_file":"tests/unit/test_function_discovery.py","test_description":"Tests identification of functions missing from catalog","field_attributes":{"catalog_path":{"type":"Path","constraint":"valid file path","description":"Path to function catalog file"},"return_value":{"type":"List[Dict[str, Any]]","constraint":"valid list","description":"List of missing functions"}},"side_effects":["File I/O operations","Cache state modifications"],"dependencies":["pathlib","json","ast"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.142524003982544,"execution_count":1,"average_duration":1.142524003982544,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FunctionDiscovery.generate_missing_functions_report","module":"functions.detect_missing_functions","class":"FunctionDiscovery","description":"Generate a report of missing functions","parameters":["self","missing_functions: List[Dict[str, Any]]"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_function_discovery.py","test_description":"Tests generation of comprehensive missing functions report","field_attributes":{"missing_functions":{"type":"List[Dict[str, Any]]","constraint":"valid list","description":"List of missing functions"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Comprehensive missing functions report"}},"side_effects":[],"dependencies":["datetime"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.142524003982544,"execution_count":1,"average_duration":1.142524003982544,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FunctionDiscovery.load_existing_catalog","module":"functions.detect_missing_functions","class":"FunctionDiscovery","description":"Load existing function catalog and return set of function names","parameters":["self","catalog_path: Path"],"return_type":"Set[str]","test_file":"tests/unit/test_function_discovery.py","test_description":"Tests loading and parsing of existing function catalog","field_attributes":{"catalog_path":{"type":"Path","constraint":"valid file path","description":"Path to function catalog file"},"return_value":{"type":"Set[str]","constraint":"valid set","description":"Set of existing function names"}},"side_effects":["File I/O operations","May raise FileNotFoundError"],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.142524003982544,"execution_count":1,"average_duration":1.142524003982544,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FunctionExtractor.visit_ClassDef","module":"analyze_missing_files_and_functions","class":"FunctionExtractor","description":"Visit class definitions.","parameters":["self","node: Any"],"return_type":"Any","test_file":"tests/unit/test_analyze_missing_files_and_functions.py","test_description":"Tests FunctionExtractor.FunctionExtractor.visit_ClassDef functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8891410827636719,"execution_count":1,"average_duration":0.8891410827636719,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FunctionExtractor.visit_FunctionDef","module":"analyze_missing_files_and_functions","class":"FunctionExtractor","description":"Visit function definitions.","parameters":["self","node: Any"],"return_type":"Any","test_file":"tests/unit/test_analyze_missing_files_and_functions.py","test_description":"Tests FunctionExtractor.FunctionExtractor.visit_FunctionDef functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8891410827636719,"execution_count":1,"average_duration":0.8891410827636719,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"FunctionTestStatus.__post_init__","module":"compareblocks.testing.engine_validator","class":"FunctionTestStatus","description":"Function description","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_engine_validator.py","test_description":"Tests FunctionTestStatus.__post_init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Validates object state","May raise ValueError on validation failure"],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\engine_validator.py","line_number":39,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.865286111831665,"execution_count":1,"average_duration":0.865286111831665,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"GBGGuidedTesseractEngine.__init__","module":"compareblocks.engines.gbg_guided_tesseract_engine","class":"GBGGuidedTesseractEngine","description":"Initialize the GBG-guided Tesseract engine.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_gbg_guided_tesseract_engine.py","test_description":"Tests GBGGuidedTesseractEngine.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PySide6","PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\gbg_guided_tesseract_engine.py","line_number":55,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":23.82176423072815,"execution_count":1,"average_duration":23.82176423072815,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"GBGGuidedTesseractEngine.extract_text_with_gbg_guidance","module":"compareblocks.engines.gbg_guided_tesseract_engine","class":"GBGGuidedTesseractEngine","description":"Extract text using GBG guidance for optimal OCR processing.","parameters":["self","pdf_path","gbg_data"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_gbg_guided_tesseract_engine.py","test_description":"Tests GBGGuidedTesseractEngine.extract_text_with_gbg_guidance functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"gbg_data":{"type":"Any","constraint":"valid input","description":"Parameter gbg_data"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Extracted dict[str, any] data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6","PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\gbg_guided_tesseract_engine.py","line_number":68,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":23.82176423072815,"execution_count":1,"average_duration":23.82176423072815,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"GBGIntegratedEngineProcessor.__init__","module":"compareblocks.engines.gbg_integrated_processor","class":"GBGIntegratedEngineProcessor","description":"Initialize the GBG-integrated processor.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_gbg_integrated_processor.py","test_description":"Tests GBGIntegratedEngineProcessor.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Processed any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\gbg_integrated_processor.py","line_number":33,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8957972526550293,"execution_count":1,"average_duration":0.8957972526550293,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"GBGIntegratedEngineProcessor.process_engines_with_gbg_integration","module":"compareblocks.engines.gbg_integrated_processor","class":"GBGIntegratedEngineProcessor","description":"Process all engines and integrate results into GBG analysis container.","parameters":["self","pdf_path"],"return_type":"GBGIntegratedResult","test_file":"tests/unit/test_gbg_integrated_processor.py","test_description":"Tests GBGIntegratedEngineProcessor.process_engines_with_gbg_integration functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"GBGIntegratedResult","constraint":"valid return value","description":"Processed gbgintegratedresult result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Processing state changes"],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\gbg_integrated_processor.py","line_number":39,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8957972526550293,"execution_count":1,"average_duration":0.8957972526550293,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"GBGProcessor.__init__","module":"src.compareblocks.gbg.processor","class":"GBGProcessor","description":"Initialize the GBG processor with all required components","parameters":["self"],"return_type":"None","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests initialization of GBG processor with proper component setup","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PyMuPDF","fitz"],"test_functions":[],"test_count":0}
{"function_name":"GBGProcessor._analyze_block_geometry","module":"src.compareblocks.gbg.processor","class":"GBGProcessor","description":"Analyze geometric properties of a block including aspect ratio and position","parameters":["self","block: SeedBlock","page_info: Dict[str, Any]"],"return_type":"Dict[str, Any]","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests geometric analysis of blocks including classification and positioning","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Processed dict[str, any] result"},"block":{"type":"SeedBlock","constraint":"valid input","description":"Parameter block"},"page_info":{"type":"Dict[str, Any]","constraint":"non-empty string","description":"Parameter page_info"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Processing state changes"],"dependencies":["PyMuPDF","fitz"],"test_functions":[],"test_count":0}
{"function_name":"GBGProcessor._categorize_size","module":"src.compareblocks.gbg.processor","class":"GBGProcessor","description":"Categorize block size as small, medium, or large","parameters":["self","area: float"],"return_type":"str","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests size categorization of blocks based on area","field_attributes":{"return_value":{"type":"str","constraint":"valid string","description":"Processed str result"},"area":{"type":"float","constraint":">= 0.0","description":"Parameter area"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Processing state changes"],"dependencies":["PyMuPDF","fitz"],"test_functions":[],"test_count":0}
{"function_name":"GBGProcessor._generate_summary","module":"src.compareblocks.gbg.processor","class":"GBGProcessor","description":"Generate summary statistics for the entire PDF","parameters":["self","all_blocks: List[Dict]","page_summaries: List[Dict]","total_pages: int"],"return_type":"Dict[str, Any]","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests generation of comprehensive PDF processing summary statistics","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Processed dict[str, any] result"},"all_blocks":{"type":"List[Dict]","constraint":"valid list","description":"Parameter all_blocks"},"page_summaries":{"type":"List[Dict]","constraint":"valid list","description":"Parameter page_summaries"},"total_pages":{"type":"int","constraint":">= 0","description":"Parameter total_pages"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Processing state changes"],"dependencies":["PyMuPDF","fitz"],"test_functions":[],"test_count":0}
{"function_name":"GBGProcessor._get_timestamp","module":"src.compareblocks.gbg.processor","class":"GBGProcessor","description":"Get current timestamp in ISO format","parameters":["self"],"return_type":"str","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests timestamp generation for processing metadata","field_attributes":{"return_value":{"type":"str","constraint":"non-empty string","description":"Retrieved str value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Processing state changes"],"dependencies":["PyMuPDF","fitz"],"test_functions":[],"test_count":0}
{"function_name":"GBGProcessor._get_total_pages","module":"src.compareblocks.gbg.processor","class":"GBGProcessor","description":"Get total number of pages in PDF","parameters":["self","pdf_path: str"],"return_type":"int","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests page count determination for various PDF files","field_attributes":{"return_value":{"type":"int","constraint":"valid integer","description":"Retrieved int value"},"pdf_path":{"type":"str","constraint":"non-empty string","description":"Parameter pdf_path"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents"],"dependencies":["fitz","PyMuPDF"],"test_functions":[],"test_count":0}
{"function_name":"GBGProcessor._save_results","module":"src.compareblocks.gbg.processor","class":"GBGProcessor","description":"Save results to JSON file","parameters":["self","results: Dict[str, Any]","output_path: str"],"return_type":"None","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests saving of processing results to JSON files","field_attributes":{"results":{"type":"Dict[str, Any]","constraint":"non-empty string","description":"Parameter results"},"output_path":{"type":"str","constraint":"non-empty string","description":"Parameter output_path"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","Creates or modifies files"],"dependencies":["PyMuPDF","pathlib","fitz"],"test_functions":[],"test_count":0}
{"function_name":"GBGProcessor.process_page","module":"src.compareblocks.gbg.processor","class":"GBGProcessor","description":"Process single page through complete GBG pipeline","parameters":["self","pdf_path: str","page_num: int"],"return_type":"Dict[str, Any]","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests single page processing through GBG pipeline","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Processed dict[str, any] result"},"pdf_path":{"type":"str","constraint":"non-empty string","description":"Parameter pdf_path"},"page_num":{"type":"int","constraint":">= 0","description":"Parameter page_num"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents"],"dependencies":["fitz","PyMuPDF"],"test_functions":[],"test_count":0}
{"function_name":"GBGProcessor.process_pdf","module":"src.compareblocks.gbg.processor","class":"GBGProcessor","description":"Process entire PDF through complete GBG pipeline","parameters":["self","pdf_path: Optional[str] = None","output_path: Optional[str] = None"],"return_type":"Dict[str, Any]","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests complete PDF processing through GBG pipeline with various PDF types","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Processed dict[str, any] result"},"pdf_path":{"type":"Optional[str]","constraint":"non-empty string","description":"Parameter pdf_path","default":"None"},"output_path":{"type":"Optional[str]","constraint":"non-empty string","description":"Parameter output_path","default":"None"},"performance":{"time_complexity":"O(pages)","memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents"],"dependencies":["fitz","PyMuPDF"],"test_functions":[],"test_count":0}
{"function_name":"GuardDecision.to_dict","module":"src.compareblocks.consensus.guard","class":"GuardDecision","description":"Convert to dictionary format.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_consensus_guard.py","test_description":"Tests to_dict functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":0.8132691383361816,"execution_count":1,"average_duration":0.8132691383361816,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"HTMLParser.get_format_type","module":"compareblocks.association.parsers","class":"HTMLParser","description":"Function description","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_parsers.py","test_description":"Tests HTMLParser.get_format_type functionality","field_attributes":{"return_value":{"type":"str","constraint":"non-empty string","description":"Retrieved str value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\association\\parsers.py","line_number":181,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846378326416016,"execution_count":1,"average_duration":0.8846378326416016,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"HTMLParser.parse","module":"compareblocks.association.parsers","class":"HTMLParser","description":"Parse HTML content and extract meaningful text.","parameters":["self","content","file_path"],"return_type":"ParsedContent","test_file":"tests/unit/test_parsers.py","test_description":"Tests HTMLParser.parse functionality","field_attributes":{"content":{"type":"Any","constraint":"valid input","description":"Parameter content"},"file_path":{"type":"Any","constraint":"valid input","description":"Parameter file_path"},"return_value":{"type":"ParsedContent","constraint":"valid return value","description":"ParsedContent result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\association\\parsers.py","line_number":109,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846378326416016,"execution_count":1,"average_duration":0.8846378326416016,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"HallucinationGuard.__init__","module":"src.compareblocks.consensus.guard","class":"HallucinationGuard","description":"Initialize the hallucination guard.","parameters":["self","scorer","guard_thresholds"],"return_type":"Any","test_file":"tests/unit/test_consensus_guard.py","test_description":"Tests __init__ functionality with real consensus data","field_attributes":{"scorer":{"type":"Any","constraint":"valid input","description":"Parameter scorer"},"guard_thresholds":{"type":"Any","constraint":"valid input","description":"Parameter guard_thresholds"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":0.8132691383361816,"execution_count":1,"average_duration":0.8132691383361816,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"HallucinationGuard.evaluate_variations","module":"src.compareblocks.consensus.guard","class":"HallucinationGuard","description":"Evaluate variations and make a guard decision.","parameters":["self","variations","context_texts"],"return_type":"Any","test_file":"tests/unit/test_consensus_guard.py","test_description":"Tests evaluate_variations functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":0.8132691383361816,"execution_count":1,"average_duration":0.8132691383361816,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"HallucinationGuard.get_anomaly_summary","module":"src.compareblocks.consensus.guard","class":"HallucinationGuard","description":"Get summary of anomalies detected in variations.","parameters":["self","variations"],"return_type":"Any","test_file":"tests/unit/test_consensus_guard.py","test_description":"Tests get_anomaly_summary functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":0.8132691383361816,"execution_count":1,"average_duration":0.8132691383361816,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"HallucinationGuard.get_guard_configuration","module":"src.compareblocks.consensus.guard","class":"HallucinationGuard","description":"Get current guard configuration.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_consensus_guard.py","test_description":"Tests get_guard_configuration functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":0.8132691383361816,"execution_count":1,"average_duration":0.8132691383361816,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"HallucinationGuard.is_variation_safe_for_auto_selection","module":"src.compareblocks.consensus.guard","class":"HallucinationGuard","description":"Quick check if a single variation is safe for auto-selection.","parameters":["self","variation_text","engine_name"],"return_type":"Any","test_file":"tests/unit/test_consensus_guard.py","test_description":"Tests is_variation_safe_for_auto_selection functionality with real consensus data","field_attributes":{"variation_text":{"type":"Any","constraint":"valid input","description":"Parameter variation_text"},"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":0.8132691383361816,"execution_count":1,"average_duration":0.8132691383361816,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"HallucinationGuard.update_guard_thresholds","module":"src.compareblocks.consensus.guard","class":"HallucinationGuard","description":"Update guard thresholds.","parameters":["self","new_thresholds"],"return_type":"Any","test_file":"tests/unit/test_consensus_guard.py","test_description":"Tests update_guard_thresholds functionality with real consensus data","field_attributes":{"new_thresholds":{"type":"Any","constraint":"valid input","description":"Parameter new_thresholds"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":0.8132691383361816,"execution_count":1,"average_duration":0.8132691383361816,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ImageRegionExtractor.__init__","module":"compareblocks.debug.image_extractor","class":"ImageRegionExtractor","description":"Initialize the image extractor.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_image_extractor.py","test_description":"Tests ImageRegionExtractor.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Extracted any data"},"performance":{"memory_usage":"Medium - Image data processing"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["matplotlib","cv2","PIL"],"source_file":"src\\compareblocks\\debug\\image_extractor.py","line_number":22,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8857457637786865,"execution_count":1,"average_duration":0.8857457637786865,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ImageRegionExtractor.create_debug_report","module":"compareblocks.debug.image_extractor","class":"ImageRegionExtractor","description":"Create an HTML debug report showing images and OCR results.","parameters":["self","extracted_regions","tesseract_results"],"return_type":"str","test_file":"tests/unit/test_image_extractor.py","test_description":"Tests ImageRegionExtractor.create_debug_report functionality","field_attributes":{"extracted_regions":{"type":"Any","constraint":"valid input","description":"Parameter extracted_regions"},"tesseract_results":{"type":"Any","constraint":"valid input","description":"Parameter tesseract_results"},"return_value":{"type":"str","constraint":"valid string","description":"Extracted str data"},"performance":{"memory_usage":"Medium - Image data processing"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["matplotlib","cv2","PIL"],"source_file":"src\\compareblocks\\debug\\image_extractor.py","line_number":181,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8857457637786865,"execution_count":1,"average_duration":0.8857457637786865,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ImageRegionExtractor.extract_page_regions","module":"compareblocks.debug.image_extractor","class":"ImageRegionExtractor","description":"Extract image regions for the first few blocks on a page for debugging.","parameters":["self","pdf_path","page_num","gbg_blocks","max_blocks"],"return_type":"List[Dict[str, Any]]","test_file":"tests/unit/test_image_extractor.py","test_description":"Tests ImageRegionExtractor.extract_page_regions functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"page_num":{"type":"Any","constraint":"valid input","description":"Parameter page_num"},"gbg_blocks":{"type":"Any","constraint":"valid input","description":"Parameter gbg_blocks"},"max_blocks":{"type":"Any","constraint":"valid input","description":"Parameter max_blocks"},"return_value":{"type":"List[Dict[str, Any]]","constraint":"non-empty list","description":"Extracted or retrieved items"},"performance":{"memory_usage":"Medium - Image data processing"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["matplotlib","cv2","PIL"],"source_file":"src\\compareblocks\\debug\\image_extractor.py","line_number":27,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8857457637786865,"execution_count":1,"average_duration":0.8857457637786865,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ImportDialog.__init__","module":"compareblocks.gui.import_dialog","class":"ImportDialog","description":"Function description","parameters":["self","parent"],"return_type":"Any","test_file":"tests/unit/test_import_dialog.py","test_description":"Tests ImportDialog.__init__ functionality","field_attributes":{"parent":{"type":"Any","constraint":"valid input","description":"Parameter parent"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\import_dialog.py","line_number":254,"test_functions":[],"test_count":0}
{"function_name":"ImportDialog.apply_import_filters","module":"compareblocks.gui.import_dialog","class":"ImportDialog","description":"Apply import filters to records.","parameters":["self","records","options"],"return_type":"List[Dict[str, Any]]","test_file":"tests/unit/test_import_dialog.py","test_description":"Tests ImportDialog.apply_import_filters functionality","field_attributes":{"records":{"type":"Any","constraint":"valid input","description":"Parameter records"},"options":{"type":"Any","constraint":"valid input","description":"Parameter options"},"return_value":{"type":"List[Dict[str, Any]]","constraint":"valid list","description":"List[Dict[str, Any]] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\import_dialog.py","line_number":424,"test_functions":[],"test_count":0}
{"function_name":"ImportDialog.browse_file","module":"compareblocks.gui.import_dialog","class":"ImportDialog","description":"Browse for NDJSON file.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_import_dialog.py","test_description":"Tests ImportDialog.browse_file functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\import_dialog.py","line_number":330,"test_functions":[],"test_count":0}
{"function_name":"ImportDialog.handle_duplicates","module":"compareblocks.gui.import_dialog","class":"ImportDialog","description":"Handle duplicate records based on strategy.","parameters":["self","records","handling"],"return_type":"List[Dict[str, Any]]","test_file":"tests/unit/test_import_dialog.py","test_description":"Tests ImportDialog.handle_duplicates functionality","field_attributes":{"records":{"type":"Any","constraint":"valid input","description":"Parameter records"},"handling":{"type":"Any","constraint":"valid input","description":"Parameter handling"},"return_value":{"type":"List[Dict[str, Any]]","constraint":"valid list","description":"List[Dict[str, Any]] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\import_dialog.py","line_number":453,"test_functions":[],"test_count":0}
{"function_name":"ImportDialog.import_variations","module":"compareblocks.gui.import_dialog","class":"ImportDialog","description":"Import the validated variations.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_import_dialog.py","test_description":"Tests ImportDialog.import_variations functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\import_dialog.py","line_number":396,"test_functions":[],"test_count":0}
{"function_name":"ImportDialog.on_progress_update","module":"compareblocks.gui.import_dialog","class":"ImportDialog","description":"Handle validation progress updates.","parameters":["self","progress","status"],"return_type":"Any","test_file":"tests/unit/test_import_dialog.py","test_description":"Tests ImportDialog.on_progress_update functionality","field_attributes":{"progress":{"type":"Any","constraint":"valid input","description":"Parameter progress"},"status":{"type":"Any","constraint":"valid input","description":"Parameter status"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\import_dialog.py","line_number":367,"test_functions":[],"test_count":0}
{"function_name":"ImportDialog.on_validation_complete","module":"compareblocks.gui.import_dialog","class":"ImportDialog","description":"Handle validation completion.","parameters":["self","success","message","records"],"return_type":"Any","test_file":"tests/unit/test_import_dialog.py","test_description":"Tests ImportDialog.on_validation_complete functionality","field_attributes":{"success":{"type":"Any","constraint":"valid input","description":"Parameter success"},"message":{"type":"Any","constraint":"valid input","description":"Parameter message"},"records":{"type":"Any","constraint":"valid input","description":"Parameter records"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\import_dialog.py","line_number":372,"test_functions":[],"test_count":0}
{"function_name":"ImportDialog.setup_ui","module":"compareblocks.gui.import_dialog","class":"ImportDialog","description":"Setup the import dialog UI.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_import_dialog.py","test_description":"Tests ImportDialog.setup_ui functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\import_dialog.py","line_number":266,"test_functions":[],"test_count":0}
{"function_name":"ImportDialog.validate_file","module":"compareblocks.gui.import_dialog","class":"ImportDialog","description":"Validate the selected NDJSON file.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_import_dialog.py","test_description":"Tests ImportDialog.validate_file functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Validation result"},"performance":{"time_complexity":"O(1)","memory_usage":"Low - Validation operations"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["May raise ValidationError"],"dependencies":["jsonschema","PySide6"],"source_file":"src\\compareblocks\\gui\\import_dialog.py","line_number":348,"test_functions":[],"test_count":0}
{"function_name":"ImportOptionsWidget.__init__","module":"compareblocks.gui.import_dialog","class":"ImportOptionsWidget","description":"Function description","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_import_dialog.py","test_description":"Tests ImportOptionsWidget.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\import_dialog.py","line_number":161,"test_functions":[],"test_count":0}
{"function_name":"ImportOptionsWidget.get_import_options","module":"compareblocks.gui.import_dialog","class":"ImportOptionsWidget","description":"Get the current import options.","parameters":["self"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_import_dialog.py","test_description":"Tests ImportOptionsWidget.get_import_options functionality","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Retrieved dict[str, any] value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\import_dialog.py","line_number":222,"test_functions":[],"test_count":0}
{"function_name":"ImportOptionsWidget.set_available_engines","module":"compareblocks.gui.import_dialog","class":"ImportOptionsWidget","description":"Set the available engines for filtering.","parameters":["self","engines"],"return_type":"Any","test_file":"tests/unit/test_import_dialog.py","test_description":"Tests ImportOptionsWidget.set_available_engines functionality","field_attributes":{"engines":{"type":"Any","constraint":"valid input","description":"Parameter engines"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\import_dialog.py","line_number":234,"test_functions":[],"test_count":0}
{"function_name":"ImportOptionsWidget.setup_ui","module":"compareblocks.gui.import_dialog","class":"ImportOptionsWidget","description":"Setup the import options UI.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_import_dialog.py","test_description":"Tests ImportOptionsWidget.setup_ui functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\import_dialog.py","line_number":165,"test_functions":[],"test_count":0}
{"function_name":"InputFeedConfig.__init__","module":"visual_ocr_testing_tool","class":"InputFeedConfig","description":"Initialize configuration for input feed sources with validation and defaults","parameters":[{"name":"name","type":"str","description":"Unique name for the feed"},{"name":"type","type":"str","description":"Feed type (mcp, json, api, file, database, code)"},{"name":"source","type":"str","description":"Source path or URL for the feed"},{"name":"enabled","type":"bool","description":"Whether the feed is active","default":true},{"name":"refresh_interval","type":"int","description":"Refresh interval in seconds","default":30},{"name":"parameters","type":"Optional[Dict[str, Any]]","description":"Additional parameters","default":null}],"return_type":"None","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests creation with all parameters and default values","field_attributes":{"name":{"type":"str","constraint":"not empty","description":"Unique identifier for the feed"},"type":{"type":"str","constraint":"one of: mcp, json, api, file, database, code","description":"Determines how the feed source is processed"},"source":{"type":"str","constraint":"valid path or URL","description":"Location of the data source"},"enabled":{"type":"bool","constraint":"boolean value","description":"Controls whether feed is actively monitored","default":true},"refresh_interval":{"type":"int","constraint":">= 5","description":"Seconds between feed updates","default":30}},"side_effects":["Creates dataclass instance with validated parameters"],"dependencies":["dataclasses","typing"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"InputFeedManager.add_callback","module":"visual_ocr_testing_tool","class":"InputFeedManager","description":"Add callback for feed updates.","parameters":["self","callback: Any"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests InputFeedManager.InputFeedManager.add_callback functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"InputFeedManager.register_feed","module":"visual_ocr_testing_tool","class":"InputFeedManager","description":"Register a new input feed","parameters":["self","config: InputFeedConfig"],"return_type":"None","test_file":"tests/unit/test_visual_ocr_tool.py","test_description":"Tests registration of new input feeds","field_attributes":{"config":{"type":"InputFeedConfig","constraint":"valid input","description":"Input feed configuration"},"return_value":{"type":"None","constraint":"no return value","description":"Registers feed configuration"}},"side_effects":["Configuration state changes"],"dependencies":["datetime"],"test_functions":[],"test_count":0}
{"function_name":"InputFeedManager.start_feeds","module":"visual_ocr_testing_tool","class":"InputFeedManager","description":"Start all enabled feeds","parameters":["self"],"return_type":"None","test_file":"tests/unit/test_visual_ocr_tool.py","test_description":"Tests starting of all enabled input feeds","field_attributes":{"return_value":{"type":"None","constraint":"no return value","description":"Starts feed processing"}},"side_effects":["Processing state changes","Threading operations"],"dependencies":["concurrent.futures","threading"],"test_functions":[],"test_count":0}
{"function_name":"InputFeedManager.stop_feeds","module":"visual_ocr_testing_tool","class":"InputFeedManager","description":"Stop all feeds","parameters":["self"],"return_type":"None","test_file":"tests/unit/test_visual_ocr_tool.py","test_description":"Tests stopping of all input feeds","field_attributes":{"return_value":{"type":"None","constraint":"no return value","description":"Stops feed processing"}},"side_effects":["Processing state changes","Threading operations"],"dependencies":["concurrent.futures"],"test_functions":[],"test_count":0}
{"function_name":"IntegratedEngineProcessor.__init__","module":"compareblocks.engines.integrated_processor","class":"IntegratedEngineProcessor","description":"Initialize the integrated processor.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_integrated_processor.py","test_description":"Tests IntegratedEngineProcessor.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Processed any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\integrated_processor.py","line_number":47,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9608924388885498,"execution_count":1,"average_duration":0.9608924388885498,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"IntegratedEngineProcessor.process_pdf_integrated","module":"compareblocks.engines.integrated_processor","class":"IntegratedEngineProcessor","description":"Process PDF with integrated approach: PyMuPDF first, then align other engines.","parameters":["self","pdf_path"],"return_type":"IntegratedResult","test_file":"tests/unit/test_integrated_processor.py","test_description":"Tests IntegratedEngineProcessor.process_pdf_integrated functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"IntegratedResult","constraint":"valid return value","description":"Processed integratedresult result"},"performance":{"time_complexity":"O(pages)","memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\integrated_processor.py","line_number":75,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9608924388885498,"execution_count":1,"average_duration":0.9608924388885498,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"IntegratedEngineProcessor.save_integrated_results","module":"compareblocks.engines.integrated_processor","class":"IntegratedEngineProcessor","description":"Save integrated processing results.","parameters":["self","result","output_path"],"return_type":"str","test_file":"tests/unit/test_integrated_processor.py","test_description":"Tests IntegratedEngineProcessor.save_integrated_results functionality","field_attributes":{"result":{"type":"Any","constraint":"valid input","description":"Parameter result"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"return_value":{"type":"str","constraint":"valid string","description":"Processed str result"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","Creates or modifies files"],"dependencies":["PyMuPDF","pathlib","fitz"],"source_file":"src\\compareblocks\\engines\\integrated_processor.py","line_number":321,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9608924388885498,"execution_count":1,"average_duration":0.9608924388885498,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"IoUMatcher.__init__","module":"src.compareblocks.mapping.match","class":"IoUMatcher","description":"Initialize the matcher with configuration for IoU thresholds","parameters":["self","config: Optional[MatchConfig] = None"],"return_type":"None","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests initialization of IoU matcher with various configuration parameters","field_attributes":{"config":{"type":"Optional[MatchConfig]","constraint":"valid input","description":"Parameter config","default":"None"},"performance":{"time_complexity":"O(n*m)"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"IoUMatcher.calculate_iou","module":"src.compareblocks.mapping.match","class":"IoUMatcher","description":"Calculate Intersection over Union (IoU) between two bounding boxes","parameters":["self","bbox1: BoundingBox","bbox2: BoundingBox"],"return_type":"float","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests IoU calculation for identical, overlapping, and non-overlapping bounding boxes","field_attributes":{"return_value":{"type":"float","constraint":"0.0 <= value <= 1.0","description":"Normalized score or IoU value"},"bbox1":{"type":"BoundingBox","constraint":"valid input","description":"Parameter bbox1"},"bbox2":{"type":"BoundingBox","constraint":"valid input","description":"Parameter bbox2"},"performance":{"time_complexity":"O(n*m)"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["BoundingBox","SeedBlock"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"IoUMatcher.calculate_overlap_area","module":"src.compareblocks.mapping.match","class":"IoUMatcher","description":"Calculate the overlap area between two bounding boxes","parameters":["self","bbox1: BoundingBox","bbox2: BoundingBox"],"return_type":"float","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests overlap area calculation for various bounding box configurations","field_attributes":{"return_value":{"type":"float","constraint":"0.0 <= value <= 1.0","description":"Normalized score or IoU value"},"bbox1":{"type":"BoundingBox","constraint":"valid input","description":"Parameter bbox1"},"bbox2":{"type":"BoundingBox","constraint":"valid input","description":"Parameter bbox2"},"performance":{"time_complexity":"O(n*m)"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["BoundingBox","SeedBlock"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"IoUMatcher.find_best_match","module":"src.compareblocks.mapping.match","class":"IoUMatcher","description":"Find the best matching seed block for an external bounding box","parameters":["self","external_bbox: BoundingBox","seed_blocks: List[SeedBlock]","page_filter: Optional[int] = None"],"return_type":"Optional[MatchResult]","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests finding best match among multiple seed blocks with quality thresholds","field_attributes":{"external_bbox":{"type":"BoundingBox","constraint":"valid input","description":"Parameter external_bbox"},"seed_blocks":{"type":"List[SeedBlock]","constraint":"valid list","description":"Parameter seed_blocks"},"page_filter":{"type":"Optional[int]","constraint":">= 0","description":"Parameter page_filter","default":"None"},"return_value":{"type":"Optional[MatchResult]","constraint":"valid return value","description":"Optional[MatchResult] result"},"performance":{"time_complexity":"O(n)"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["BoundingBox","SeedBlock"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"IoUMatcher.get_match_statistics","module":"src.compareblocks.mapping.match","class":"IoUMatcher","description":"Get statistics about matching performance across multiple external boxes","parameters":["self","external_bboxes: List[BoundingBox]","seed_blocks: List[SeedBlock]"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests generation of matching statistics including match rates and average IoU scores","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Retrieved dict[str, any] value"},"external_bboxes":{"type":"List[BoundingBox]","constraint":"valid list","description":"Parameter external_bboxes"},"seed_blocks":{"type":"List[SeedBlock]","constraint":"valid list","description":"Parameter seed_blocks"},"performance":{"time_complexity":"O(n*m)"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["BoundingBox","SeedBlock"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"IoUMatcher.handle_exact_matches","module":"src.compareblocks.mapping.match","class":"IoUMatcher","description":"Handle exact matches and slightly larger/smaller bounding boxes","parameters":["self","external_bbox: BoundingBox","seed_blocks: List[SeedBlock]","page_filter: Optional[int] = None"],"return_type":"List[MatchResult]","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests handling of exact and near-exact matches with tolerance for size variations","field_attributes":{"return_value":{"type":"List[MatchResult]","constraint":"valid list","description":"List[MatchResult] result"},"external_bbox":{"type":"BoundingBox","constraint":"valid input","description":"Parameter external_bbox"},"seed_blocks":{"type":"List[SeedBlock]","constraint":"valid list","description":"Parameter seed_blocks"},"page_filter":{"type":"Optional[int]","constraint":">= 0","description":"Parameter page_filter","default":"None"},"performance":{"time_complexity":"O(n*m)"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["BoundingBox","SeedBlock"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"IoUMatcher.match_to_seed_blocks","module":"src.compareblocks.mapping.match","class":"IoUMatcher","description":"Match an external bounding box to seed blocks using IoU","parameters":["self","external_bbox: BoundingBox","seed_blocks: List[SeedBlock]","page_filter: Optional[int] = None"],"return_type":"List[MatchResult]","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests matching of external bounding boxes to seed blocks with various IoU thresholds","field_attributes":{"return_value":{"type":"List[MatchResult]","constraint":"valid list","description":"List[MatchResult] result"},"external_bbox":{"type":"BoundingBox","constraint":"valid input","description":"Parameter external_bbox"},"seed_blocks":{"type":"List[SeedBlock]","constraint":"valid list","description":"Parameter seed_blocks"},"page_filter":{"type":"Optional[int]","constraint":">= 0","description":"Parameter page_filter","default":"None"},"performance":{"time_complexity":"O(n*m)"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["BoundingBox","SeedBlock"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"JSONParser.get_format_type","module":"compareblocks.association.parsers","class":"JSONParser","description":"Function description","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_parsers.py","test_description":"Tests JSONParser.get_format_type functionality","field_attributes":{"return_value":{"type":"str","constraint":"non-empty string","description":"Retrieved str value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\association\\parsers.py","line_number":275,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846378326416016,"execution_count":1,"average_duration":0.8846378326416016,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"JSONParser.parse","module":"compareblocks.association.parsers","class":"JSONParser","description":"Parse JSON content and extract structured data.","parameters":["self","content","file_path"],"return_type":"ParsedContent","test_file":"tests/unit/test_parsers.py","test_description":"Tests JSONParser.parse functionality","field_attributes":{"content":{"type":"Any","constraint":"valid input","description":"Parameter content"},"file_path":{"type":"Any","constraint":"valid input","description":"Parameter file_path"},"return_value":{"type":"ParsedContent","constraint":"valid return value","description":"ParsedContent result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\association\\parsers.py","line_number":188,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846378326416016,"execution_count":1,"average_duration":0.8846378326416016,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"KreuzbergEngine.__init__","module":"compareblocks.engines.kreuzberg_engine","class":"KreuzbergEngine","description":"Initialize Kreuzberg engine.","parameters":["self","ocr_backend","output_format"],"return_type":"Any","test_file":"tests/unit/test_kreuzberg_engine.py","test_description":"Tests KreuzbergEngine.__init__ functionality","field_attributes":{"ocr_backend":{"type":"Any","constraint":"valid input","description":"Parameter ocr_backend"},"output_format":{"type":"Any","constraint":"valid input","description":"Parameter output_format"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\kreuzberg_engine.py","line_number":43,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9168534278869629,"execution_count":1,"average_duration":0.9168534278869629,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"KreuzbergEngine.extract_pdf","module":"compareblocks.engines.kreuzberg_engine","class":"KreuzbergEngine","description":"Extract text from PDF using Kreuzberg.","parameters":["self","pdf_path"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_kreuzberg_engine.py","test_description":"Tests KreuzbergEngine.extract_pdf functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Extracted dict[str, any] data"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\kreuzberg_engine.py","line_number":62,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9168534278869629,"execution_count":1,"average_duration":0.9168534278869629,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"KreuzbergEngine.is_available","module":"compareblocks.engines.kreuzberg_engine","class":"KreuzbergEngine","description":"Check if Kreuzberg is available.","parameters":["self"],"return_type":"bool","test_file":"tests/unit/test_kreuzberg_engine.py","test_description":"Tests KreuzbergEngine.is_available functionality","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"bool result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\kreuzberg_engine.py","line_number":58,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9168534278869629,"execution_count":1,"average_duration":0.9168534278869629,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"KreuzbergEngine.save_extraction","module":"compareblocks.engines.kreuzberg_engine","class":"KreuzbergEngine","description":"Extract and save Kreuzberg data.","parameters":["self","pdf_path","output_path"],"return_type":"str","test_file":"tests/unit/test_kreuzberg_engine.py","test_description":"Tests KreuzbergEngine.save_extraction functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"return_value":{"type":"str","constraint":"valid string","description":"Extracted str data"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","Creates or modifies files"],"dependencies":["PyMuPDF","pathlib","fitz"],"source_file":"src\\compareblocks\\engines\\kreuzberg_engine.py","line_number":210,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9168534278869629,"execution_count":1,"average_duration":0.9168534278869629,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"LanguageFeatureExtractor.__init__","module":"src.compareblocks.features.language","class":"LanguageFeatureExtractor","description":"Initialize the language feature extractor.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_features_language.py","test_description":"Tests __init__ functionality with real PDF data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Extracted any data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.128654956817627,"execution_count":1,"average_duration":1.128654956817627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"LanguageFeatureExtractor.compare_language_fitness","module":"src.compareblocks.features.language","class":"LanguageFeatureExtractor","description":"Compare language fitness scores across variations.","parameters":["self","variations"],"return_type":"Any","test_file":"tests/unit/test_features_language.py","test_description":"Tests compare_language_fitness functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Extracted any data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.128654956817627,"execution_count":1,"average_duration":1.128654956817627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"LanguageFeatureExtractor.extract_features_for_variations","module":"src.compareblocks.features.language","class":"LanguageFeatureExtractor","description":"Extract language features for multiple variations.","parameters":["self","variations"],"return_type":"Any","test_file":"tests/unit/test_features_language.py","test_description":"Tests extract_features_for_variations functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Extracted any data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.128654956817627,"execution_count":1,"average_duration":1.128654956817627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"LanguageFeatureExtractor.extract_language_features","module":"src.compareblocks.features.language","class":"LanguageFeatureExtractor","description":"Extract language fitness features from text.","parameters":["self","text"],"return_type":"LanguageFeatures","test_file":"tests/unit/test_features_language.py","test_description":"Tests extract_language_features functionality with real PDF data","field_attributes":{"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"return_value":{"type":"LanguageFeatures","constraint":"valid return value","description":"Extracted languagefeatures data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.128654956817627,"execution_count":1,"average_duration":1.128654956817627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"LanguageFeatureExtractor.get_language_statistics","module":"src.compareblocks.features.language","class":"LanguageFeatureExtractor","description":"Get language statistics for a set of variations.","parameters":["self","variations"],"return_type":"Any","test_file":"tests/unit/test_features_language.py","test_description":"Tests get_language_statistics functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Extracted any data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.128654956817627,"execution_count":1,"average_duration":1.128654956817627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"LanguageFeatures.to_dict","module":"compareblocks.features.language","class":"LanguageFeatures","description":"Convert features to dictionary format.","parameters":["self"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_language.py","test_description":"Tests LanguageFeatures.to_dict functionality","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Dict[str, Any] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"source_file":"src\\compareblocks\\features\\language.py","line_number":25,"test_functions":[],"test_count":0}
{"function_name":"LengthFeatures.to_dict","module":"compareblocks.features.core","class":"LengthFeatures","description":"Convert features to dictionary format.","parameters":["self"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_core.py","test_description":"Tests LengthFeatures.to_dict functionality","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Dict[str, Any] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"source_file":"src\\compareblocks\\features\\core.py","line_number":22,"test_functions":[],"test_count":0}
{"function_name":"MCPClient.__init__","module":"src.compareblocks.mcp.client","class":"MCPClient","description":"Initialize MCP client with server URL","parameters":["self","server_url: str = 'ws://localhost:8765'"],"return_type":"None","test_file":"tests/integration/test_mcp_integration.py","test_description":"Tests initialization of MCP client","field_attributes":{"server_url":{"type":"str","constraint":"valid URL","description":"Server WebSocket URL","default":"ws://localhost:8765"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["websockets","asyncio","logging"],"test_functions":[],"test_count":0}
{"function_name":"MCPClient.connect","module":"src.compareblocks.mcp.client","class":"MCPClient","description":"Connect to MCP server via WebSocket","parameters":["self"],"return_type":"bool","test_file":"tests/integration/test_mcp_integration.py","test_description":"Tests connection to MCP server","field_attributes":{"return_value":{"type":"bool","constraint":"connection status","description":"Connection success"},"performance":{"io_operations":"Network operations"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Establishes WebSocket connection"],"dependencies":["websockets","asyncio"],"test_functions":[],"test_count":0}
{"function_name":"MCPClient.disconnect","module":"src.compareblocks.mcp.client","class":"MCPClient","description":"Disconnect from MCP server","parameters":["self"],"return_type":"None","test_file":"tests/integration/test_mcp_integration.py","test_description":"Tests disconnection from MCP server","field_attributes":{"performance":{"io_operations":"Network operations"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Closes WebSocket connection"],"dependencies":["websockets"],"test_functions":[],"test_count":0}
{"function_name":"MCPClient.get_client_info","module":"src.compareblocks.mcp.client","class":"MCPClient","description":"Get client information and status","parameters":["self"],"return_type":"Dict[str, Any]","test_file":"tests/integration/test_mcp_integration.py","test_description":"Tests retrieval of client information","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"client info","description":"Client status and info"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"MCPClient.get_results","module":"src.compareblocks.mcp.client","class":"MCPClient","description":"Get processing results for completed session","parameters":["self","session_id: str","format_type: str = 'json'","include_analytics: bool = False"],"return_type":"Dict[str, Any]","test_file":"tests/integration/test_mcp_integration.py","test_description":"Tests retrieval of processing results","field_attributes":{"session_id":{"type":"str","constraint":"session ID","description":"Session identifier"},"format_type":{"type":"str","constraint":"format type","description":"Result format","default":"json"},"include_analytics":{"type":"bool","constraint":"boolean","description":"Include analytics","default":"False"},"return_value":{"type":"Dict[str, Any]","constraint":"results data","description":"Processing results"},"performance":{"io_operations":"Network operations"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["asyncio"],"test_functions":[],"test_count":0}
{"function_name":"MCPClient.get_status","module":"src.compareblocks.mcp.client","class":"MCPClient","description":"Get processing status for session or system","parameters":["self","session_id: Optional[str] = None","include_details: bool = False"],"return_type":"Dict[str, Any]","test_file":"tests/integration/test_mcp_integration.py","test_description":"Tests retrieval of processing status","field_attributes":{"session_id":{"type":"Optional[str]","constraint":"session ID","description":"Session identifier","default":"None"},"include_details":{"type":"bool","constraint":"boolean","description":"Include detailed info","default":"False"},"return_value":{"type":"Dict[str, Any]","constraint":"status data","description":"Status information"},"performance":{"io_operations":"Network operations"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["asyncio"],"test_functions":[],"test_count":0}
{"function_name":"MCPClient.initialize","module":"src.compareblocks.mcp.client","class":"MCPClient","description":"Initialize MCP connection with server","parameters":["self","client_info: Dict[str, Any]"],"return_type":"Dict[str, Any]","test_file":"tests/integration/test_mcp_integration.py","test_description":"Tests MCP connection initialization","field_attributes":{"client_info":{"type":"Dict[str, Any]","constraint":"client info","description":"Client information"},"return_value":{"type":"Dict[str, Any]","constraint":"server response","description":"Initialization response"},"performance":{"io_operations":"Network operations"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes MCP session"],"dependencies":["asyncio"],"test_functions":[],"test_count":0}
{"function_name":"MCPClient.is_connected","module":"src.compareblocks.mcp.client","class":"MCPClient","description":"Check if client is connected to server","parameters":["self"],"return_type":"bool","test_file":"tests/integration/test_mcp_integration.py","test_description":"Tests connection status checking","field_attributes":{"return_value":{"type":"bool","constraint":"connection status","description":"Connection state"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"MCPClient.is_initialized","module":"src.compareblocks.mcp.client","class":"MCPClient","description":"Check if client is initialized with server","parameters":["self"],"return_type":"bool","test_file":"tests/integration/test_mcp_integration.py","test_description":"Tests initialization status checking","field_attributes":{"return_value":{"type":"bool","constraint":"initialization status","description":"Initialization state"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"MCPClient.set_notification_handler","module":"src.compareblocks.mcp.client","class":"MCPClient","description":"Set handler for notification events","parameters":["self","event_type: str","handler: Callable[[Dict[str, Any]], None]"],"return_type":"None","test_file":"tests/integration/test_mcp_integration.py","test_description":"Tests setting of notification handlers","field_attributes":{"event_type":{"type":"str","constraint":"event type","description":"Event type"},"handler":{"type":"Callable[[Dict[str, Any]], None]","constraint":"callable","description":"Event handler function"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Updates handler registry"],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"MCPClient.submit_extraction","module":"src.compareblocks.mcp.client","class":"MCPClient","description":"Submit extraction data for processing","parameters":["self","pdf_path: str","variations: List[Dict[str, Any]]","metadata: Optional[Dict[str, Any]] = None"],"return_type":"Dict[str, Any]","test_file":"tests/integration/test_mcp_integration.py","test_description":"Tests submission of extraction data","field_attributes":{"pdf_path":{"type":"str","constraint":"file path","description":"PDF file path"},"variations":{"type":"List[Dict[str, Any]]","constraint":"extraction data","description":"Extraction variations"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"},"return_value":{"type":"Dict[str, Any]","constraint":"submission response","description":"Submission result"},"performance":{"io_operations":"Network operations"}},"side_effects":["Sends extraction data"],"dependencies":["asyncio"],"test_functions":[],"test_count":0}
{"function_name":"MCPClient.subscribe_updates","module":"src.compareblocks.mcp.client","class":"MCPClient","description":"Subscribe to event notifications","parameters":["self","event_types: List[str]"],"return_type":"Dict[str, Any]","test_file":"tests/integration/test_mcp_integration.py","test_description":"Tests subscription to event notifications","field_attributes":{"event_types":{"type":"List[str]","constraint":"event types","description":"Events to subscribe"},"return_value":{"type":"Dict[str, Any]","constraint":"subscription response","description":"Subscription result"},"performance":{"io_operations":"Network operations"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Updates subscription state"],"dependencies":["asyncio"],"test_functions":[],"test_count":0}
{"function_name":"MCPClient.unsubscribe_updates","module":"src.compareblocks.mcp.client","class":"MCPClient","description":"Unsubscribe from event notifications","parameters":["self","event_types: List[str]"],"return_type":"Dict[str, Any]","test_file":"tests/integration/test_mcp_integration.py","test_description":"Tests unsubscription from event notifications","field_attributes":{"event_types":{"type":"List[str]","constraint":"event types","description":"Events to unsubscribe"},"return_value":{"type":"Dict[str, Any]","constraint":"unsubscription response","description":"Unsubscription result"},"performance":{"io_operations":"Network operations"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Updates subscription state"],"dependencies":["asyncio"],"test_functions":[],"test_count":0}
{"function_name":"MCPMessage.__post_init__","module":"src.compareblocks.mcp.protocol","class":"MCPMessage","description":"Initialize MCP message with auto-generated ID if not provided","parameters":["self"],"return_type":"None","test_file":"tests/unit/test_mcp_protocol.py","test_description":"Tests MCP message initialization with default ID generation","field_attributes":{"self.id":{"type":"str","constraint":"non-empty string","description":"Unique message identifier"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["uuid","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.114494800567627,"execution_count":1,"average_duration":1.114494800567627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPMessage.from_dict","module":"src.compareblocks.mcp.protocol","class":"MCPMessage","description":"Create MCP message from dictionary data","parameters":["cls","data: Dict[str, Any]"],"return_type":"MCPMessage","test_file":"tests/unit/test_mcp_protocol.py","test_description":"Tests creation of MCP messages from dictionary data","field_attributes":{"data":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Message data"},"return_value":{"type":"MCPMessage","constraint":"valid message","description":"MCP message instance"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["dataclasses"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.114494800567627,"execution_count":1,"average_duration":1.114494800567627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPMessage.from_json","module":"src.compareblocks.mcp.protocol","class":"MCPMessage","description":"Create MCP message from JSON string","parameters":["cls","json_str: str"],"return_type":"MCPMessage","test_file":"tests/unit/test_mcp_protocol.py","test_description":"Tests creation of MCP messages from JSON strings","field_attributes":{"json_str":{"type":"str","constraint":"valid JSON","description":"JSON string"},"return_value":{"type":"MCPMessage","constraint":"valid message","description":"MCP message instance"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.114494800567627,"execution_count":1,"average_duration":1.114494800567627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPMessage.to_dict","module":"src.compareblocks.mcp.protocol","class":"MCPMessage","description":"Convert MCP message to dictionary format excluding None values","parameters":["self"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_mcp_protocol.py","test_description":"Tests conversion of MCP messages to dictionary format","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Message as dictionary"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["dataclasses","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.114494800567627,"execution_count":1,"average_duration":1.114494800567627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPMessage.to_json","module":"src.compareblocks.mcp.protocol","class":"MCPMessage","description":"Convert MCP message to JSON string format","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_mcp_protocol.py","test_description":"Tests JSON serialization of MCP messages","field_attributes":{"return_value":{"type":"str","constraint":"valid JSON string","description":"JSON representation"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.114494800567627,"execution_count":1,"average_duration":1.114494800567627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPProtocol.__init__","module":"src.compareblocks.mcp.protocol","class":"MCPProtocol","description":"Initialize MCP protocol handler with version and capabilities","parameters":["self"],"return_type":"None","test_file":"tests/unit/test_mcp_protocol.py","test_description":"Tests initialization of MCP protocol with capabilities","field_attributes":{"self.version":{"type":"str","constraint":"version string","description":"Protocol version"},"self.capabilities":{"type":"Dict[str, bool]","constraint":"valid capabilities","description":"Protocol capabilities"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.114494800567627,"execution_count":1,"average_duration":1.114494800567627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPProtocol.create_error_response","module":"src.compareblocks.mcp.protocol","class":"MCPProtocol","description":"Create an MCP error response message","parameters":["self","request_id: str","error_code: MCPErrorCode","message: str","data: Optional[Dict[str, Any]] = None"],"return_type":"MCPMessage","test_file":"tests/unit/test_mcp_protocol.py","test_description":"Tests creation of MCP error response messages","field_attributes":{"request_id":{"type":"str","constraint":"valid ID","description":"Request identifier"},"error_code":{"type":"MCPErrorCode","constraint":"valid error code","description":"Error code"},"message":{"type":"str","constraint":"non-empty string","description":"Error message"},"data":{"type":"Optional[Dict[str, Any]]","constraint":"valid data","description":"Error data","default":"None"},"return_value":{"type":"MCPMessage","constraint":"valid error","description":"Error message"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["dataclasses"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.114494800567627,"execution_count":1,"average_duration":1.114494800567627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPProtocol.create_notification","module":"src.compareblocks.mcp.protocol","class":"MCPProtocol","description":"Create an MCP notification message","parameters":["self","method: str","params: Optional[Dict[str, Any]] = None"],"return_type":"MCPMessage","test_file":"tests/unit/test_mcp_protocol.py","test_description":"Tests creation of MCP notification messages","field_attributes":{"method":{"type":"str","constraint":"valid method","description":"Notification method"},"params":{"type":"Optional[Dict[str, Any]]","constraint":"valid parameters","description":"Notification parameters","default":"None"},"return_value":{"type":"MCPMessage","constraint":"valid notification","description":"Notification message"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["uuid"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.114494800567627,"execution_count":1,"average_duration":1.114494800567627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPProtocol.create_processing_complete","module":"src.compareblocks.mcp.protocol","class":"MCPProtocol","description":"Create processing complete notification message","parameters":["self","result_data: Dict[str, Any]"],"return_type":"MCPMessage","test_file":"tests/unit/test_mcp_protocol.py","test_description":"Tests creation of processing complete notifications","field_attributes":{"result_data":{"type":"Dict[str, Any]","constraint":"valid results","description":"Processing results"},"return_value":{"type":"MCPMessage","constraint":"valid notification","description":"Completion notification"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["datetime"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.114494800567627,"execution_count":1,"average_duration":1.114494800567627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPProtocol.create_request","module":"src.compareblocks.mcp.protocol","class":"MCPProtocol","description":"Create an MCP request message with method and parameters","parameters":["self","method: str","params: Optional[Dict[str, Any]] = None"],"return_type":"MCPMessage","test_file":"tests/unit/test_mcp_protocol.py","test_description":"Tests creation of MCP request messages","field_attributes":{"method":{"type":"str","constraint":"valid method name","description":"MCP method"},"params":{"type":"Optional[Dict[str, Any]]","constraint":"valid parameters","description":"Method parameters","default":"None"},"return_value":{"type":"MCPMessage","constraint":"valid request","description":"Request message"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["uuid"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.114494800567627,"execution_count":1,"average_duration":1.114494800567627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPProtocol.create_response","module":"src.compareblocks.mcp.protocol","class":"MCPProtocol","description":"Create an MCP response message for a request","parameters":["self","request_id: str","result: Any"],"return_type":"MCPMessage","test_file":"tests/unit/test_mcp_protocol.py","test_description":"Tests creation of MCP response messages","field_attributes":{"request_id":{"type":"str","constraint":"valid ID","description":"Request identifier"},"result":{"type":"Any","constraint":"valid result","description":"Response result"},"return_value":{"type":"MCPMessage","constraint":"valid response","description":"Response message"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.114494800567627,"execution_count":1,"average_duration":1.114494800567627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPProtocol.create_status_update","module":"src.compareblocks.mcp.protocol","class":"MCPProtocol","description":"Create status update notification message","parameters":["self","status_data: Dict[str, Any]"],"return_type":"MCPMessage","test_file":"tests/unit/test_mcp_protocol.py","test_description":"Tests creation of status update notifications","field_attributes":{"status_data":{"type":"Dict[str, Any]","constraint":"valid status","description":"Status information"},"return_value":{"type":"MCPMessage","constraint":"valid notification","description":"Status notification"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["datetime"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.114494800567627,"execution_count":1,"average_duration":1.114494800567627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPProtocol.get_subscribers","module":"src.compareblocks.mcp.protocol","class":"MCPProtocol","description":"Get list of subscribers for an event type","parameters":["self","event_type: str"],"return_type":"List[str]","test_file":"tests/unit/test_mcp_protocol.py","test_description":"Tests retrieval of event subscribers","field_attributes":{"event_type":{"type":"str","constraint":"valid event","description":"Event type"},"return_value":{"type":"List[str]","constraint":"valid list","description":"Subscriber list"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.114494800567627,"execution_count":1,"average_duration":1.114494800567627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPProtocol.handle_initialize","module":"src.compareblocks.mcp.protocol","class":"MCPProtocol","description":"Handle MCP initialize request with server capabilities","parameters":["self","params: Dict[str, Any]"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_mcp_protocol.py","test_description":"Tests handling of MCP initialization requests","field_attributes":{"params":{"type":"Dict[str, Any]","constraint":"valid parameters","description":"Initialize parameters"},"return_value":{"type":"Dict[str, Any]","constraint":"valid response","description":"Initialize response"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.114494800567627,"execution_count":1,"average_duration":1.114494800567627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPProtocol.subscribe_client","module":"src.compareblocks.mcp.protocol","class":"MCPProtocol","description":"Subscribe client to event notifications","parameters":["self","client_id: str","event_types: List[str]"],"return_type":"bool","test_file":"tests/unit/test_mcp_protocol.py","test_description":"Tests client subscription to event notifications","field_attributes":{"client_id":{"type":"str","constraint":"valid ID","description":"Client identifier"},"event_types":{"type":"List[str]","constraint":"valid events","description":"Event types to subscribe"},"return_value":{"type":"bool","constraint":"success status","description":"Subscription success"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Updates subscription state"],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.114494800567627,"execution_count":1,"average_duration":1.114494800567627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPProtocol.unsubscribe_client","module":"src.compareblocks.mcp.protocol","class":"MCPProtocol","description":"Unsubscribe client from event notifications","parameters":["self","client_id: str","event_types: List[str]"],"return_type":"bool","test_file":"tests/unit/test_mcp_protocol.py","test_description":"Tests client unsubscription from event notifications","field_attributes":{"client_id":{"type":"str","constraint":"valid ID","description":"Client identifier"},"event_types":{"type":"List[str]","constraint":"valid events","description":"Event types to unsubscribe"},"return_value":{"type":"bool","constraint":"success status","description":"Unsubscription success"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Updates subscription state"],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.114494800567627,"execution_count":1,"average_duration":1.114494800567627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPProtocol.validate_message","module":"src.compareblocks.mcp.protocol","class":"MCPProtocol","description":"Validate MCP message structure and method","parameters":["self","message: MCPMessage"],"return_type":"Optional[MCPError]","test_file":"tests/unit/test_mcp_protocol.py","test_description":"Tests validation of MCP message structure and methods","field_attributes":{"message":{"type":"MCPMessage","constraint":"valid message","description":"Message to validate"},"return_value":{"type":"Optional[MCPError]","constraint":"error or None","description":"Validation error if any"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.114494800567627,"execution_count":1,"average_duration":1.114494800567627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPServer.__init__","module":"src.compareblocks.mcp.server","class":"MCPServer","description":"Initialize MCP server with host, port and handlers","parameters":["self","host: str = 'localhost'","port: int = 8765"],"return_type":"None","test_file":"tests/integration/test_mcp_integration.py","test_description":"Tests initialization of MCP server","field_attributes":{"host":{"type":"str","constraint":"valid hostname","description":"Server host","default":"localhost"},"port":{"type":"int","constraint":"valid port","description":"Server port","default":"8765"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["websockets","asyncio","logging"],"test_functions":[],"test_count":0}
{"function_name":"MCPServer.broadcast_notification","module":"src.compareblocks.mcp.server","class":"MCPServer","description":"Broadcast notification to subscribed clients","parameters":["self","event_type: str","data: Dict[str, Any]"],"return_type":"None","test_file":"tests/integration/test_mcp_integration.py","test_description":"Tests broadcasting of notifications to clients","field_attributes":{"event_type":{"type":"str","constraint":"valid event","description":"Event type"},"data":{"type":"Dict[str, Any]","constraint":"event data","description":"Notification data"},"performance":{"io_operations":"Network operations"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Sends messages to clients"],"dependencies":["websockets","datetime"],"test_functions":[],"test_count":0}
{"function_name":"MCPServer.get_client_info","module":"src.compareblocks.mcp.server","class":"MCPServer","description":"Get information about connected clients","parameters":["self"],"return_type":"List[Dict[str, Any]]","test_file":"tests/integration/test_mcp_integration.py","test_description":"Tests retrieval of client information","field_attributes":{"return_value":{"type":"List[Dict[str, Any]]","constraint":"client info","description":"Connected client information"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["datetime"],"test_functions":[],"test_count":0}
{"function_name":"MCPServer.get_server_info","module":"src.compareblocks.mcp.server","class":"MCPServer","description":"Get server information and status","parameters":["self"],"return_type":"Dict[str, Any]","test_file":"tests/integration/test_mcp_integration.py","test_description":"Tests retrieval of server information","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"server info","description":"Server status and info"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"MCPServer.start","module":"src.compareblocks.mcp.server","class":"MCPServer","description":"Start the MCP WebSocket server","parameters":["self"],"return_type":"None","test_file":"tests/integration/test_mcp_integration.py","test_description":"Tests starting of MCP server","field_attributes":{"performance":{"io_operations":"Network socket operations"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Starts WebSocket server","Updates server state"],"dependencies":["websockets","asyncio"],"test_functions":[],"test_count":0}
{"function_name":"MCPServer.stop","module":"src.compareblocks.mcp.server","class":"MCPServer","description":"Stop the MCP WebSocket server","parameters":["self"],"return_type":"None","test_file":"tests/integration/test_mcp_integration.py","test_description":"Tests stopping of MCP server","field_attributes":{"performance":{"io_operations":"Network socket operations"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Stops WebSocket server","Closes client connections"],"dependencies":["websockets","asyncio"],"test_functions":[],"test_count":0}
{"function_name":"MCPValidator.__init__","module":"src.compareblocks.mcp.validation","class":"MCPValidator","description":"Initialize MCP validator with message schemas","parameters":["self"],"return_type":"None","test_file":"tests/unit/test_mcp_validation.py","test_description":"Tests initialization of MCP validator with schemas","field_attributes":{"self.mcp_schemas":{"type":"Dict[str, Dict[str, Any]]","constraint":"valid schemas","description":"MCP message schemas"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["jsonschema"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2378342151641846,"execution_count":1,"average_duration":1.2378342151641846,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPValidator.get_schema","module":"src.compareblocks.mcp.validation","class":"MCPValidator","description":"Get MCP schema by name","parameters":["self","schema_name: str"],"return_type":"Optional[Dict[str, Any]]","test_file":"tests/unit/test_mcp_validation.py","test_description":"Tests retrieval of MCP schemas by name","field_attributes":{"schema_name":{"type":"str","constraint":"valid name","description":"Schema name"},"return_value":{"type":"Optional[Dict[str, Any]]","constraint":"schema or None","description":"Schema definition"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2378342151641846,"execution_count":1,"average_duration":1.2378342151641846,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPValidator.list_schemas","module":"src.compareblocks.mcp.validation","class":"MCPValidator","description":"List available schema names","parameters":["self"],"return_type":"List[str]","test_file":"tests/unit/test_mcp_validation.py","test_description":"Tests listing of available MCP schema names","field_attributes":{"return_value":{"type":"List[str]","constraint":"schema names","description":"Available schema names"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2378342151641846,"execution_count":1,"average_duration":1.2378342151641846,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPValidator.sanitize_extraction_data","module":"src.compareblocks.mcp.validation","class":"MCPValidator","description":"Sanitize extraction data for security","parameters":["self","data: Dict[str, Any]"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_mcp_validation.py","test_description":"Tests sanitization of extraction data for security","field_attributes":{"data":{"type":"Dict[str, Any]","constraint":"input data","description":"Raw extraction data"},"return_value":{"type":"Dict[str, Any]","constraint":"sanitized data","description":"Cleaned extraction data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2378342151641846,"execution_count":1,"average_duration":1.2378342151641846,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPValidator.validate_consensus_output","module":"src.compareblocks.mcp.validation","class":"MCPValidator","description":"Validate consensus output data.","parameters":["self","data: Any"],"return_type":"Any","test_file":"tests/unit/test_validation.py","test_description":"Tests MCPValidator.MCPValidator.validate_consensus_output functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9811110496520996,"execution_count":1,"average_duration":0.9811110496520996,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPValidator.validate_extraction_submission","module":"src.compareblocks.mcp.validation","class":"MCPValidator","description":"Validate extraction submission data against schema","parameters":["self","data: Dict[str, Any]"],"return_type":"Tuple[bool, Optional[str]]","test_file":"tests/unit/test_mcp_validation.py","test_description":"Tests validation of extraction submission data","field_attributes":{"data":{"type":"Dict[str, Any]","constraint":"submission data","description":"Extraction data"},"return_value":{"type":"Tuple[bool, Optional[str]]","constraint":"validation result","description":"Success and error message"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["jsonschema","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2378342151641846,"execution_count":1,"average_duration":1.2378342151641846,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPValidator.validate_pdf_path","module":"src.compareblocks.mcp.validation","class":"MCPValidator","description":"Validate PDF file path for security and existence","parameters":["self","pdf_path: str"],"return_type":"Tuple[bool, Optional[str]]","test_file":"tests/unit/test_mcp_validation.py","test_description":"Tests validation of PDF file paths with security checks","field_attributes":{"pdf_path":{"type":"str","constraint":"file path","description":"PDF file path"},"return_value":{"type":"Tuple[bool, Optional[str]]","constraint":"validation result","description":"Success and error message"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File system access"],"dependencies":["pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2378342151641846,"execution_count":1,"average_duration":1.2378342151641846,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPValidator.validate_results_request","module":"src.compareblocks.mcp.validation","class":"MCPValidator","description":"Validate results request data against schema","parameters":["self","data: Dict[str, Any]"],"return_type":"Tuple[bool, Optional[str]]","test_file":"tests/unit/test_mcp_validation.py","test_description":"Tests validation of results request data","field_attributes":{"data":{"type":"Dict[str, Any]","constraint":"request data","description":"Results request"},"return_value":{"type":"Tuple[bool, Optional[str]]","constraint":"validation result","description":"Success and error message"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["jsonschema"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2378342151641846,"execution_count":1,"average_duration":1.2378342151641846,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPValidator.validate_status_request","module":"src.compareblocks.mcp.validation","class":"MCPValidator","description":"Validate status request data against schema","parameters":["self","data: Dict[str, Any]"],"return_type":"Tuple[bool, Optional[str]]","test_file":"tests/unit/test_mcp_validation.py","test_description":"Tests validation of status request data","field_attributes":{"data":{"type":"Dict[str, Any]","constraint":"request data","description":"Status request"},"return_value":{"type":"Tuple[bool, Optional[str]]","constraint":"validation result","description":"Success and error message"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["jsonschema"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2378342151641846,"execution_count":1,"average_duration":1.2378342151641846,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MCPValidator.validate_subscription_request","module":"src.compareblocks.mcp.validation","class":"MCPValidator","description":"Validate subscription request data against schema","parameters":["self","data: Dict[str, Any]"],"return_type":"Tuple[bool, Optional[str]]","test_file":"tests/unit/test_mcp_validation.py","test_description":"Tests validation of subscription request data","field_attributes":{"data":{"type":"Dict[str, Any]","constraint":"request data","description":"Subscription request"},"return_value":{"type":"Tuple[bool, Optional[str]]","constraint":"validation result","description":"Success and error message"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["jsonschema"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2378342151641846,"execution_count":1,"average_duration":1.2378342151641846,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MarkdownParser.get_format_type","module":"compareblocks.association.parsers","class":"MarkdownParser","description":"Function description","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_parsers.py","test_description":"Tests MarkdownParser.get_format_type functionality","field_attributes":{"return_value":{"type":"str","constraint":"non-empty string","description":"Retrieved str value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\association\\parsers.py","line_number":349,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846378326416016,"execution_count":1,"average_duration":0.8846378326416016,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MarkdownParser.parse","module":"compareblocks.association.parsers","class":"MarkdownParser","description":"Parse Markdown content and extract structured text.","parameters":["self","content","file_path"],"return_type":"ParsedContent","test_file":"tests/unit/test_parsers.py","test_description":"Tests MarkdownParser.parse functionality","field_attributes":{"content":{"type":"Any","constraint":"valid input","description":"Parameter content"},"file_path":{"type":"Any","constraint":"valid input","description":"Parameter file_path"},"return_value":{"type":"ParsedContent","constraint":"valid return value","description":"ParsedContent result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\association\\parsers.py","line_number":282,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846378326416016,"execution_count":1,"average_duration":0.8846378326416016,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"MergeResult.to_dict","module":"src.compareblocks.consensus.merge","class":"MergeResult","description":"Convert to dictionary format.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_consensus_merge.py","test_description":"Tests to_dict functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0672316551208496,"execution_count":1,"average_duration":1.0672316551208496,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"NDJSONLoader.__init__","module":"src.compareblocks.io.loader","class":"NDJSONLoader","description":"Initialize NDJSON loader with input schema validator","parameters":["self"],"return_type":"None","test_file":"tests/unit/test_io_validation.py","test_description":"Tests initialization of NDJSON loader with schema validation setup","field_attributes":{"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"NDJSONLoader._format_validation_error","module":"src.compareblocks.io.loader","class":"NDJSONLoader","description":"Format a jsonschema ValidationError into a clear error message","parameters":["self","error: ValidationError"],"return_type":"str","test_file":"tests/unit/test_io_validation.py","test_description":"Tests formatting of validation errors into user-friendly messages","field_attributes":{"return_value":{"type":"str","constraint":"valid string","description":"str result"},"error":{"type":"ValidationError","constraint":"valid input","description":"Parameter error"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"NDJSONLoader._normalize_record","module":"src.compareblocks.io.loader","class":"NDJSONLoader","description":"Normalize record fields for consistent processing","parameters":["self","record: Dict[str, Any]"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_io_validation.py","test_description":"Tests normalization of NDJSON records with default values and type conversion","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Dict[str, Any] result"},"record":{"type":"Dict[str, Any]","constraint":"non-empty string","description":"Parameter record"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"NDJSONLoader._validate_mapping_requirements","module":"src.compareblocks.io.loader","class":"NDJSONLoader","description":"Validate that record has either block_id or bbox for mapping flexibility","parameters":["self","record: Dict[str, Any]","line_number: Optional[int] = None"],"return_type":"None","test_file":"tests/unit/test_io_validation.py","test_description":"Tests validation of mapping requirements ensuring records have block_id or bbox","field_attributes":{"record":{"type":"Dict[str, Any]","constraint":"non-empty string","description":"Parameter record"},"line_number":{"type":"Optional[int]","constraint":">= 0","description":"Parameter line_number","default":"None"},"performance":{"time_complexity":"O(1)","memory_usage":"Low - Validation operations","io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"NDJSONLoader.load_file","module":"src.compareblocks.io.loader","class":"NDJSONLoader","description":"Load and validate an entire NDJSON file","parameters":["self","file_path"],"return_type":"List[Dict[str, Any]]","test_file":"tests/unit/test_io_validation.py","test_description":"Tests loading and validation of complete NDJSON files with various valid and invalid records","field_attributes":{"return_value":{"type":"List[Dict[str, Any]]","constraint":"valid list","description":"List[Dict[str, Any]] result"},"file_path":{"type":"Any","constraint":"valid input","description":"Parameter file_path"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"NDJSONLoader.load_stream","module":"src.compareblocks.io.loader","class":"NDJSONLoader","description":"Stream and validate NDJSON records one at a time","parameters":["self","file_path: Path"],"return_type":"Iterator[Dict[str, Any]]","test_file":"tests/unit/test_io_validation.py","test_description":"Tests streaming validation of NDJSON records for memory-efficient processing","field_attributes":{"file_path":{"type":"Path","constraint":"valid file path","description":"Parameter file_path"},"return_value":{"type":"Iterator[Dict[str, Any]]","constraint":"valid return value","description":"Iterator[Dict[str, Any]] result"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"NDJSONLoader.validate_record","module":"src.compareblocks.io.loader","class":"NDJSONLoader","description":"Validate a single record against the input schema","parameters":["self","record: Dict[str, Any]","line_number: Optional[int] = None"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_io_validation.py","test_description":"Tests validation of individual NDJSON records against input schema","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Validation result"},"record":{"type":"Dict[str, Any]","constraint":"non-empty string","description":"Parameter record"},"line_number":{"type":"Optional[int]","constraint":">= 0","description":"Parameter line_number","default":"None"},"performance":{"time_complexity":"O(1)","memory_usage":"Low - Validation operations","io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"NDJSONPreviewWidget.__init__","module":"compareblocks.gui.import_dialog","class":"NDJSONPreviewWidget","description":"Function description","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_import_dialog.py","test_description":"Tests NDJSONPreviewWidget.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\import_dialog.py","line_number":80,"test_functions":[],"test_count":0}
{"function_name":"NDJSONPreviewWidget.set_records","module":"compareblocks.gui.import_dialog","class":"NDJSONPreviewWidget","description":"Set the records to preview.","parameters":["self","records"],"return_type":"Any","test_file":"tests/unit/test_import_dialog.py","test_description":"Tests NDJSONPreviewWidget.set_records functionality","field_attributes":{"records":{"type":"Any","constraint":"valid input","description":"Parameter records"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\import_dialog.py","line_number":107,"test_functions":[],"test_count":0}
{"function_name":"NDJSONPreviewWidget.setup_ui","module":"compareblocks.gui.import_dialog","class":"NDJSONPreviewWidget","description":"Setup the preview UI.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_import_dialog.py","test_description":"Tests NDJSONPreviewWidget.setup_ui functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\import_dialog.py","line_number":85,"test_functions":[],"test_count":0}
{"function_name":"NDJSONWriter.__init__","module":"src.compareblocks.io.writer","class":"NDJSONWriter","description":"Initialize NDJSON writer with optional output validation","parameters":["self","validate_output: bool = True"],"return_type":"None","test_file":"tests/unit/test_io_validation.py","test_description":"Tests initialization of NDJSON writer with validation configuration","field_attributes":{"validate_output":{"type":"bool","constraint":"boolean value","description":"Parameter validate_output","default":"True"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"NDJSONWriter._format_validation_error","module":"src.compareblocks.io.writer","class":"NDJSONWriter","description":"Format a jsonschema ValidationError into a clear error message","parameters":["self","error: ValidationError"],"return_type":"str","test_file":"tests/unit/test_io_validation.py","test_description":"Tests formatting of validation errors for consensus records","field_attributes":{"return_value":{"type":"str","constraint":"valid string","description":"str result"},"error":{"type":"ValidationError","constraint":"valid input","description":"Parameter error"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"NDJSONWriter._normalize_consensus_record","module":"src.compareblocks.io.writer","class":"NDJSONWriter","description":"Normalize consensus record fields for consistent output","parameters":["self","record: Dict[str, Any]"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_io_validation.py","test_description":"Tests normalization of consensus records for consistent output format","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Dict[str, Any] result"},"record":{"type":"Dict[str, Any]","constraint":"non-empty string","description":"Parameter record"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"NDJSONWriter.validate_consensus_record","module":"src.compareblocks.io.writer","class":"NDJSONWriter","description":"Validate a consensus record against the output schema","parameters":["self","record: Dict[str, Any]"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_io_validation.py","test_description":"Tests validation of consensus records against output schema","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Validation result"},"record":{"type":"Dict[str, Any]","constraint":"non-empty string","description":"Parameter record"},"performance":{"time_complexity":"O(1)","memory_usage":"Low - Validation operations","io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"NDJSONWriter.write_consensus_records","module":"compareblocks.io.writer","class":"NDJSONWriter","description":"Write consensus records to NDJSON file.","parameters":["self","records","file_path"],"return_type":"None","test_file":"tests/unit/test_writer.py","test_description":"Tests NDJSONWriter.write_consensus_records functionality","field_attributes":{"records":{"type":"Any","constraint":"valid input","description":"Parameter records"},"file_path":{"type":"Any","constraint":"valid input","description":"Parameter file_path"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","Creates or modifies files"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\io\\writer.py","line_number":92,"test_functions":[],"test_count":0}
{"function_name":"NDJSONWriter.write_file","module":"src.compareblocks.io.writer","class":"NDJSONWriter","description":"Write consensus records to an NDJSON file","parameters":["self","records: List[Dict[str, Any]]","file_path","overwrite: bool = False"],"return_type":"None","test_file":"tests/unit/test_io_validation.py","test_description":"Tests writing of consensus records to NDJSON files with overwrite protection","field_attributes":{"records":{"type":"List[Dict[str, Any]]","constraint":"non-empty string","description":"Parameter records"},"file_path":{"type":"Any","constraint":"valid input","description":"Parameter file_path"},"overwrite":{"type":"bool","constraint":"boolean value","description":"Parameter overwrite","default":"False"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"NDJSONWriter.write_stream","module":"src.compareblocks.io.writer","class":"NDJSONWriter","description":"Write consensus records to a stream","parameters":["self","records: List[Dict[str, Any]]","stream: TextIO"],"return_type":"None","test_file":"tests/unit/test_io_validation.py","test_description":"Tests streaming write of consensus records to output streams","field_attributes":{"records":{"type":"List[Dict[str, Any]]","constraint":"non-empty string","description":"Parameter records"},"stream":{"type":"TextIO","constraint":"valid input","description":"Parameter stream"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"OCROptimizationEngine.__init__","module":"visual_ocr_testing_tool","class":"OCROptimizationEngine","description":"Core OCR optimization and testing engine with multi-input feed support","parameters":["self"],"return_type":"None","test_file":"tests/unit/test_visual_ocr_tool.py","test_description":"Tests initialization of OCR optimization engine","field_attributes":{"return_value":{"type":"None","constraint":"no return value","description":"Initializes OCR engine"}},"side_effects":["Initializes object state","Configuration state changes"],"dependencies":["cv2","numpy","tesseract"],"test_functions":[],"test_count":0}
{"function_name":"OCROptimizationEngine.add_custom_feed","module":"visual_ocr_testing_tool","class":"OCROptimizationEngine","description":"Add a custom input feed.","parameters":["self","config: Any"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests OCROptimizationEngine.OCROptimizationEngine.add_custom_feed functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"OCROptimizationEngine.extract_block_region","module":"visual_ocr_testing_tool","class":"OCROptimizationEngine","description":"Extract specific block region for testing","parameters":["self","pdf_path","page_num","block_index=0"],"return_type":"Tuple[numpy.ndarray, str, str]","test_file":"tests/unit/test_visual_ocr_tool.py","test_description":"Tests extraction of PDF block regions for OCR testing","field_attributes":{"pdf_path":{"type":"str","constraint":"valid file path","description":"Path to PDF file"},"page_num":{"type":"int","constraint":">= 0","description":"Page number"},"block_index":{"type":"int","constraint":">= 0","description":"Block index","default":"0"},"return_value":{"type":"Tuple[numpy.ndarray, str, str]","constraint":"valid tuple","description":"Tuple of (region, expected_text, block_id)"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing","File I/O operations"],"dependencies":["fitz","PyMuPDF","cv2","PIL","json"],"test_functions":[],"test_count":0}
{"function_name":"OCROptimizationEngine.get_feed_status","module":"visual_ocr_testing_tool","class":"OCROptimizationEngine","description":"Get status of all input feeds.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests OCROptimizationEngine.OCROptimizationEngine.get_feed_status functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"OCROptimizationEngine.load_configuration_from_feed","module":"visual_ocr_testing_tool","class":"OCROptimizationEngine","description":"Load configuration from a specific feed.","parameters":["self","feed_name: Any"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests OCROptimizationEngine.OCROptimizationEngine.load_configuration_from_feed functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"OCROptimizationEngine.optimize_ocr_parameters","module":"visual_ocr_testing_tool","class":"OCROptimizationEngine","description":"Run full OCR parameter optimization","parameters":["self","pdf_path","page_num","block_index"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_visual_ocr_tool.py","test_description":"Tests comprehensive OCR parameter optimization workflow","field_attributes":{"pdf_path":{"type":"str","constraint":"valid file path","description":"Path to PDF file"},"page_num":{"type":"int","constraint":">= 0","description":"Page number"},"block_index":{"type":"int","constraint":">= 0","description":"Block index"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Optimization results with best configurations"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing","OCR processing operations"],"dependencies":["fitz","PyMuPDF","cv2","tesseract","rapidfuzz"],"test_functions":[],"test_count":0}
{"function_name":"OCROptimizationEngine.start_feeds","module":"visual_ocr_testing_tool","class":"OCROptimizationEngine","description":"Start all input feeds.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests OCROptimizationEngine.OCROptimizationEngine.start_feeds functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"OCROptimizationEngine.stop_feeds","module":"visual_ocr_testing_tool","class":"OCROptimizationEngine","description":"Stop all input feeds.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests OCROptimizationEngine.OCROptimizationEngine.stop_feeds functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"OCROptimizationEngine.test_improved_engine","module":"visual_ocr_testing_tool","class":"OCROptimizationEngine","description":"Test the improved GBG-guided Tesseract engine","parameters":["self","pdf_path","page_num=15"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_visual_ocr_tool.py","test_description":"Tests improved OCR engine performance evaluation","field_attributes":{"pdf_path":{"type":"str","constraint":"valid file path","description":"Path to PDF file"},"page_num":{"type":"int","constraint":">= 0","description":"Page number to test","default":"15"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Engine test results with performance metrics"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing","OCR processing operations"],"dependencies":["fitz","PyMuPDF","json"],"test_functions":[],"test_count":0}
{"function_name":"OCROptimizationEngine.test_ocr_configuration","module":"visual_ocr_testing_tool","class":"OCROptimizationEngine","description":"Test specific OCR configuration","parameters":["self","region","expected_text","preprocessing_func","tesseract_config"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_visual_ocr_tool.py","test_description":"Tests OCR configuration performance evaluation","field_attributes":{"region":{"type":"numpy.ndarray","constraint":"valid input","description":"Image region to process"},"expected_text":{"type":"str","constraint":"non-empty string","description":"Expected OCR result"},"preprocessing_func":{"type":"Callable","constraint":"valid input","description":"Preprocessing function"},"tesseract_config":{"type":"Dict[str, str]","constraint":"valid dictionary","description":"Tesseract configuration"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"OCR test results with metrics"}},"side_effects":["Memory allocation for image processing","OCR processing operations"],"dependencies":["tesseract","cv2","numpy","rapidfuzz"],"test_functions":[],"test_count":0}
{"function_name":"OptimizationProposalWidget.__init__","module":"compareblocks.gui.config_forms","class":"OptimizationProposalWidget","description":"Function description","parameters":["self","config_manager"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests OptimizationProposalWidget.__init__ functionality","field_attributes":{"config_manager":{"type":"Any","constraint":"valid input","description":"Parameter config_manager"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":442,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"OptimizationProposalWidget.approve_proposal","module":"compareblocks.gui.config_forms","class":"OptimizationProposalWidget","description":"Approve an optimization proposal.","parameters":["self","proposal_id"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests OptimizationProposalWidget.approve_proposal functionality","field_attributes":{"proposal_id":{"type":"Any","constraint":"valid input","description":"Parameter proposal_id"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":525,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"OptimizationProposalWidget.load_proposals","module":"compareblocks.gui.config_forms","class":"OptimizationProposalWidget","description":"Load optimization proposals from configuration.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests OptimizationProposalWidget.load_proposals functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","May raise FileNotFoundError"],"dependencies":["pathlib","PySide6"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":471,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"OptimizationProposalWidget.reject_proposal","module":"compareblocks.gui.config_forms","class":"OptimizationProposalWidget","description":"Reject an optimization proposal.","parameters":["self","proposal_id"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests OptimizationProposalWidget.reject_proposal functionality","field_attributes":{"proposal_id":{"type":"Any","constraint":"valid input","description":"Parameter proposal_id"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":535,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"OptimizationProposalWidget.setup_ui","module":"compareblocks.gui.config_forms","class":"OptimizationProposalWidget","description":"Setup the optimization proposal UI.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests OptimizationProposalWidget.setup_ui functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":447,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"OptimizationProposalWidget.show_proposal_details","module":"compareblocks.gui.config_forms","class":"OptimizationProposalWidget","description":"Show detailed information about a proposal.","parameters":["self","proposal"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests OptimizationProposalWidget.show_proposal_details functionality","field_attributes":{"proposal":{"type":"Any","constraint":"valid input","description":"Parameter proposal"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":546,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"OrientationDetector.__init__","module":"src.compareblocks.gbg.orientation","class":"OrientationDetector","description":"Initialize orientation detector with OpenCV dependency check","parameters":["self"],"return_type":"None","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests initialization of orientation detector with OpenCV availability check","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0}
{"function_name":"OrientationDetector._rotate_image","module":"src.compareblocks.gbg.orientation","class":"OrientationDetector","description":"Rotate image by specified angle using OpenCV","parameters":["self","image: np.ndarray","angle: float"],"return_type":"np.ndarray","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests image rotation functionality with various angles","field_attributes":{"image":{"type":"np.ndarray","constraint":"valid input","description":"Parameter image"},"angle":{"type":"float","constraint":">= 0.0","description":"Parameter angle"},"return_value":{"type":"np.ndarray","constraint":"valid return value","description":"np.ndarray result"},"performance":{"memory_usage":"Medium - Image data processing"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","cv2","pathlib","PIL"],"test_functions":[],"test_count":0}
{"function_name":"OrientationDetector.detect_block_skew","module":"src.compareblocks.gbg.orientation","class":"OrientationDetector","description":"Detect individual text block skew using Hough line detection","parameters":["self","image: np.ndarray","bbox_region: Optional[np.ndarray] = None"],"return_type":"OrientationHints","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests block-level skew detection using Hough line analysis","field_attributes":{"image":{"type":"np.ndarray","constraint":"valid input","description":"Parameter image"},"bbox_region":{"type":"Optional[np.ndarray]","constraint":"valid input","description":"Parameter bbox_region","default":"None"},"return_value":{"type":"OrientationHints","constraint":"valid return value","description":"OrientationHints result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0}
{"function_name":"OrientationDetector.detect_combined_orientation","module":"src.compareblocks.gbg.orientation","class":"OrientationDetector","description":"Combine page-level and block-level orientation detection","parameters":["self","image: np.ndarray","bbox_region: Optional[np.ndarray] = None"],"return_type":"OrientationHints","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests combined orientation detection merging page and block level analysis","field_attributes":{"image":{"type":"np.ndarray","constraint":"valid input","description":"Parameter image"},"bbox_region":{"type":"Optional[np.ndarray]","constraint":"valid input","description":"Parameter bbox_region","default":"None"},"return_value":{"type":"OrientationHints","constraint":"valid return value","description":"OrientationHints result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0}
{"function_name":"OrientationDetector.detect_page_orientation","module":"src.compareblocks.gbg.orientation","class":"OrientationDetector","description":"Detect page-level orientation using projection profile analysis","parameters":["self","image: np.ndarray"],"return_type":"OrientationHints","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests page orientation detection using projection profiles on various rotated images","field_attributes":{"image":{"type":"np.ndarray","constraint":"valid input","description":"Parameter image"},"return_value":{"type":"OrientationHints","constraint":"valid return value","description":"OrientationHints result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents"],"dependencies":["fitz","PyMuPDF"],"test_functions":[],"test_count":0}
{"function_name":"OrientationHints.__post_init__","module":"src.compareblocks.gbg.types","class":"OrientationHints","description":"Validate orientation hints ensuring confidence is between 0 and 1","parameters":["self"],"return_type":"None","test_file":"tests/unit/test_io_validation.py","test_description":"Tests validation of orientation confidence values","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Raises ValueError if validation fails"],"dependencies":["dataclasses"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PDFMetadataExtractor.__init__","module":"compareblocks.io.pdf_metadata","class":"PDFMetadataExtractor","description":"Initialize the PDF metadata extractor.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_pdf_metadata.py","test_description":"Tests PDFMetadataExtractor.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Extracted any data"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["json","PyMuPDF","pathlib","fitz"],"source_file":"src\\compareblocks\\io\\pdf_metadata.py","line_number":17,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2184178829193115,"execution_count":1,"average_duration":1.2184178829193115,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PDFMetadataExtractor.create_root_pdf_json","module":"compareblocks.io.pdf_metadata","class":"PDFMetadataExtractor","description":"Create comprehensive root PDF JSON with proper metadata.","parameters":["self","pdf_path","associated_files"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_pdf_metadata.py","test_description":"Tests PDFMetadataExtractor.create_root_pdf_json functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"associated_files":{"type":"Any","constraint":"valid input","description":"Parameter associated_files"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Extracted dict[str, any] data"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["json","PyMuPDF","pathlib","fitz"],"source_file":"src\\compareblocks\\io\\pdf_metadata.py","line_number":142,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2184178829193115,"execution_count":1,"average_duration":1.2184178829193115,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PDFMetadataExtractor.extract_pdf_metadata","module":"compareblocks.io.pdf_metadata","class":"PDFMetadataExtractor","description":"Extract comprehensive PDF metadata with proper filename normalization.","parameters":["self","pdf_path"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_pdf_metadata.py","test_description":"Tests PDFMetadataExtractor.extract_pdf_metadata functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Extracted dict[str, any] data"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["json","PyMuPDF","pathlib","fitz"],"source_file":"src\\compareblocks\\io\\pdf_metadata.py","line_number":21,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2184178829193115,"execution_count":1,"average_duration":1.2184178829193115,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PDFMetadataExtractor.get_display_name","module":"compareblocks.io.pdf_metadata","class":"PDFMetadataExtractor","description":"Get a clean display name for the PDF.","parameters":["self","pdf_path"],"return_type":"str","test_file":"tests/unit/test_pdf_metadata.py","test_description":"Tests PDFMetadataExtractor.get_display_name functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"str","constraint":"non-empty string","description":"Extracted str data"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["json","PyMuPDF","pathlib","fitz"],"source_file":"src\\compareblocks\\io\\pdf_metadata.py","line_number":121,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2184178829193115,"execution_count":1,"average_duration":1.2184178829193115,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PDFOverrideForm.__init__","module":"compareblocks.gui.config_forms","class":"PDFOverrideForm","description":"Function description","parameters":["self","config_manager","engine_name","pdf_path"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests PDFOverrideForm.__init__ functionality","field_attributes":{"config_manager":{"type":"Any","constraint":"valid input","description":"Parameter config_manager"},"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":225,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PDFOverrideForm.add_override_parameter","module":"compareblocks.gui.config_forms","class":"PDFOverrideForm","description":"Add a new override parameter.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests PDFOverrideForm.add_override_parameter functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":292,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PDFOverrideForm.add_override_widget","module":"compareblocks.gui.config_forms","class":"PDFOverrideForm","description":"Add widget for override parameter.","parameters":["self","param_name","value"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests PDFOverrideForm.add_override_widget functionality","field_attributes":{"param_name":{"type":"Any","constraint":"valid input","description":"Parameter param_name"},"value":{"type":"Any","constraint":"valid input","description":"Parameter value"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":330,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PDFOverrideForm.get_override_values","module":"compareblocks.gui.config_forms","class":"PDFOverrideForm","description":"Get current override values from widgets.","parameters":["self"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_config_forms.py","test_description":"Tests PDFOverrideForm.get_override_values functionality","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Retrieved dict[str, any] value"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":382,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PDFOverrideForm.load_current_overrides","module":"compareblocks.gui.config_forms","class":"PDFOverrideForm","description":"Load current PDF-specific overrides.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests PDFOverrideForm.load_current_overrides functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","May raise FileNotFoundError"],"dependencies":["PyMuPDF","pathlib","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":276,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PDFOverrideForm.remove_override_widget","module":"compareblocks.gui.config_forms","class":"PDFOverrideForm","description":"Remove override parameter widget.","parameters":["self","param_name"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests PDFOverrideForm.remove_override_widget functionality","field_attributes":{"param_name":{"type":"Any","constraint":"valid input","description":"Parameter param_name"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":375,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PDFOverrideForm.save_overrides","module":"compareblocks.gui.config_forms","class":"PDFOverrideForm","description":"Save PDF-specific overrides.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests PDFOverrideForm.save_overrides functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","Creates or modifies files"],"dependencies":["PyMuPDF","pathlib","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":412,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PDFOverrideForm.setup_ui","module":"compareblocks.gui.config_forms","class":"PDFOverrideForm","description":"Setup the PDF override form UI.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests PDFOverrideForm.setup_ui functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":234,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PDFOverrideForm.update_effective_config_display","module":"compareblocks.gui.config_forms","class":"PDFOverrideForm","description":"Update the effective configuration display.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests PDFOverrideForm.update_effective_config_display functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":429,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PDFPageAnalyzer.analyze_layout_structure","module":"src.compareblocks.gbg.seed","class":"PDFPageAnalyzer","description":"Analyze the overall layout structure of a PDF","parameters":["pdf_path: str"],"return_type":"dict","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests analysis of PDF layout structure including page count and block statistics","field_attributes":{"pdf_path":{"type":"str","constraint":"non-empty string","description":"Parameter pdf_path"},"return_value":{"type":"dict","constraint":"valid return value","description":"dict result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents"],"dependencies":["fitz","PyMuPDF"],"test_functions":[],"test_count":0}
{"function_name":"PDFPageAnalyzer.get_page_info","module":"src.compareblocks.gbg.seed","class":"PDFPageAnalyzer","description":"Get basic information about a PDF page including dimensions and text presence","parameters":["pdf_path: str","page_num: int"],"return_type":"dict","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests extraction of page information from PDF files","field_attributes":{"pdf_path":{"type":"str","constraint":"non-empty string","description":"Parameter pdf_path"},"page_num":{"type":"int","constraint":">= 0","description":"Parameter page_num"},"return_value":{"type":"dict","constraint":"valid return value","description":"Retrieved dict value"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents"],"dependencies":["fitz","PyMuPDF"],"test_functions":[],"test_count":0}
{"function_name":"PDFPageWidget.__init__","module":"compareblocks.gui.pdf_viewer","class":"PDFPageWidget","description":"Function description","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_pdf_viewer.py","test_description":"Tests PDFPageWidget.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\pdf_viewer.py","line_number":38,"test_functions":[],"test_count":0}
{"function_name":"PDFPageWidget.load_pdf","module":"compareblocks.gui.pdf_viewer","class":"PDFPageWidget","description":"Load a PDF document.","parameters":["self","pdf_path"],"return_type":"bool","test_file":"tests/unit/test_pdf_viewer.py","test_description":"Tests PDFPageWidget.load_pdf functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"bool","constraint":"boolean value","description":"Retrieved bool value"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","May raise FileNotFoundError"],"dependencies":["PyMuPDF","pathlib","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\pdf_viewer.py","line_number":59,"test_functions":[],"test_count":0}
{"function_name":"PDFPageWidget.mouseMoveEvent","module":"compareblocks.gui.pdf_viewer","class":"PDFPageWidget","description":"Handle mouse move events for panning.","parameters":["self","event"],"return_type":"Any","test_file":"tests/unit/test_pdf_viewer.py","test_description":"Tests PDFPageWidget.mouseMoveEvent functionality","field_attributes":{"event":{"type":"Any","constraint":"valid input","description":"Parameter event"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\pdf_viewer.py","line_number":183,"test_functions":[],"test_count":0}
{"function_name":"PDFPageWidget.mousePressEvent","module":"compareblocks.gui.pdf_viewer","class":"PDFPageWidget","description":"Handle mouse press events for block selection and panning.","parameters":["self","event"],"return_type":"Any","test_file":"tests/unit/test_pdf_viewer.py","test_description":"Tests PDFPageWidget.mousePressEvent functionality","field_attributes":{"event":{"type":"Any","constraint":"valid input","description":"Parameter event"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\pdf_viewer.py","line_number":168,"test_functions":[],"test_count":0}
{"function_name":"PDFPageWidget.mouseReleaseEvent","module":"compareblocks.gui.pdf_viewer","class":"PDFPageWidget","description":"Handle mouse release events.","parameters":["self","event"],"return_type":"Any","test_file":"tests/unit/test_pdf_viewer.py","test_description":"Tests PDFPageWidget.mouseReleaseEvent functionality","field_attributes":{"event":{"type":"Any","constraint":"valid input","description":"Parameter event"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\pdf_viewer.py","line_number":196,"test_functions":[],"test_count":0}
{"function_name":"PDFPageWidget.select_block","module":"compareblocks.gui.pdf_viewer","class":"PDFPageWidget","description":"Select a specific block for highlighting.","parameters":["self","block_id"],"return_type":"Any","test_file":"tests/unit/test_pdf_viewer.py","test_description":"Tests PDFPageWidget.select_block functionality","field_attributes":{"block_id":{"type":"Any","constraint":"valid input","description":"Parameter block_id"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\pdf_viewer.py","line_number":96,"test_functions":[],"test_count":0}
{"function_name":"PDFPageWidget.set_block_highlights","module":"compareblocks.gui.pdf_viewer","class":"PDFPageWidget","description":"Set the blocks to highlight on the page.","parameters":["self","highlights"],"return_type":"Any","test_file":"tests/unit/test_pdf_viewer.py","test_description":"Tests PDFPageWidget.set_block_highlights functionality","field_attributes":{"highlights":{"type":"Any","constraint":"valid input","description":"Parameter highlights"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\pdf_viewer.py","line_number":90,"test_functions":[],"test_count":0}
{"function_name":"PDFPageWidget.set_page","module":"compareblocks.gui.pdf_viewer","class":"PDFPageWidget","description":"Set the current page to display.","parameters":["self","page_num"],"return_type":"bool","test_file":"tests/unit/test_pdf_viewer.py","test_description":"Tests PDFPageWidget.set_page functionality","field_attributes":{"page_num":{"type":"Any","constraint":"valid input","description":"Parameter page_num"},"return_value":{"type":"bool","constraint":"boolean value","description":"Retrieved bool value"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\pdf_viewer.py","line_number":71,"test_functions":[],"test_count":0}
{"function_name":"PDFPageWidget.set_zoom","module":"compareblocks.gui.pdf_viewer","class":"PDFPageWidget","description":"Set the zoom factor and re-render.","parameters":["self","zoom_factor"],"return_type":"Any","test_file":"tests/unit/test_pdf_viewer.py","test_description":"Tests PDFPageWidget.set_zoom functionality","field_attributes":{"zoom_factor":{"type":"Any","constraint":"valid input","description":"Parameter zoom_factor"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\pdf_viewer.py","line_number":84,"test_functions":[],"test_count":0}
{"function_name":"PDFPageWidget.wheelEvent","module":"compareblocks.gui.pdf_viewer","class":"PDFPageWidget","description":"Handle wheel events for zooming.","parameters":["self","event"],"return_type":"Any","test_file":"tests/unit/test_pdf_viewer.py","test_description":"Tests PDFPageWidget.wheelEvent functionality","field_attributes":{"event":{"type":"Any","constraint":"valid input","description":"Parameter event"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\pdf_viewer.py","line_number":204,"test_functions":[],"test_count":0}
{"function_name":"PDFViewer.__init__","module":"compareblocks.gui.pdf_viewer","class":"PDFViewer","description":"Function description","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_pdf_viewer.py","test_description":"Tests PDFViewer.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\pdf_viewer.py","line_number":241,"test_functions":[],"test_count":0}
{"function_name":"PDFViewer.fit_width","module":"compareblocks.gui.pdf_viewer","class":"PDFViewer","description":"Fit the page width to the viewer.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_pdf_viewer.py","test_description":"Tests PDFViewer.fit_width functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\pdf_viewer.py","line_number":360,"test_functions":[],"test_count":0}
{"function_name":"PDFViewer.go_to_page","module":"compareblocks.gui.pdf_viewer","class":"PDFViewer","description":"Go to a specific page (1-based).","parameters":["self","page_num"],"return_type":"Any","test_file":"tests/unit/test_pdf_viewer.py","test_description":"Tests PDFViewer.go_to_page functionality","field_attributes":{"page_num":{"type":"Any","constraint":"valid input","description":"Parameter page_num"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\pdf_viewer.py","line_number":328,"test_functions":[],"test_count":0}
{"function_name":"PDFViewer.load_pdf","module":"compareblocks.gui.pdf_viewer","class":"PDFViewer","description":"Load a PDF file.","parameters":["self","pdf_path"],"return_type":"bool","test_file":"tests/unit/test_pdf_viewer.py","test_description":"Tests PDFViewer.load_pdf functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"bool","constraint":"boolean value","description":"bool result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","May raise FileNotFoundError"],"dependencies":["PyMuPDF","pathlib","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\pdf_viewer.py","line_number":307,"test_functions":[],"test_count":0}
{"function_name":"PDFViewer.next_page","module":"compareblocks.gui.pdf_viewer","class":"PDFViewer","description":"Go to the next page.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_pdf_viewer.py","test_description":"Tests PDFViewer.next_page functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\pdf_viewer.py","line_number":349,"test_functions":[],"test_count":0}
{"function_name":"PDFViewer.previous_page","module":"compareblocks.gui.pdf_viewer","class":"PDFViewer","description":"Go to the previous page.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_pdf_viewer.py","test_description":"Tests PDFViewer.previous_page functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\pdf_viewer.py","line_number":344,"test_functions":[],"test_count":0}
{"function_name":"PDFViewer.select_block","module":"compareblocks.gui.pdf_viewer","class":"PDFViewer","description":"Select a specific block.","parameters":["self","block_id"],"return_type":"Any","test_file":"tests/unit/test_pdf_viewer.py","test_description":"Tests PDFViewer.select_block functionality","field_attributes":{"block_id":{"type":"Any","constraint":"valid input","description":"Parameter block_id"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\pdf_viewer.py","line_number":380,"test_functions":[],"test_count":0}
{"function_name":"PDFViewer.set_block_highlights","module":"compareblocks.gui.pdf_viewer","class":"PDFViewer","description":"Set blocks to highlight on the current page.","parameters":["self","highlights"],"return_type":"Any","test_file":"tests/unit/test_pdf_viewer.py","test_description":"Tests PDFViewer.set_block_highlights functionality","field_attributes":{"highlights":{"type":"Any","constraint":"valid input","description":"Parameter highlights"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\pdf_viewer.py","line_number":376,"test_functions":[],"test_count":0}
{"function_name":"PDFViewer.set_controls_enabled","module":"compareblocks.gui.pdf_viewer","class":"PDFViewer","description":"Enable or disable navigation controls.","parameters":["self","enabled"],"return_type":"Any","test_file":"tests/unit/test_pdf_viewer.py","test_description":"Tests PDFViewer.set_controls_enabled functionality","field_attributes":{"enabled":{"type":"Any","constraint":"valid input","description":"Parameter enabled"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\pdf_viewer.py","line_number":384,"test_functions":[],"test_count":0}
{"function_name":"PDFViewer.set_zoom_percent","module":"compareblocks.gui.pdf_viewer","class":"PDFViewer","description":"Set zoom as percentage.","parameters":["self","percent"],"return_type":"Any","test_file":"tests/unit/test_pdf_viewer.py","test_description":"Tests PDFViewer.set_zoom_percent functionality","field_attributes":{"percent":{"type":"Any","constraint":"valid input","description":"Parameter percent"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\pdf_viewer.py","line_number":354,"test_functions":[],"test_count":0}
{"function_name":"PDFViewer.setup_ui","module":"compareblocks.gui.pdf_viewer","class":"PDFViewer","description":"Setup the PDF viewer UI.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_pdf_viewer.py","test_description":"Tests PDFViewer.setup_ui functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\pdf_viewer.py","line_number":250,"test_functions":[],"test_count":0}
{"function_name":"PaddleOCREngine.__init__","module":"compareblocks.engines.paddleocr_engine","class":"PaddleOCREngine","description":"Initialize PaddleOCR engine.","parameters":["self","lang","use_gpu"],"return_type":"Any","test_file":"tests/unit/test_paddleocr_engine.py","test_description":"Tests PaddleOCREngine.__init__ functionality","field_attributes":{"lang":{"type":"Any","constraint":"valid input","description":"Parameter lang"},"use_gpu":{"type":"Any","constraint":"valid input","description":"Parameter use_gpu"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["paddleocr","PyMuPDF","tesseract","fitz"],"source_file":"src\\compareblocks\\engines\\paddleocr_engine.py","line_number":48,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9843807220458984,"execution_count":1,"average_duration":0.9843807220458984,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PaddleOCREngine.extract_pdf","module":"compareblocks.engines.paddleocr_engine","class":"PaddleOCREngine","description":"Extract text from PDF using PaddleOCR.","parameters":["self","pdf_path"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_paddleocr_engine.py","test_description":"Tests PaddleOCREngine.extract_pdf functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Extracted dict[str, any] data"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["paddleocr","PyMuPDF","tesseract","fitz"],"source_file":"src\\compareblocks\\engines\\paddleocr_engine.py","line_number":90,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9843807220458984,"execution_count":1,"average_duration":0.9843807220458984,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PaddleOCREngine.is_available","module":"compareblocks.engines.paddleocr_engine","class":"PaddleOCREngine","description":"Check if PaddleOCR is available.","parameters":["self"],"return_type":"bool","test_file":"tests/unit/test_paddleocr_engine.py","test_description":"Tests PaddleOCREngine.is_available functionality","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"bool result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["paddleocr","PyMuPDF","tesseract","fitz"],"source_file":"src\\compareblocks\\engines\\paddleocr_engine.py","line_number":79,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9843807220458984,"execution_count":1,"average_duration":0.9843807220458984,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PaddleOCREngine.save_extraction","module":"compareblocks.engines.paddleocr_engine","class":"PaddleOCREngine","description":"Extract and save PaddleOCR data.","parameters":["self","pdf_path","output_path"],"return_type":"str","test_file":"tests/unit/test_paddleocr_engine.py","test_description":"Tests PaddleOCREngine.save_extraction functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"return_value":{"type":"str","constraint":"valid string","description":"Extracted str data"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","Creates or modifies files"],"dependencies":["PyMuPDF","fitz","tesseract","pathlib","paddleocr"],"source_file":"src\\compareblocks\\engines\\paddleocr_engine.py","line_number":296,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9843807220458984,"execution_count":1,"average_duration":0.9843807220458984,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ParameterWidget.__init__","module":"compareblocks.gui.config_forms","class":"ParameterWidget","description":"Function description","parameters":["self","parameter","current_value"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests ParameterWidget.__init__ functionality","field_attributes":{"parameter":{"type":"Any","constraint":"valid input","description":"Parameter parameter"},"current_value":{"type":"Any","constraint":"valid input","description":"Parameter current_value"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":41,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ParameterWidget.get_value","module":"compareblocks.gui.config_forms","class":"ParameterWidget","description":"Get the current value of the parameter.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests ParameterWidget.get_value functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":106,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ParameterWidget.set_value","module":"compareblocks.gui.config_forms","class":"ParameterWidget","description":"Set the current value of the parameter.","parameters":["self","value"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests ParameterWidget.set_value functionality","field_attributes":{"value":{"type":"Any","constraint":"valid input","description":"Parameter value"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":92,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ParameterWidget.setup_ui","module":"compareblocks.gui.config_forms","class":"ParameterWidget","description":"Setup the parameter editing UI.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_config_forms.py","test_description":"Tests ParameterWidget.setup_ui functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\config_forms.py","line_number":47,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0729751586914062,"execution_count":1,"average_duration":1.0729751586914062,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PerformanceMetric.__post_init__","module":"compareblocks.testing.performance_tracker","class":"PerformanceMetric","description":"Function description","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_performance_tracker.py","test_description":"Tests PerformanceMetric.__post_init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Validates object state","May raise ValueError on validation failure"],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\performance_tracker.py","line_number":37,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846070766448975,"execution_count":1,"average_duration":0.8846070766448975,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PerformanceTracker.__init__","module":"compareblocks.testing.performance_tracker","class":"PerformanceTracker","description":"Initialize performance tracker.","parameters":["self","db_path"],"return_type":"Any","test_file":"tests/unit/test_performance_tracker.py","test_description":"Tests PerformanceTracker.__init__ functionality","field_attributes":{"db_path":{"type":"Any","constraint":"valid input","description":"Parameter db_path"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\performance_tracker.py","line_number":75,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846070766448975,"execution_count":1,"average_duration":0.8846070766448975,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PerformanceTracker.calculate_benchmarks","module":"compareblocks.testing.performance_tracker","class":"PerformanceTracker","description":"Calculate performance benchmarks for an engine function.","parameters":["self","engine_name","function_name","days_back"],"return_type":"Optional[PerformanceBenchmark]","test_file":"tests/unit/test_performance_tracker.py","test_description":"Tests PerformanceTracker.calculate_benchmarks functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"function_name":{"type":"Any","constraint":"valid input","description":"Parameter function_name"},"days_back":{"type":"Any","constraint":"valid input","description":"Parameter days_back"},"return_value":{"type":"Optional[PerformanceBenchmark]","constraint":"valid return value","description":"Calculated optional[performancebenchmark] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\performance_tracker.py","line_number":189,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846070766448975,"execution_count":1,"average_duration":0.8846070766448975,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PerformanceTracker.export_performance_data","module":"compareblocks.testing.performance_tracker","class":"PerformanceTracker","description":"Export performance data to JSON file.","parameters":["self","output_path"],"return_type":"str","test_file":"tests/unit/test_performance_tracker.py","test_description":"Tests PerformanceTracker.export_performance_data functionality","field_attributes":{"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"return_value":{"type":"str","constraint":"valid string","description":"str result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\performance_tracker.py","line_number":521,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846070766448975,"execution_count":1,"average_duration":0.8846070766448975,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PerformanceTracker.generate_performance_report","module":"compareblocks.testing.performance_tracker","class":"PerformanceTracker","description":"Generate comprehensive performance report.","parameters":["self","engine_name","days_back"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_performance_tracker.py","test_description":"Tests PerformanceTracker.generate_performance_report functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"days_back":{"type":"Any","constraint":"valid input","description":"Parameter days_back"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Dict[str, Any] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\performance_tracker.py","line_number":445,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846070766448975,"execution_count":1,"average_duration":0.8846070766448975,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PerformanceTracker.get_performance_comparison","module":"compareblocks.testing.performance_tracker","class":"PerformanceTracker","description":"Compare performance across multiple engines for a function.","parameters":["self","engine_names","function_name"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_performance_tracker.py","test_description":"Tests PerformanceTracker.get_performance_comparison functionality","field_attributes":{"engine_names":{"type":"Any","constraint":"valid input","description":"Parameter engine_names"},"function_name":{"type":"Any","constraint":"valid input","description":"Parameter function_name"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Retrieved dict[str, any] value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\performance_tracker.py","line_number":398,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846070766448975,"execution_count":1,"average_duration":0.8846070766448975,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PerformanceTracker.identify_optimization_opportunities","module":"compareblocks.testing.performance_tracker","class":"PerformanceTracker","description":"Identify performance optimization opportunities.","parameters":["self","engine_name"],"return_type":"List[OptimizationOpportunity]","test_file":"tests/unit/test_performance_tracker.py","test_description":"Tests PerformanceTracker.identify_optimization_opportunities functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"return_value":{"type":"List[OptimizationOpportunity]","constraint":"valid list","description":"List[OptimizationOpportunity] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\performance_tracker.py","line_number":279,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846070766448975,"execution_count":1,"average_duration":0.8846070766448975,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PerformanceTracker.record_performance_metric","module":"compareblocks.testing.performance_tracker","class":"PerformanceTracker","description":"Record a performance metric.","parameters":["self","metric"],"return_type":"Any","test_file":"tests/unit/test_performance_tracker.py","test_description":"Tests PerformanceTracker.record_performance_metric functionality","field_attributes":{"metric":{"type":"Any","constraint":"valid input","description":"Parameter metric"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\performance_tracker.py","line_number":156,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846070766448975,"execution_count":1,"average_duration":0.8846070766448975,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ProcessingSession.__init__","module":"src.compareblocks.mcp.handlers","class":"ProcessingSession","description":"Initialize processing session with metadata","parameters":["self","session_id: str","pdf_path: str","metadata: Dict[str, Any]"],"return_type":"None","test_file":"tests/unit/test_mcp_handlers.py","test_description":"Tests initialization of processing sessions","field_attributes":{"session_id":{"type":"str","constraint":"unique ID","description":"Session identifier"},"pdf_path":{"type":"str","constraint":"file path","description":"PDF file path"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["datetime"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1220347881317139,"execution_count":1,"average_duration":1.1220347881317139,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ProcessingSession.to_dict","module":"src.compareblocks.mcp.handlers","class":"ProcessingSession","description":"Convert session to dictionary representation","parameters":["self"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_mcp_handlers.py","test_description":"Tests conversion of sessions to dictionary format","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"session data","description":"Session as dictionary"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["datetime"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1220347881317139,"execution_count":1,"average_duration":1.1220347881317139,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ProcessingSession.update_status","module":"src.compareblocks.mcp.handlers","class":"ProcessingSession","description":"Update session status and progress","parameters":["self","status: str","progress: float = None","error: str = None"],"return_type":"None","test_file":"tests/unit/test_mcp_handlers.py","test_description":"Tests updating of session status and progress","field_attributes":{"status":{"type":"str","constraint":"valid status","description":"Session status"},"progress":{"type":"float","constraint":"0.0 to 1.0","description":"Progress percentage","default":"None"},"error":{"type":"str","constraint":"error message","description":"Error description","default":"None"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Updates session state"],"dependencies":["datetime"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1220347881317139,"execution_count":1,"average_duration":1.1220347881317139,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ProjectManager.clear_cache","module":"src.compareblocks.project.manager","class":"ProjectManager","description":"Clear all cached data.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_manager.py","test_description":"Tests ProjectManager.ProjectManager.clear_cache functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ProjectManager.create_project_manifest","module":"src.compareblocks.project.manager","class":"ProjectManager","description":"Create a comprehensive project manifest.","parameters":["self","pdf_path: Any"],"return_type":"Any","test_file":"tests/unit/test_manager.py","test_description":"Tests ProjectManager.ProjectManager.create_project_manifest functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ProjectManager.create_project_structure","module":"src.compareblocks.project.manager","class":"ProjectManager","description":"Create comprehensive project structure for a PDF.","parameters":["self","pdf_path: Any"],"return_type":"Any","test_file":"tests/unit/test_manager.py","test_description":"Tests ProjectManager.ProjectManager.create_project_structure functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ProjectManager.find_moved_files","module":"src.compareblocks.project.manager","class":"ProjectManager","description":"Find files that may have been moved by searching for similar names.","parameters":["self","pdf_path: Any"],"return_type":"Any","test_file":"tests/unit/test_manager.py","test_description":"Tests ProjectManager.ProjectManager.find_moved_files functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ProjectManager.get_file_status","module":"src.compareblocks.project.manager","class":"ProjectManager","description":"Get comprehensive status for a file.","parameters":["self","file_path: Any"],"return_type":"Any","test_file":"tests/unit/test_manager.py","test_description":"Tests ProjectManager.ProjectManager.get_file_status functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ProjectManager.get_project_structure","module":"src.compareblocks.project.manager","class":"ProjectManager","description":"Get project structure, creating if necessary.","parameters":["self","pdf_path: Any"],"return_type":"Any","test_file":"tests/unit/test_manager.py","test_description":"Tests ProjectManager.ProjectManager.get_project_structure functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ProjectManager.get_project_summary","module":"src.compareblocks.project.manager","class":"ProjectManager","description":"Get a summary of the project status.","parameters":["self","pdf_path: Any"],"return_type":"Any","test_file":"tests/unit/test_manager.py","test_description":"Tests ProjectManager.ProjectManager.get_project_summary functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ProjectManager.get_reprocessing_files","module":"src.compareblocks.project.manager","class":"ProjectManager","description":"Get all files that should be considered for reprocessing.","parameters":["self","pdf_path: Any"],"return_type":"Any","test_file":"tests/unit/test_manager.py","test_description":"Tests ProjectManager.ProjectManager.get_reprocessing_files functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ProjectManager.relocate_file","module":"src.compareblocks.project.manager","class":"ProjectManager","description":"Relocate a file in the project structure.","parameters":["self","old_path: Any","new_path: Any","pdf_path: Any"],"return_type":"Any","test_file":"tests/unit/test_manager.py","test_description":"Tests ProjectManager.ProjectManager.relocate_file functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ProjectManager.save_project_manifest","module":"src.compareblocks.project.manager","class":"ProjectManager","description":"Save project manifest to file.","parameters":["self","pdf_path: Any","output_path: Any"],"return_type":"Any","test_file":"tests/unit/test_manager.py","test_description":"Tests ProjectManager.ProjectManager.save_project_manifest functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ProjectManager.validate_project_structure","module":"src.compareblocks.project.manager","class":"ProjectManager","description":"Validate project structure and return detailed report.","parameters":["self","pdf_path: Any"],"return_type":"Any","test_file":"tests/unit/test_manager.py","test_description":"Tests ProjectManager.ProjectManager.validate_project_structure functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ProjectionProfileAnalyzer.analyze_projection_variance","module":"src.compareblocks.gbg.orientation","class":"ProjectionProfileAnalyzer","description":"Calculate variance of projection profile","parameters":["projection: np.ndarray"],"return_type":"float","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests projection variance calculation for orientation confidence","field_attributes":{"return_value":{"type":"float","constraint":">= 0.0","description":"float result"},"projection":{"type":"np.ndarray","constraint":"valid input","description":"Parameter projection"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0}
{"function_name":"ProjectionProfileAnalyzer.calculate_horizontal_projection","module":"src.compareblocks.gbg.orientation","class":"ProjectionProfileAnalyzer","description":"Calculate horizontal projection profile (sum of pixels per row)","parameters":["image: np.ndarray"],"return_type":"np.ndarray","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests horizontal projection calculation for text orientation analysis","field_attributes":{"image":{"type":"np.ndarray","constraint":"valid input","description":"Parameter image"},"return_value":{"type":"np.ndarray","constraint":"valid return value","description":"Calculated np.ndarray result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0}
{"function_name":"ProjectionProfileAnalyzer.calculate_vertical_projection","module":"src.compareblocks.gbg.orientation","class":"ProjectionProfileAnalyzer","description":"Calculate vertical projection profile (sum of pixels per column)","parameters":["image: np.ndarray"],"return_type":"np.ndarray","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests vertical projection calculation for text orientation analysis","field_attributes":{"image":{"type":"np.ndarray","constraint":"valid input","description":"Parameter image"},"return_value":{"type":"np.ndarray","constraint":"valid return value","description":"Calculated np.ndarray result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0}
{"function_name":"ProjectionProfileAnalyzer.find_text_lines","module":"src.compareblocks.gbg.orientation","class":"ProjectionProfileAnalyzer","description":"Find text line boundaries from horizontal projection","parameters":["horizontal_projection: np.ndarray","threshold_ratio: float = 0.1"],"return_type":"list[Tuple[int, int]]","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests text line detection from projection profiles","field_attributes":{"horizontal_projection":{"type":"np.ndarray","constraint":"valid input","description":"Parameter horizontal_projection"},"threshold_ratio":{"type":"float","constraint":">= 0.0","description":"Parameter threshold_ratio","default":"0.1"},"return_value":{"type":"list[Tuple[int, int]]","constraint":"valid return value","description":"list[Tuple[int, int]] result"},"performance":{"time_complexity":"O(n)"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0}
{"function_name":"PyMuPDFBlockMatcher.__init__","module":"compareblocks.associationmupdf_matcher","class":"PyMuPDFBlockMatcher","description":"Initialize the PyMuPDF block matcher.","parameters":["self","similarity_threshold"],"return_type":"Any","test_file":"tests/unit/test_associationmupdf_matcher.py","test_description":"Tests PyMuPDFBlockMatcher.__init__ functionality","field_attributes":{"similarity_threshold":{"type":"Any","constraint":"valid input","description":"Parameter similarity_threshold"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"performance":{"time_complexity":"O(n*m)","memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["json","PyMuPDF","rapidfuzz","pathlib","fitz"],"source_file":"src\\compareblocks\\association\\pymupdf_matcher.py","line_number":32,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8719310760498047,"execution_count":1,"average_duration":0.8719310760498047,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PyMuPDFBlockMatcher.match_blocks","module":"compareblocks.associationmupdf_matcher","class":"PyMuPDFBlockMatcher","description":"Match PyMuPDF engine blocks to GBG blocks using multiple strategies.","parameters":["self","gbg_data","engine_data"],"return_type":"List[PyMuPDFMatch]","test_file":"tests/unit/test_associationmupdf_matcher.py","test_description":"Tests PyMuPDFBlockMatcher.match_blocks functionality","field_attributes":{"gbg_data":{"type":"Any","constraint":"valid input","description":"Parameter gbg_data"},"engine_data":{"type":"Any","constraint":"valid input","description":"Parameter engine_data"},"return_value":{"type":"List[PyMuPDFMatch]","constraint":"valid list","description":"List[PyMuPDFMatch] result"},"performance":{"time_complexity":"O(n*m)","memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["json","PyMuPDF","rapidfuzz","pathlib","fitz"],"source_file":"src\\compareblocks\\association\\pymupdf_matcher.py","line_number":36,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8719310760498047,"execution_count":1,"average_duration":0.8719310760498047,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PyMuPDFEngine.__init__","module":"compareblocks.enginesmupdf_engine","class":"PyMuPDFEngine","description":"Initialize PyMuPDF engine.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_enginesmupdf_engine.py","test_description":"Tests PyMuPDFEngine.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\pymupdf_engine.py","line_number":42,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8638079166412354,"execution_count":1,"average_duration":0.8638079166412354,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PyMuPDFEngine.extract_pdf","module":"compareblocks.enginesmupdf_engine","class":"PyMuPDFEngine","description":"Extract raw PyMuPDF data from PDF.","parameters":["self","pdf_path"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_enginesmupdf_engine.py","test_description":"Tests PyMuPDFEngine.extract_pdf functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Extracted dict[str, any] data"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\pymupdf_engine.py","line_number":46,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8638079166412354,"execution_count":1,"average_duration":0.8638079166412354,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"PyMuPDFEngine.save_extraction","module":"compareblocks.enginesmupdf_engine","class":"PyMuPDFEngine","description":"Extract and save raw PyMuPDF data.","parameters":["self","pdf_path","output_path"],"return_type":"str","test_file":"tests/unit/test_enginesmupdf_engine.py","test_description":"Tests PyMuPDFEngine.save_extraction functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"return_value":{"type":"str","constraint":"valid string","description":"Extracted str data"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","Creates or modifies files"],"dependencies":["PyMuPDF","pathlib","fitz"],"source_file":"src\\compareblocks\\engines\\pymupdf_engine.py","line_number":211,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8638079166412354,"execution_count":1,"average_duration":0.8638079166412354,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ReportGenerator.__init__","module":"compareblocks.analytics.report_generator","class":"ReportGenerator","description":"Initialize report generator.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_report_generator.py","test_description":"Tests ReportGenerator.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\report_generator.py","line_number":51,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":1.0116229057312012,"execution_count":1,"average_duration":1.0116229057312012,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ReportGenerator.generate_comparison_report","module":"compareblocks.analytics.report_generator","class":"ReportGenerator","description":"Generate a comparison report from multiple analytics reports.","parameters":["self","reports"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_report_generator.py","test_description":"Tests ReportGenerator.generate_comparison_report functionality","field_attributes":{"reports":{"type":"Any","constraint":"valid input","description":"Parameter reports"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Dict[str, Any] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\report_generator.py","line_number":459,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":1.0116229057312012,"execution_count":1,"average_duration":1.0116229057312012,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ReportGenerator.generate_comprehensive_report","module":"compareblocks.analytics.report_generator","class":"ReportGenerator","description":"Generate a comprehensive analytics report.","parameters":["self","engine_results","consensus_decisions","variation_scores","pdf_path"],"return_type":"AnalyticsReport","test_file":"tests/unit/test_report_generator.py","test_description":"Tests ReportGenerator.generate_comprehensive_report functionality","field_attributes":{"engine_results":{"type":"Any","constraint":"valid input","description":"Parameter engine_results"},"consensus_decisions":{"type":"Any","constraint":"valid input","description":"Parameter consensus_decisions"},"variation_scores":{"type":"Any","constraint":"valid input","description":"Parameter variation_scores"},"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"AnalyticsReport","constraint":"valid return value","description":"AnalyticsReport result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\report_generator.py","line_number":55,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":1.0116229057312012,"execution_count":1,"average_duration":1.0116229057312012,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ReportGenerator.generate_decision_analysis_report","module":"compareblocks.analytics.report_generator","class":"ReportGenerator","description":"Generate a report focused on consensus decision analysis.","parameters":["self","consensus_decisions"],"return_type":"AnalyticsReport","test_file":"tests/unit/test_report_generator.py","test_description":"Tests ReportGenerator.generate_decision_analysis_report functionality","field_attributes":{"consensus_decisions":{"type":"Any","constraint":"valid input","description":"Parameter consensus_decisions"},"return_value":{"type":"AnalyticsReport","constraint":"valid return value","description":"AnalyticsReport result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\report_generator.py","line_number":176,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":1.0116229057312012,"execution_count":1,"average_duration":1.0116229057312012,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ReportGenerator.generate_engine_performance_report","module":"compareblocks.analytics.report_generator","class":"ReportGenerator","description":"Generate a report focused on engine performance.","parameters":["self","engine_results"],"return_type":"AnalyticsReport","test_file":"tests/unit/test_report_generator.py","test_description":"Tests ReportGenerator.generate_engine_performance_report functionality","field_attributes":{"engine_results":{"type":"Any","constraint":"valid input","description":"Parameter engine_results"},"return_value":{"type":"AnalyticsReport","constraint":"valid return value","description":"AnalyticsReport result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\report_generator.py","line_number":120,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":1.0116229057312012,"execution_count":1,"average_duration":1.0116229057312012,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ReportGenerator.load_report","module":"compareblocks.analytics.report_generator","class":"ReportGenerator","description":"Load analytics report from file.","parameters":["self","file_path"],"return_type":"AnalyticsReport","test_file":"tests/unit/test_report_generator.py","test_description":"Tests ReportGenerator.load_report functionality","field_attributes":{"file_path":{"type":"Any","constraint":"valid input","description":"Parameter file_path"},"return_value":{"type":"AnalyticsReport","constraint":"valid return value","description":"AnalyticsReport result"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","May raise FileNotFoundError"],"dependencies":["numpy","pandas","pathlib"],"source_file":"src\\compareblocks\\analytics\\report_generator.py","line_number":437,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":1.0116229057312012,"execution_count":1,"average_duration":1.0116229057312012,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ReportGenerator.save_report","module":"compareblocks.analytics.report_generator","class":"ReportGenerator","description":"Save analytics report to file.","parameters":["self","report","output_path"],"return_type":"Path","test_file":"tests/unit/test_report_generator.py","test_description":"Tests ReportGenerator.save_report functionality","field_attributes":{"report":{"type":"Any","constraint":"valid input","description":"Parameter report"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"return_value":{"type":"Path","constraint":"valid return value","description":"Path result"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","Creates or modifies files"],"dependencies":["numpy","pandas","pathlib"],"source_file":"src\\compareblocks\\analytics\\report_generator.py","line_number":412,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":1.0116229057312012,"execution_count":1,"average_duration":1.0116229057312012,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ReviewDataManager.__init__","module":"compareblocks.gui.review_gui","class":"ReviewDataManager","description":"Function description","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewDataManager.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":35,"test_functions":[],"test_count":0}
{"function_name":"ReviewDataManager.add_external_variations","module":"compareblocks.gui.review_gui","class":"ReviewDataManager","description":"Add external variations from NDJSON import.","parameters":["self","variations"],"return_type":"int","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewDataManager.add_external_variations functionality","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"int","constraint":"valid integer","description":"int result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":100,"test_functions":[],"test_count":0}
{"function_name":"ReviewDataManager.export_consensus","module":"compareblocks.gui.review_gui","class":"ReviewDataManager","description":"Export consensus decisions to NDJSON.","parameters":["self","output_path"],"return_type":"bool","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewDataManager.export_consensus functionality","field_attributes":{"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"return_value":{"type":"bool","constraint":"boolean value","description":"bool result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":272,"test_functions":[],"test_count":0}
{"function_name":"ReviewDataManager.get_block_variations","module":"compareblocks.gui.review_gui","class":"ReviewDataManager","description":"Get variation display data for a block.","parameters":["self","block_id"],"return_type":"List[VariationDisplayData]","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewDataManager.get_block_variations functionality","field_attributes":{"block_id":{"type":"Any","constraint":"valid input","description":"Parameter block_id"},"return_value":{"type":"List[VariationDisplayData]","constraint":"valid list","description":"Extracted or retrieved items"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":197,"test_functions":[],"test_count":0}
{"function_name":"ReviewDataManager.get_page_blocks","module":"compareblocks.gui.review_gui","class":"ReviewDataManager","description":"Get all blocks for a specific page.","parameters":["self","page_num"],"return_type":"List[Tuple[str, BoundingBox]]","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewDataManager.get_page_blocks functionality","field_attributes":{"page_num":{"type":"Any","constraint":"valid input","description":"Parameter page_num"},"return_value":{"type":"List[Tuple[str, BoundingBox]]","constraint":"valid list","description":"Extracted or retrieved items"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":186,"test_functions":[],"test_count":0}
{"function_name":"ReviewDataManager.load_pdf","module":"compareblocks.gui.review_gui","class":"ReviewDataManager","description":"Load a PDF and generate GBG analysis.","parameters":["self","pdf_path"],"return_type":"bool","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewDataManager.load_pdf functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"bool","constraint":"boolean value","description":"bool result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","May raise FileNotFoundError"],"dependencies":["PyMuPDF","pathlib","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":48,"test_functions":[],"test_count":0}
{"function_name":"ReviewDataManager.set_consensus_decision","module":"compareblocks.gui.review_gui","class":"ReviewDataManager","description":"Set the consensus decision for a block.","parameters":["self","block_id","variation_id"],"return_type":"Any","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewDataManager.set_consensus_decision functionality","field_attributes":{"block_id":{"type":"Any","constraint":"valid input","description":"Parameter block_id"},"variation_id":{"type":"Any","constraint":"valid input","description":"Parameter variation_id"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":260,"test_functions":[],"test_count":0}
{"function_name":"ReviewDataManager.set_manual_correction","module":"compareblocks.gui.review_gui","class":"ReviewDataManager","description":"Set a manual correction for a block.","parameters":["self","block_id","corrected_text"],"return_type":"Any","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewDataManager.set_manual_correction functionality","field_attributes":{"block_id":{"type":"Any","constraint":"valid input","description":"Parameter block_id"},"corrected_text":{"type":"Any","constraint":"valid input","description":"Parameter corrected_text"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":264,"test_functions":[],"test_count":0}
{"function_name":"ReviewGUI.__init__","module":"compareblocks.gui.review_gui","class":"ReviewGUI","description":"Function description","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewGUI.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":329,"test_functions":[],"test_count":0}
{"function_name":"ReviewGUI.apply_block_filters","module":"compareblocks.gui.review_gui","class":"ReviewGUI","description":"Apply block filters and update display.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewGUI.apply_block_filters functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":614,"test_functions":[],"test_count":0}
{"function_name":"ReviewGUI.connect_signals","module":"compareblocks.gui.review_gui","class":"ReviewGUI","description":"Connect UI signals.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewGUI.connect_signals functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":470,"test_functions":[],"test_count":0}
{"function_name":"ReviewGUI.export_consensus","module":"compareblocks.gui.review_gui","class":"ReviewGUI","description":"Export consensus decisions.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewGUI.export_consensus functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":544,"test_functions":[],"test_count":0}
{"function_name":"ReviewGUI.import_variations","module":"compareblocks.gui.review_gui","class":"ReviewGUI","description":"Import external variations.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewGUI.import_variations functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":520,"test_functions":[],"test_count":0}
{"function_name":"ReviewGUI.load_pdf","module":"compareblocks.gui.review_gui","class":"ReviewGUI","description":"Load a PDF file.","parameters":["self","pdf_path"],"return_type":"Any","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewGUI.load_pdf functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","May raise FileNotFoundError"],"dependencies":["PyMuPDF","pathlib","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":490,"test_functions":[],"test_count":0}
{"function_name":"ReviewGUI.next_block","module":"compareblocks.gui.review_gui","class":"ReviewGUI","description":"Navigate to next block with variations.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewGUI.next_block functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":657,"test_functions":[],"test_count":0}
{"function_name":"ReviewGUI.on_block_selected","module":"compareblocks.gui.review_gui","class":"ReviewGUI","description":"Handle block selection.","parameters":["self","block_id"],"return_type":"Any","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewGUI.on_block_selected functionality","field_attributes":{"block_id":{"type":"Any","constraint":"valid input","description":"Parameter block_id"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":618,"test_functions":[],"test_count":0}
{"function_name":"ReviewGUI.on_consensus_changed","module":"compareblocks.gui.review_gui","class":"ReviewGUI","description":"Handle consensus decision change.","parameters":["self","variation_id"],"return_type":"Any","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewGUI.on_consensus_changed functionality","field_attributes":{"variation_id":{"type":"Any","constraint":"valid input","description":"Parameter variation_id"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":637,"test_functions":[],"test_count":0}
{"function_name":"ReviewGUI.on_import_requested","module":"compareblocks.gui.review_gui","class":"ReviewGUI","description":"Handle import request.","parameters":["self","file_path","options","records"],"return_type":"Any","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewGUI.on_import_requested functionality","field_attributes":{"file_path":{"type":"Any","constraint":"valid input","description":"Parameter file_path"},"options":{"type":"Any","constraint":"valid input","description":"Parameter options"},"records":{"type":"Any","constraint":"valid input","description":"Parameter records"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":526,"test_functions":[],"test_count":0}
{"function_name":"ReviewGUI.on_manual_correction","module":"compareblocks.gui.review_gui","class":"ReviewGUI","description":"Handle manual correction.","parameters":["self","block_id","corrected_text"],"return_type":"Any","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewGUI.on_manual_correction functionality","field_attributes":{"block_id":{"type":"Any","constraint":"valid input","description":"Parameter block_id"},"corrected_text":{"type":"Any","constraint":"valid input","description":"Parameter corrected_text"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":643,"test_functions":[],"test_count":0}
{"function_name":"ReviewGUI.on_page_changed","module":"compareblocks.gui.review_gui","class":"ReviewGUI","description":"Handle page change.","parameters":["self","page_num"],"return_type":"Any","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewGUI.on_page_changed functionality","field_attributes":{"page_num":{"type":"Any","constraint":"valid input","description":"Parameter page_num"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":560,"test_functions":[],"test_count":0}
{"function_name":"ReviewGUI.on_variation_selected","module":"compareblocks.gui.review_gui","class":"ReviewGUI","description":"Handle variation selection.","parameters":["self","variation_id"],"return_type":"Any","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewGUI.on_variation_selected functionality","field_attributes":{"variation_id":{"type":"Any","constraint":"valid input","description":"Parameter variation_id"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":633,"test_functions":[],"test_count":0}
{"function_name":"ReviewGUI.open_pdf","module":"compareblocks.gui.review_gui","class":"ReviewGUI","description":"Open a PDF file.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewGUI.open_pdf functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","PySide6","fitz"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":481,"test_functions":[],"test_count":0}
{"function_name":"ReviewGUI.preview_changes","module":"compareblocks.gui.review_gui","class":"ReviewGUI","description":"Preview changes from one file to another.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewGUI.preview_changes functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":672,"test_functions":[],"test_count":0}
{"function_name":"ReviewGUI.previous_block","module":"compareblocks.gui.review_gui","class":"ReviewGUI","description":"Navigate to previous block with variations.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewGUI.previous_block functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":652,"test_functions":[],"test_count":0}
{"function_name":"ReviewGUI.recalculate_surrounding_blocks","module":"compareblocks.gui.review_gui","class":"ReviewGUI","description":"Recalculate surrounding blocks after changes.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewGUI.recalculate_surrounding_blocks functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Calculated any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":662,"test_functions":[],"test_count":0}
{"function_name":"ReviewGUI.setup_menus","module":"compareblocks.gui.review_gui","class":"ReviewGUI","description":"Setup application menus.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewGUI.setup_menus functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":411,"test_functions":[],"test_count":0}
{"function_name":"ReviewGUI.setup_status_bar","module":"compareblocks.gui.review_gui","class":"ReviewGUI","description":"Setup the status bar.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewGUI.setup_status_bar functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":452,"test_functions":[],"test_count":0}
{"function_name":"ReviewGUI.setup_ui","module":"compareblocks.gui.review_gui","class":"ReviewGUI","description":"Setup the main UI.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewGUI.setup_ui functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":348,"test_functions":[],"test_count":0}
{"function_name":"ReviewGUI.should_show_block","module":"compareblocks.gui.review_gui","class":"ReviewGUI","description":"Check if block should be shown based on filters.","parameters":["self","block_id","variations"],"return_type":"bool","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewGUI.should_show_block functionality","field_attributes":{"block_id":{"type":"Any","constraint":"valid input","description":"Parameter block_id"},"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"bool","constraint":"boolean value","description":"bool result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":599,"test_functions":[],"test_count":0}
{"function_name":"ReviewGUI.update_page_highlights","module":"compareblocks.gui.review_gui","class":"ReviewGUI","description":"Update block highlights for the current page.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_review_gui.py","test_description":"Tests ReviewGUI.update_page_highlights functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\review_gui.py","line_number":565,"test_functions":[],"test_count":0}
{"function_name":"ScoringWeights.normalize","module":"src.compareblocks.consensus.score","class":"ScoringWeights","description":"Normalize weights to sum to 1.0.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests normalize functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"SeedBlock.__post_init__","module":"src.compareblocks.gbg.types","class":"SeedBlock","description":"Validate seed block data ensuring page number is non-negative and block ID is not empty","parameters":["self"],"return_type":"None","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests validation of seed block data with various valid and invalid inputs","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Raises ValueError if validation fails"],"dependencies":["dataclasses"],"test_functions":[],"test_count":0}
{"function_name":"SeedBlockDetector.__init__","module":"src.compareblocks.gbg.seed","class":"SeedBlockDetector","description":"Initialize the seed block detector with minimum block area and merge threshold parameters","parameters":["self","min_block_area: float = 100.0","merge_threshold: float = 10.0"],"return_type":"None","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests initialization of seed block detector with various configuration parameters","field_attributes":{"min_block_area":{"type":"float","constraint":">= 0.0","description":"Parameter min_block_area","default":"100.0"},"merge_threshold":{"type":"float","constraint":">= 0.0","description":"Parameter merge_threshold","default":"10.0"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PyMuPDF","fitz"],"test_functions":[],"test_count":0}
{"function_name":"SeedBlockDetector._detect_page_orientation","module":"src.compareblocks.gbg.seed","class":"SeedBlockDetector","description":"Detect page-level orientation using image analysis","parameters":["self","page: fitz.Page"],"return_type":"OrientationHints","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests page orientation detection with various rotated pages","field_attributes":{"page":{"type":"fitz.Page","constraint":"valid input","description":"Parameter page"},"return_value":{"type":"OrientationHints","constraint":"valid return value","description":"OrientationHints result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents"],"dependencies":["fitz","PyMuPDF"],"test_functions":[],"test_count":0}
{"function_name":"SeedBlockDetector._extract_text_blocks","module":"src.compareblocks.gbg.seed","class":"SeedBlockDetector","description":"Extract text blocks from a PyMuPDF page object","parameters":["self","page: fitz.Page"],"return_type":"List[Tuple[BoundingBox, str]]","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests text block extraction from PyMuPDF page objects","field_attributes":{"return_value":{"type":"List[Tuple[BoundingBox, str]]","constraint":"non-empty list","description":"Extracted or retrieved items"},"page":{"type":"fitz.Page","constraint":"valid input","description":"Parameter page"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"test_functions":[],"test_count":0}
{"function_name":"SeedBlockDetector._is_multi_column_block","module":"src.compareblocks.gbg.seed","class":"SeedBlockDetector","description":"Determine if a block likely contains multiple columns","parameters":["self","block: SeedBlock"],"return_type":"bool","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests detection of multi-column blocks using aspect ratio and text length heuristics","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"bool result"},"block":{"type":"SeedBlock","constraint":"valid input","description":"Parameter block"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"test_functions":[],"test_count":0}
{"function_name":"SeedBlockDetector._separate_column_blocks","module":"src.compareblocks.gbg.seed","class":"SeedBlockDetector","description":"Separate blocks that span multiple columns into individual column blocks","parameters":["self","blocks: List[SeedBlock]"],"return_type":"List[SeedBlock]","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests separation of multi-column blocks into individual columns","field_attributes":{"return_value":{"type":"List[SeedBlock]","constraint":"valid list","description":"List[SeedBlock] result"},"blocks":{"type":"List[SeedBlock]","constraint":"valid list","description":"Parameter blocks"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"test_functions":[],"test_count":0}
{"function_name":"SeedBlockDetector._split_into_columns","module":"src.compareblocks.gbg.seed","class":"SeedBlockDetector","description":"Split a multi-column block into separate column blocks","parameters":["self","block: SeedBlock"],"return_type":"List[SeedBlock]","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests splitting of multi-column blocks into individual column blocks","field_attributes":{"return_value":{"type":"List[SeedBlock]","constraint":"valid list","description":"List[SeedBlock] result"},"block":{"type":"SeedBlock","constraint":"valid input","description":"Parameter block"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"test_functions":[],"test_count":0}
{"function_name":"SeedBlockDetector.extract_all_seed_blocks","module":"src.compareblocks.gbg.seed","class":"SeedBlockDetector","description":"Extract seed blocks from all pages in a PDF","parameters":["self","pdf_path: str"],"return_type":"List[SeedBlock]","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests extraction of seed blocks from entire PDF documents","field_attributes":{"return_value":{"type":"List[SeedBlock]","constraint":"non-empty list","description":"Extracted or retrieved items"},"pdf_path":{"type":"str","constraint":"non-empty string","description":"Parameter pdf_path"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"test_functions":[],"test_count":0}
{"function_name":"SeedBlockDetector.extract_seed_blocks","module":"src.compareblocks.gbg.seed","class":"SeedBlockDetector","description":"Extract seed blocks from a specific PDF page using PyMuPDF","parameters":["self","pdf_path: str","page_num: int"],"return_type":"List[SeedBlock]","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests extraction of seed blocks from PDF pages with various layouts and content","field_attributes":{"return_value":{"type":"List[SeedBlock]","constraint":"non-empty list","description":"Extracted or retrieved items"},"pdf_path":{"type":"str","constraint":"non-empty string","description":"Parameter pdf_path"},"page_num":{"type":"int","constraint":">= 0","description":"Parameter page_num"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"test_functions":[],"test_count":0}
{"function_name":"StatusHandler.__init__","module":"src.compareblocks.mcp.handlers","class":"StatusHandler","description":"Initialize status handler with extraction handler reference","parameters":["self","extraction_handler: ExtractionHandler"],"return_type":"None","test_file":"tests/unit/test_mcp_handlers.py","test_description":"Tests initialization of status handlers","field_attributes":{"extraction_handler":{"type":"ExtractionHandler","constraint":"valid handler","description":"Extraction handler"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1220347881317139,"execution_count":1,"average_duration":1.1220347881317139,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"StatusHandler.handle_results_request","module":"src.compareblocks.mcp.handlers","class":"StatusHandler","description":"Handle results request for completed session","parameters":["self","params: Dict[str, Any]"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_mcp_handlers.py","test_description":"Tests handling of results requests","field_attributes":{"params":{"type":"Dict[str, Any]","constraint":"request data","description":"Results parameters"},"return_value":{"type":"Dict[str, Any]","constraint":"results data","description":"Processing results"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1220347881317139,"execution_count":1,"average_duration":1.1220347881317139,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"StatusHandler.handle_status_request","module":"src.compareblocks.mcp.handlers","class":"StatusHandler","description":"Handle status request for session or system","parameters":["self","params: Dict[str, Any]"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_mcp_handlers.py","test_description":"Tests handling of status requests","field_attributes":{"params":{"type":"Dict[str, Any]","constraint":"request data","description":"Status parameters"},"return_value":{"type":"Dict[str, Any]","constraint":"status data","description":"Status information"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["datetime"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1220347881317139,"execution_count":1,"average_duration":1.1220347881317139,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TesseractBlockMatcher.__init__","module":"compareblocks.association.tesseract_matcher","class":"TesseractBlockMatcher","description":"Initialize Tesseract matcher with OCR-specific settings.","parameters":["self","similarity_threshold"],"return_type":"Any","test_file":"tests/unit/test_tesseract_matcher.py","test_description":"Tests TesseractBlockMatcher.__init__ functionality","field_attributes":{"similarity_threshold":{"type":"Any","constraint":"valid input","description":"Parameter similarity_threshold"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"performance":{"time_complexity":"O(n*m)"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["json","rapidfuzz","pathlib"],"source_file":"src\\compareblocks\\association\\tesseract_matcher.py","line_number":32,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.982933759689331,"execution_count":1,"average_duration":0.982933759689331,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TesseractBlockMatcher.match_blocks","module":"compareblocks.association.tesseract_matcher","class":"TesseractBlockMatcher","description":"Match Tesseract engine blocks to GBG blocks using OCR-aware strategies.","parameters":["self","gbg_data","engine_data"],"return_type":"List[TesseractMatch]","test_file":"tests/unit/test_tesseract_matcher.py","test_description":"Tests TesseractBlockMatcher.match_blocks functionality","field_attributes":{"gbg_data":{"type":"Any","constraint":"valid input","description":"Parameter gbg_data"},"engine_data":{"type":"Any","constraint":"valid input","description":"Parameter engine_data"},"return_value":{"type":"List[TesseractMatch]","constraint":"valid list","description":"List[TesseractMatch] result"},"performance":{"time_complexity":"O(n*m)"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","rapidfuzz","pathlib"],"source_file":"src\\compareblocks\\association\\tesseract_matcher.py","line_number":60,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.982933759689331,"execution_count":1,"average_duration":0.982933759689331,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TesseractEngine.__init__","module":"compareblocks.engines.tesseract_engine","class":"TesseractEngine","description":"Initialize Tesseract engine.","parameters":["self","dpi","lang"],"return_type":"Any","test_file":"tests/unit/test_tesseract_engine.py","test_description":"Tests TesseractEngine.__init__ functionality","field_attributes":{"dpi":{"type":"Any","constraint":"valid input","description":"Parameter dpi"},"lang":{"type":"Any","constraint":"valid input","description":"Parameter lang"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\tesseract_engine.py","line_number":49,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":23.896570682525635,"execution_count":1,"average_duration":23.896570682525635,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TesseractEngine.extract_pdf","module":"compareblocks.engines.tesseract_engine","class":"TesseractEngine","description":"Extract text from PDF using Tesseract OCR.","parameters":["self","pdf_path"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_tesseract_engine.py","test_description":"Tests TesseractEngine.extract_pdf functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Extracted dict[str, any] data"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\tesseract_engine.py","line_number":77,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":23.896570682525635,"execution_count":1,"average_duration":23.896570682525635,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TesseractEngine.is_available","module":"compareblocks.engines.tesseract_engine","class":"TesseractEngine","description":"Check if Tesseract is available.","parameters":["self"],"return_type":"bool","test_file":"tests/unit/test_tesseract_engine.py","test_description":"Tests TesseractEngine.is_available functionality","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"bool result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\tesseract_engine.py","line_number":64,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":23.896570682525635,"execution_count":1,"average_duration":23.896570682525635,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TesseractEngine.save_extraction","module":"compareblocks.engines.tesseract_engine","class":"TesseractEngine","description":"Extract and save Tesseract OCR data.","parameters":["self","pdf_path","output_path"],"return_type":"str","test_file":"tests/unit/test_tesseract_engine.py","test_description":"Tests TesseractEngine.save_extraction functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"return_value":{"type":"str","constraint":"valid string","description":"Extracted str data"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","Creates or modifies files"],"dependencies":["PyMuPDF","pathlib","fitz"],"source_file":"src\\compareblocks\\engines\\tesseract_engine.py","line_number":305,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":23.896570682525635,"execution_count":1,"average_duration":23.896570682525635,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TestFunctionAnalyzer.visit_ClassDef","module":"build_test_catalog","class":"TestFunctionAnalyzer","description":"Visit class definitions.","parameters":["self","node: Any"],"return_type":"Any","test_file":"tests/unit/test_build_test_catalog.py","test_description":"Tests TestFunctionAnalyzer.TestFunctionAnalyzer.visit_ClassDef functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.862572431564331,"execution_count":1,"average_duration":0.862572431564331,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TestFunctionAnalyzer.visit_FunctionDef","module":"build_test_catalog","class":"TestFunctionAnalyzer","description":"Visit function definitions.","parameters":["self","node: Any"],"return_type":"Any","test_file":"tests/unit/test_build_test_catalog.py","test_description":"Tests TestFunctionAnalyzer.TestFunctionAnalyzer.visit_FunctionDef functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.862572431564331,"execution_count":1,"average_duration":0.862572431564331,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TestFunctionAnalyzer.visit_Import","module":"build_test_catalog","class":"TestFunctionAnalyzer","description":"Visit import statements.","parameters":["self","node: Any"],"return_type":"Any","test_file":"tests/unit/test_build_test_catalog.py","test_description":"Tests TestFunctionAnalyzer.TestFunctionAnalyzer.visit_Import functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.862572431564331,"execution_count":1,"average_duration":0.862572431564331,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TestFunctionAnalyzer.visit_ImportFrom","module":"build_test_catalog","class":"TestFunctionAnalyzer","description":"Visit from...import statements.","parameters":["self","node: Any"],"return_type":"Any","test_file":"tests/unit/test_build_test_catalog.py","test_description":"Tests TestFunctionAnalyzer.TestFunctionAnalyzer.visit_ImportFrom functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.862572431564331,"execution_count":1,"average_duration":0.862572431564331,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TestResult.__init__","module":"visual_ocr_testing_tool","class":"TestResult","description":"Initialize standardized test result structure for OCR testing with comprehensive metadata","parameters":[{"name":"timestamp","type":"datetime","description":"When the test was performed"},{"name":"source","type":"str","description":"Source of the test"},{"name":"test_type","type":"str","description":"Type of test performed"},{"name":"page_num","type":"int","description":"PDF page number tested"},{"name":"block_index","type":"int","description":"Block index within the page"},{"name":"similarity","type":"float","description":"Similarity score between expected and actual text"},{"name":"confidence","type":"float","description":"OCR confidence score"},{"name":"extracted_text","type":"str","description":"Text extracted by OCR"},{"name":"expected_text","type":"str","description":"Expected text from reference"},{"name":"preprocessing","type":"str","description":"Preprocessing method used"},{"name":"tesseract_config","type":"str","description":"Tesseract configuration used"},{"name":"success","type":"bool","description":"Whether the test was successful"},{"name":"metadata","type":"Optional[Dict[str, Any]]","description":"Additional test metadata","default":null}],"return_type":"None","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests creation with all parameters and validates data types","field_attributes":{"similarity":{"type":"float","constraint":"0.0 <= value <= 100.0","description":"Percentage similarity between expected and extracted text"},"confidence":{"type":"float","constraint":"0.0 <= value <= 1.0","description":"OCR engine confidence in the extraction"},"page_num":{"type":"int","constraint":">= 0","description":"Zero-based page number in the PDF"},"block_index":{"type":"int","constraint":">= 0","description":"Zero-based block index within the page"},"success":{"type":"bool","constraint":"boolean value","description":"Indicates if test met success criteria"}},"side_effects":["Creates dataclass instance with validated test results"],"dependencies":["dataclasses","datetime","typing"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TestResultDatabase.__init__","module":"visual_ocr_testing_tool","class":"TestResultDatabase","description":"Database for storing and retrieving test results","parameters":["self","db_path: str = \"output/ocr_test_results.db\""],"return_type":"None","test_file":"tests/unit/test_visual_ocr_tool.py","test_description":"Tests initialization of test results database","field_attributes":{"db_path":{"type":"str","constraint":"valid file path","description":"Path to database file","default":"\"output/ocr_test_results.db\""},"return_value":{"type":"None","constraint":"no return value","description":"Initializes database"}},"side_effects":["Creates or modifies files","File I/O operations"],"dependencies":["sqlite3","pathlib"],"test_functions":[],"test_count":0}
{"function_name":"TestResultDatabase.get_test_results","module":"visual_ocr_testing_tool","class":"TestResultDatabase","description":"Retrieve test results from the database","parameters":["self","limit: int = 100","test_type: str = None"],"return_type":"List[TestResult]","test_file":"tests/unit/test_visual_ocr_tool.py","test_description":"Tests retrieval of test results from database","field_attributes":{"limit":{"type":"int","constraint":">= 0","description":"Maximum results to return","default":"100"},"test_type":{"type":"str","constraint":"valid string","description":"Filter by test type","default":"None"},"return_value":{"type":"List[TestResult]","constraint":"valid list","description":"List of test results"}},"side_effects":["File I/O operations"],"dependencies":["sqlite3","json","datetime"],"test_functions":[],"test_count":0}
{"function_name":"TestResultDatabase.save_feed_data","module":"visual_ocr_testing_tool","class":"TestResultDatabase","description":"Save feed data to the database.","parameters":["self","feed_name: Any","feed_type: Any","data: Any"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests TestResultDatabase.TestResultDatabase.save_feed_data functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TestResultDatabase.save_test_result","module":"visual_ocr_testing_tool","class":"TestResultDatabase","description":"Save a test result to the database","parameters":["self","result: TestResult"],"return_type":"None","test_file":"tests/unit/test_visual_ocr_tool.py","test_description":"Tests saving test results to database","field_attributes":{"result":{"type":"TestResult","constraint":"valid input","description":"Test result to save"},"return_value":{"type":"None","constraint":"no return value","description":"Saves result to database"}},"side_effects":["Creates or modifies files","File I/O operations"],"dependencies":["sqlite3","json"],"test_functions":[],"test_count":0}
{"function_name":"TextDiffWidget.__init__","module":"compareblocks.gui.variations_panel","class":"TextDiffWidget","description":"Function description","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_variations_panel.py","test_description":"Tests TextDiffWidget.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\gui\\variations_panel.py","line_number":43,"test_functions":[],"test_count":0}
{"function_name":"TextDiffWidget.set_diff_text","module":"compareblocks.gui.variations_panel","class":"TextDiffWidget","description":"Set text with diff highlighting against reference.","parameters":["self","text","reference_text"],"return_type":"Any","test_file":"tests/unit/test_variations_panel.py","test_description":"Tests TextDiffWidget.set_diff_text functionality","field_attributes":{"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"reference_text":{"type":"Any","constraint":"valid input","description":"Parameter reference_text"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\gui\\variations_panel.py","line_number":49,"test_functions":[],"test_count":0}
{"function_name":"TextNormalizer.__init__","module":"src.compareblocks.normalize.textnorm","class":"TextNormalizer","description":"Initialize normalizer with configuration","parameters":["self","config: Optional[NormalizationConfig] = None"],"return_type":"None","test_file":"tests/unit/test_normalization.py","test_description":"Tests initialization of text normalizer with various configurations","field_attributes":{"config":{"type":"Optional[NormalizationConfig]","constraint":"valid input","description":"Parameter config","default":"None"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["unicodedata","re"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2236049175262451,"execution_count":1,"average_duration":1.2236049175262451,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TextNormalizer._calculate_join_confidence","module":"src.compareblocks.normalize.textnorm","class":"TextNormalizer","description":"Calculate confidence for joining hyphenated words","parameters":["self","word1: str","word2: str","joined_word: str"],"return_type":"float","test_file":"tests/unit/test_normalization.py","test_description":"Tests confidence calculation for dictionary word joining","field_attributes":{"return_value":{"type":"float","constraint":">= 0.0","description":"Calculated float result"},"word1":{"type":"str","constraint":"non-empty string","description":"Parameter word1"},"word2":{"type":"str","constraint":"non-empty string","description":"Parameter word2"},"joined_word":{"type":"str","constraint":"non-empty string","description":"Parameter joined_word"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["unicodedata","re"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2236049175262451,"execution_count":1,"average_duration":1.2236049175262451,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TextNormalizer._compile_patterns","module":"src.compareblocks.normalize.textnorm","class":"TextNormalizer","description":"Compile regex patterns for normalization","parameters":["self"],"return_type":"None","test_file":"tests/unit/test_normalization.py","test_description":"Tests compilation of regex patterns for text processing","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["unicodedata","re"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2236049175262451,"execution_count":1,"average_duration":1.2236049175262451,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TextNormalizer._final_cleanup","module":"src.compareblocks.normalize.textnorm","class":"TextNormalizer","description":"Final cleanup and trimming","parameters":["self","text: str"],"return_type":"str","test_file":"tests/unit/test_normalization.py","test_description":"Tests final cleanup including sentence spacing and trimming","field_attributes":{"return_value":{"type":"str","constraint":"valid string","description":"str result"},"text":{"type":"str","constraint":"non-empty string","description":"Parameter text"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["re"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2236049175262451,"execution_count":1,"average_duration":1.2236049175262451,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TextNormalizer._has_valid_word_pattern","module":"src.compareblocks.normalize.textnorm","class":"TextNormalizer","description":"Check if word has valid English word patterns","parameters":["self","word: str"],"return_type":"bool","test_file":"tests/unit/test_normalization.py","test_description":"Tests validation of English word patterns","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"bool result"},"word":{"type":"str","constraint":"non-empty string","description":"Parameter word"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["unicodedata","re"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2236049175262451,"execution_count":1,"average_duration":1.2236049175262451,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TextNormalizer._join_hyphenated_words","module":"src.compareblocks.normalize.textnorm","class":"TextNormalizer","description":"Join hyphenated words across line breaks with confidence checking","parameters":["self","text: str"],"return_type":"str","test_file":"tests/unit/test_normalization.py","test_description":"Tests hyphenation joining for confident dictionary matches","field_attributes":{"return_value":{"type":"str","constraint":"valid string","description":"str result"},"text":{"type":"str","constraint":"non-empty string","description":"Parameter text"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["re"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2236049175262451,"execution_count":1,"average_duration":1.2236049175262451,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TextNormalizer._load_dictionaries","module":"src.compareblocks.normalize.textnorm","class":"TextNormalizer","description":"Load word dictionaries for hyphenation confidence","parameters":["self"],"return_type":"None","test_file":"tests/unit/test_normalization.py","test_description":"Tests loading of word dictionaries and bigrams for confidence calculation","field_attributes":{"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2236049175262451,"execution_count":1,"average_duration":1.2236049175262451,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TextNormalizer._normalize_special_characters","module":"src.compareblocks.normalize.textnorm","class":"TextNormalizer","description":"Normalize fancy spaces, quotes, and dashes","parameters":["self","text: str"],"return_type":"str","test_file":"tests/unit/test_normalization.py","test_description":"Tests conversion of fancy spaces to normal spaces","field_attributes":{"return_value":{"type":"str","constraint":"valid string","description":"str result"},"text":{"type":"str","constraint":"non-empty string","description":"Parameter text"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["re"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2236049175262451,"execution_count":1,"average_duration":1.2236049175262451,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TextNormalizer._normalize_unicode","module":"src.compareblocks.normalize.textnorm","class":"TextNormalizer","description":"Apply Unicode normalization (NFC by default)","parameters":["self","text: str"],"return_type":"str","test_file":"tests/unit/test_normalization.py","test_description":"Tests NFC Unicode normalization with real text scenarios","field_attributes":{"return_value":{"type":"str","constraint":"valid string","description":"str result"},"text":{"type":"str","constraint":"non-empty string","description":"Parameter text"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["unicodedata"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2236049175262451,"execution_count":1,"average_duration":1.2236049175262451,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TextNormalizer._normalize_whitespace","module":"src.compareblocks.normalize.textnorm","class":"TextNormalizer","description":"Normalize whitespace while preserving intentional formatting","parameters":["self","text: str"],"return_type":"str","test_file":"tests/unit/test_normalization.py","test_description":"Tests collapsing of multiple spaces and line break preservation","field_attributes":{"return_value":{"type":"str","constraint":"valid string","description":"str result"},"text":{"type":"str","constraint":"non-empty string","description":"Parameter text"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["re"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2236049175262451,"execution_count":1,"average_duration":1.2236049175262451,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TextNormalizer.get_normalization_stats","module":"src.compareblocks.normalize.textnorm","class":"TextNormalizer","description":"Get statistics about the normalization process","parameters":["self","original: str","normalized: str"],"return_type":"Dict[str, any]","test_file":"tests/unit/test_normalization.py","test_description":"Tests normalization statistics generation","field_attributes":{"return_value":{"type":"Dict[str, any]","constraint":"valid dictionary","description":"Retrieved dict[str, any] value"},"original":{"type":"str","constraint":"non-empty string","description":"Parameter original"},"normalized":{"type":"str","constraint":"non-empty string","description":"Parameter normalized"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["unicodedata","re"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2236049175262451,"execution_count":1,"average_duration":1.2236049175262451,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TextNormalizer.normalize_text","module":"src.compareblocks.normalize.textnorm","class":"TextNormalizer","description":"Apply complete text normalization pipeline","parameters":["self","text: str"],"return_type":"str","test_file":"tests/unit/test_normalization.py","test_description":"Tests complete normalization pipeline with realistic PDF text","field_attributes":{"text":{"type":"str","constraint":"non-empty string","description":"Parameter text"},"return_value":{"type":"str","constraint":"valid string","description":"str result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["unicodedata","re"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2236049175262451,"execution_count":1,"average_duration":1.2236049175262451,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TextParser.get_format_type","module":"compareblocks.association.parsers","class":"TextParser","description":"Function description","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_parsers.py","test_description":"Tests TextParser.get_format_type functionality","field_attributes":{"return_value":{"type":"str","constraint":"non-empty string","description":"Retrieved str value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\association\\parsers.py","line_number":400,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846378326416016,"execution_count":1,"average_duration":0.8846378326416016,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TextParser.parse","module":"compareblocks.association.parsers","class":"TextParser","description":"Parse plain text content.","parameters":["self","content","file_path"],"return_type":"ParsedContent","test_file":"tests/unit/test_parsers.py","test_description":"Tests TextParser.parse functionality","field_attributes":{"content":{"type":"Any","constraint":"valid input","description":"Parameter content"},"file_path":{"type":"Any","constraint":"valid input","description":"Parameter file_path"},"return_value":{"type":"ParsedContent","constraint":"valid return value","description":"ParsedContent result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\association\\parsers.py","line_number":356,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846378326416016,"execution_count":1,"average_duration":0.8846378326416016,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TokenLevelMerger.__init__","module":"src.compareblocks.consensus.merge","class":"TokenLevelMerger","description":"Initialize the token-level merger.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_consensus_merge.py","test_description":"Tests __init__ functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0672316551208496,"execution_count":1,"average_duration":1.0672316551208496,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TokenLevelMerger.get_merge_preview","module":"src.compareblocks.consensus.merge","class":"TokenLevelMerger","description":"Get a preview of what merging would produce without full processing.","parameters":["self","variations","max_differences"],"return_type":"Any","test_file":"tests/unit/test_consensus_merge.py","test_description":"Tests get_merge_preview functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"max_differences":{"type":"Any","constraint":"valid input","description":"Parameter max_differences"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0672316551208496,"execution_count":1,"average_duration":1.0672316551208496,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TokenLevelMerger.merge_variations","module":"src.compareblocks.consensus.merge","class":"TokenLevelMerger","description":"Merge multiple text variations using specified strategy.","parameters":["self","variations","variation_qualities","strategy"],"return_type":"Any","test_file":"tests/unit/test_consensus_merge.py","test_description":"Tests merge_variations functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"variation_qualities":{"type":"Any","constraint":"valid input","description":"Parameter variation_qualities"},"strategy":{"type":"Any","constraint":"valid input","description":"Parameter strategy"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0672316551208496,"execution_count":1,"average_duration":1.0672316551208496,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TokenLevelMerger.merge_with_quality_weights","module":"src.compareblocks.consensus.merge","class":"TokenLevelMerger","description":"Merge variations using their quality scores as weights.","parameters":["self","variations"],"return_type":"Any","test_file":"tests/unit/test_consensus_merge.py","test_description":"Tests merge_with_quality_weights functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0672316551208496,"execution_count":1,"average_duration":1.0672316551208496,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TokenPreservingNormalizer.__init__","module":"src.compareblocks.normalize.textnorm","class":"TokenPreservingNormalizer","description":"Initialize with preservation-focused configuration","parameters":["self","config: Optional[NormalizationConfig] = None"],"return_type":"None","test_file":"tests/unit/test_normalization.py","test_description":"Tests initialization of token-preserving normalizer","field_attributes":{"config":{"type":"Optional[NormalizationConfig]","constraint":"valid input","description":"Parameter config","default":"None"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["unicodedata","re"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2236049175262451,"execution_count":1,"average_duration":1.2236049175262451,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TokenPreservingNormalizer._protect_structural_elements","module":"src.compareblocks.normalize.textnorm","class":"TokenPreservingNormalizer","description":"Protect structural elements during normalization","parameters":["self","text: str"],"return_type":"str","test_file":"tests/unit/test_normalization.py","test_description":"Tests protection of structural elements during normalization","field_attributes":{"return_value":{"type":"str","constraint":"valid string","description":"str result"},"text":{"type":"str","constraint":"non-empty string","description":"Parameter text"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["re"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2236049175262451,"execution_count":1,"average_duration":1.2236049175262451,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TokenPreservingNormalizer._restore_structural_elements","module":"src.compareblocks.normalize.textnorm","class":"TokenPreservingNormalizer","description":"Restore protected structural elements","parameters":["self","text: str"],"return_type":"str","test_file":"tests/unit/test_normalization.py","test_description":"Tests restoration of protected structural elements","field_attributes":{"return_value":{"type":"str","constraint":"valid string","description":"str result"},"text":{"type":"str","constraint":"non-empty string","description":"Parameter text"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["unicodedata","re"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2236049175262451,"execution_count":1,"average_duration":1.2236049175262451,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"TokenPreservingNormalizer.normalize_preserving_structure","module":"src.compareblocks.normalize.textnorm","class":"TokenPreservingNormalizer","description":"Normalize text while preserving document structure","parameters":["self","text: str"],"return_type":"str","test_file":"tests/unit/test_normalization.py","test_description":"Tests structure-preserving normalization functionality","field_attributes":{"return_value":{"type":"str","constraint":"valid string","description":"str result"},"text":{"type":"str","constraint":"non-empty string","description":"Parameter text"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["re"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2236049175262451,"execution_count":1,"average_duration":1.2236049175262451,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ValidationException.__init__","module":"src.compareblocks.io.loader","class":"ValidationException","description":"Initialize validation exception with message, line number, and record context","parameters":["self","message: str","line_number: Optional[int] = None","record: Optional[Dict[str, Any]] = None"],"return_type":"None","test_file":"tests/unit/test_io_validation.py","test_description":"Tests validation exception initialization with various error contexts","field_attributes":{"message":{"type":"str","constraint":"non-empty string","description":"Parameter message"},"line_number":{"type":"Optional[int]","constraint":">= 0","description":"Parameter line_number","default":"None"},"record":{"type":"Optional[Dict[str, Any]]","constraint":"non-empty string","description":"Parameter record","default":"None"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ValidationException._format_message","module":"src.compareblocks.io.loader","class":"ValidationException","description":"Format the error message with context","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_io_validation.py","test_description":"Tests error message formatting with line number context","field_attributes":{"return_value":{"type":"str","constraint":"valid string","description":"str result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ValidationWorker.__init__","module":"compareblocks.gui.import_dialog","class":"ValidationWorker","description":"Function description","parameters":["self","file_path"],"return_type":"Any","test_file":"tests/unit/test_import_dialog.py","test_description":"Tests ValidationWorker.__init__ functionality","field_attributes":{"file_path":{"type":"Any","constraint":"valid input","description":"Parameter file_path"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\import_dialog.py","line_number":30,"test_functions":[],"test_count":0}
{"function_name":"ValidationWorker.run","module":"compareblocks.gui.import_dialog","class":"ValidationWorker","description":"Run validation in background thread.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_import_dialog.py","test_description":"Tests ValidationWorker.run functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\import_dialog.py","line_number":35,"test_functions":[],"test_count":0}
{"function_name":"VariationBlock.__post_init__","module":"src.compareblocks.mapping.variation_block","class":"VariationBlock","description":"Validate variation block data ensuring page numbers and confidence values are valid","parameters":["self"],"return_type":"None","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests validation of variation block data with various valid and invalid inputs","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Raises ValueError if validation fails"],"dependencies":["dataclasses"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VariationBlock.add_child","module":"src.compareblocks.mapping.variation_block","class":"VariationBlock","description":"Add a child variation to this block","parameters":["self","child_variation_id: str"],"return_type":"None","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests adding child variations to parent blocks","field_attributes":{"child_variation_id":{"type":"str","constraint":"non-empty string","description":"Parameter child_variation_id"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VariationBlock.get_metadata_value","module":"src.compareblocks.mapping.variation_block","class":"VariationBlock","description":"Get a value from original metadata","parameters":["self","key: str","default: Any = None"],"return_type":"Any","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests retrieval of metadata values with default fallbacks","field_attributes":{"key":{"type":"str","constraint":"non-empty string","description":"Parameter key"},"default":{"type":"Any","constraint":"valid input","description":"Parameter default","default":"None"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VariationBlock.is_child_variation","module":"src.compareblocks.mapping.variation_block","class":"VariationBlock","description":"Check if this is a child variation block","parameters":["self"],"return_type":"bool","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests identification of child variation blocks","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"bool result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VariationBlock.is_mapped","module":"src.compareblocks.mapping.variation_block","class":"VariationBlock","description":"Check if this variation is mapped to a seed block","parameters":["self"],"return_type":"bool","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests mapping status check for various variation block types","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"bool result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VariationBlock.is_orphan","module":"src.compareblocks.mapping.variation_block","class":"VariationBlock","description":"Check if this is an orphaned (unmatched) variation","parameters":["self"],"return_type":"bool","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests identification of orphaned variation blocks","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"bool result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VariationBlockManager.__init__","module":"src.compareblocks.mapping.variation_block","class":"VariationBlockManager","description":"Initialize the variation block manager with IoU matcher configuration","parameters":["self","match_config: Optional[MatchConfig] = None"],"return_type":"None","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests initialization of variation block manager with various configurations","field_attributes":{"match_config":{"type":"Optional[MatchConfig]","constraint":"valid input","description":"Parameter match_config","default":"None"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VariationBlockManager._generate_variation_id","module":"src.compareblocks.mapping.variation_block","class":"VariationBlockManager","description":"Generate a unique variation ID","parameters":["self"],"return_type":"str","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests generation of unique variation identifiers","field_attributes":{"return_value":{"type":"str","constraint":"valid string","description":"str result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VariationBlockManager.add_seed_blocks","module":"src.compareblocks.mapping.variation_block","class":"VariationBlockManager","description":"Add seed blocks to the manager","parameters":["self","seed_blocks: List[SeedBlock]"],"return_type":"None","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests addition of seed blocks to variation manager","field_attributes":{"seed_blocks":{"type":"List[SeedBlock]","constraint":"valid list","description":"Parameter seed_blocks"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VariationBlockManager.create_overlapping_regions","module":"src.compareblocks.mapping.variation_block","class":"VariationBlockManager","description":"Create child variation blocks for overlapping regions","parameters":["self","variations: List[VariationBlock]"],"return_type":"List[VariationBlock]","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests creation of child variations for overlapping regions between variations","field_attributes":{"return_value":{"type":"List[VariationBlock]","constraint":"valid list","description":"Created or built object"},"variations":{"type":"List[VariationBlock]","constraint":"valid list","description":"Parameter variations"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VariationBlockManager.get_child_variations","module":"src.compareblocks.mapping.variation_block","class":"VariationBlockManager","description":"Get all child variations for a parent block","parameters":["self","parent_block_id: str"],"return_type":"List[VariationBlock]","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests retrieval of child variations for parent blocks","field_attributes":{"return_value":{"type":"List[VariationBlock]","constraint":"valid list","description":"Extracted or retrieved items"},"parent_block_id":{"type":"str","constraint":"non-empty string","description":"Parameter parent_block_id"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VariationBlockManager.get_mapping_statistics","module":"src.compareblocks.mapping.variation_block","class":"VariationBlockManager","description":"Get statistics about variation mapping","parameters":["self"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests generation of comprehensive mapping statistics including rates and engine distribution","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Retrieved dict[str, any] value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VariationBlockManager.get_orphan_variations","module":"src.compareblocks.mapping.variation_block","class":"VariationBlockManager","description":"Get all orphaned (unmatched) variations","parameters":["self"],"return_type":"List[VariationBlock]","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests retrieval of orphaned variations that couldn't be mapped","field_attributes":{"return_value":{"type":"List[VariationBlock]","constraint":"valid list","description":"Extracted or retrieved items"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VariationBlockManager.get_variations_by_engine","module":"src.compareblocks.mapping.variation_block","class":"VariationBlockManager","description":"Get all variations from a specific engine","parameters":["self","engine: str"],"return_type":"List[VariationBlock]","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests retrieval of variations filtered by extraction engine","field_attributes":{"return_value":{"type":"List[VariationBlock]","constraint":"valid list","description":"Extracted or retrieved items"},"engine":{"type":"str","constraint":"non-empty string","description":"Parameter engine"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VariationBlockManager.get_variations_by_page","module":"src.compareblocks.mapping.variation_block","class":"VariationBlockManager","description":"Get all variations for a specific page","parameters":["self","page: int"],"return_type":"List[VariationBlock]","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests retrieval of variations filtered by page number","field_attributes":{"return_value":{"type":"List[VariationBlock]","constraint":"valid list","description":"Extracted or retrieved items"},"page":{"type":"int","constraint":">= 0","description":"Parameter page"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents"],"dependencies":["fitz","PyMuPDF"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VariationBlockManager.get_variations_for_block","module":"src.compareblocks.mapping.variation_block","class":"VariationBlockManager","description":"Get all variations mapped to a specific seed block","parameters":["self","block_id: str"],"return_type":"List[VariationBlock]","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests retrieval of variations mapped to specific seed blocks","field_attributes":{"return_value":{"type":"List[VariationBlock]","constraint":"valid list","description":"Extracted or retrieved items"},"block_id":{"type":"str","constraint":"non-empty string","description":"Parameter block_id"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VariationBlockManager.map_external_variation","module":"src.compareblocks.mapping.variation_block","class":"VariationBlockManager","description":"Map an external variation to seed blocks and create variation block","parameters":["self","external_var: ExternalVariation"],"return_type":"VariationBlock","test_file":"tests/unit/test_mapping_iou.py","test_description":"Tests mapping of external variations to seed blocks with various match qualities","field_attributes":{"external_var":{"type":"ExternalVariation","constraint":"valid input","description":"Parameter external_var"},"return_value":{"type":"VariationBlock","constraint":"valid return value","description":"VariationBlock result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1241357326507568,"execution_count":1,"average_duration":1.1241357326507568,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VariationScore.to_dict","module":"src.compareblocks.consensus.score","class":"VariationScore","description":"Convert to dictionary format.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests to_dict functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VariationsPanel.__init__","module":"compareblocks.gui.variations_panel","class":"VariationsPanel","description":"Function description","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_variations_panel.py","test_description":"Tests VariationsPanel.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\gui\\variations_panel.py","line_number":230,"test_functions":[],"test_count":0}
{"function_name":"VariationsPanel.select_variation","module":"compareblocks.gui.variations_panel","class":"VariationsPanel","description":"Select a specific variation for detailed view.","parameters":["self","variation_id"],"return_type":"Any","test_file":"tests/unit/test_variations_panel.py","test_description":"Tests VariationsPanel.select_variation functionality","field_attributes":{"variation_id":{"type":"Any","constraint":"valid input","description":"Parameter variation_id"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\gui\\variations_panel.py","line_number":335,"test_functions":[],"test_count":0}
{"function_name":"VariationsPanel.set_block_variations","module":"compareblocks.gui.variations_panel","class":"VariationsPanel","description":"Set the variations for a specific block.","parameters":["self","block_id","variations"],"return_type":"Any","test_file":"tests/unit/test_variations_panel.py","test_description":"Tests VariationsPanel.set_block_variations functionality","field_attributes":{"block_id":{"type":"Any","constraint":"valid input","description":"Parameter block_id"},"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\gui\\variations_panel.py","line_number":316,"test_functions":[],"test_count":0}
{"function_name":"VariationsPanel.set_consensus_variation","module":"compareblocks.gui.variations_panel","class":"VariationsPanel","description":"Set the consensus variation.","parameters":["self","variation_id"],"return_type":"Any","test_file":"tests/unit/test_variations_panel.py","test_description":"Tests VariationsPanel.set_consensus_variation functionality","field_attributes":{"variation_id":{"type":"Any","constraint":"valid input","description":"Parameter variation_id"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\gui\\variations_panel.py","line_number":356,"test_functions":[],"test_count":0}
{"function_name":"VariationsPanel.set_controls_enabled","module":"compareblocks.gui.variations_panel","class":"VariationsPanel","description":"Enable or disable panel controls.","parameters":["self","enabled"],"return_type":"Any","test_file":"tests/unit/test_variations_panel.py","test_description":"Tests VariationsPanel.set_controls_enabled functionality","field_attributes":{"enabled":{"type":"Any","constraint":"valid input","description":"Parameter enabled"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\gui\\variations_panel.py","line_number":490,"test_functions":[],"test_count":0}
{"function_name":"VariationsPanel.setup_ui","module":"compareblocks.gui.variations_panel","class":"VariationsPanel","description":"Setup the variations panel UI.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_variations_panel.py","test_description":"Tests VariationsPanel.setup_ui functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\gui\\variations_panel.py","line_number":239,"test_functions":[],"test_count":0}
{"function_name":"VariationsTable.__init__","module":"compareblocks.gui.variations_panel","class":"VariationsTable","description":"Function description","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_variations_panel.py","test_description":"Tests VariationsTable.__init__ functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Initializes object state"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\gui\\variations_panel.py","line_number":116,"test_functions":[],"test_count":0}
{"function_name":"VariationsTable.highlight_consensus","module":"compareblocks.gui.variations_panel","class":"VariationsTable","description":"Highlight the consensus variation.","parameters":["self","variation_id"],"return_type":"Any","test_file":"tests/unit/test_variations_panel.py","test_description":"Tests VariationsTable.highlight_consensus functionality","field_attributes":{"variation_id":{"type":"Any","constraint":"valid input","description":"Parameter variation_id"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\gui\\variations_panel.py","line_number":214,"test_functions":[],"test_count":0}
{"function_name":"VariationsTable.set_variations","module":"compareblocks.gui.variations_panel","class":"VariationsTable","description":"Set the variations to display.","parameters":["self","variations"],"return_type":"Any","test_file":"tests/unit/test_variations_panel.py","test_description":"Tests VariationsTable.set_variations functionality","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\gui\\variations_panel.py","line_number":152,"test_functions":[],"test_count":0}
{"function_name":"VariationsTable.setup_table","module":"compareblocks.gui.variations_panel","class":"VariationsTable","description":"Setup the variations table.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_variations_panel.py","test_description":"Tests VariationsTable.setup_table functionality","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\gui\\variations_panel.py","line_number":121,"test_functions":[],"test_count":0}
{"function_name":"VisualOCRTestingWidget.add_custom_feed","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Add a custom input feed with enhanced source selection.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.add_custom_feed functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.apply_configuration","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Apply current configuration to the testing engine.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.apply_configuration functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.browse_feed_source","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Browse for feed source based on type.","parameters":["self","feed_type: Any","source_edit: Any"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.browse_feed_source functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.browse_json_files","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Browse and select JSON files with enhanced filtering.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.browse_json_files functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.browse_source_docs_for_feed","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Browse Source_docs directory for feed source.","parameters":["self","source_edit: Any"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.browse_source_docs_for_feed functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.browse_source_docs_json","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Browse JSON files specifically in Source_docs directory with recursive selection.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.browse_source_docs_json functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.closeEvent","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Handle widget close event.","parameters":["self","event: Any"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.closeEvent functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.create_configuration_tab","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Create configuration management tab.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.create_configuration_tab functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.create_debug_images_tab","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Create debug images tab.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.create_debug_images_tab functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.create_engine_testing_tab","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Create engine testing tab.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.create_engine_testing_tab functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.create_feeds_tab","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Create input feeds monitoring tab.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.create_feeds_tab functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.create_history_tab","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Create test results history tab.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.create_history_tab functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.create_optimization_tab","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Create OCR optimization testing tab.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.create_optimization_tab functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.discover_and_enable_feeds","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Discover and enable Source_docs feeds through GUI selection.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.discover_and_enable_feeds functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.extract_debug_images","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Extract debug images.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.extract_debug_images functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.load_configuration","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Load configuration from selected source.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.load_configuration functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.load_json_file","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Load and display JSON file content in the configuration editor with comprehensive validation.","parameters":["self","file_path: Any"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.load_json_file functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.load_test_history","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Load test results history.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.load_test_history functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.open_debug_report","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Open the HTML debug report.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.open_debug_report functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.populate_json_tree","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Populate the JSON tree with files from Source_docs directory.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.populate_json_tree functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.preview_json_file","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Preview selected JSON file content.","parameters":["self","item: Any","column: Any"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.preview_json_file functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.refresh_feeds","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Refresh all input feeds.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.refresh_feeds functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.run_ocr_optimization","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Run OCR parameter optimization.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.run_ocr_optimization functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.save_configuration","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Save current configuration.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.save_configuration functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.setup_ui","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Setup the visual testing UI with input feeds.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.setup_ui functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.test_improved_engine","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Test the improved OCR engine.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.test_improved_engine functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.update_feed_status","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Update the feed status display.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.update_feed_status functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"VisualOCRTestingWidget.update_source_options","module":"visual_ocr_testing_tool","class":"VisualOCRTestingWidget","description":"Update source options based on feed type.","parameters":["self","type_combo: Any","source_layout: Any"],"return_type":"Any","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests VisualOCRTestingWidget.VisualOCRTestingWidget.update_source_options functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"align_content_to_blocks","module":"compareblocks.association.alignment","class":null,"description":"Convenience function for content alignment.","parameters":["content","blocks","threshold"],"return_type":"List[AlignmentResult]","test_file":"tests/unit/test_alignment.py","test_description":"Tests align_content_to_blocks functionality","field_attributes":{"content":{"type":"Any","constraint":"valid input","description":"Parameter content"},"blocks":{"type":"Any","constraint":"valid input","description":"Parameter blocks"},"threshold":{"type":"Any","constraint":"valid input","description":"Parameter threshold"},"return_value":{"type":"List[AlignmentResult]","constraint":"valid list","description":"List[AlignmentResult] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\association\\alignment.py","line_number":56,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8660709857940674,"execution_count":1,"average_duration":0.8660709857940674,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"analyze_engine_performance","module":"compareblocks.analytics.engine_analytics","class":null,"description":"Convenience function to analyze engine performance from various data sources.","parameters":["engine_results","consensus_decisions","variation_scores"],"return_type":"Dict[str, EnginePerformanceMetrics]","test_file":"tests/unit/test_engine_analytics.py","test_description":"Tests analyze_engine_performance functionality","field_attributes":{"engine_results":{"type":"Any","constraint":"valid input","description":"Parameter engine_results"},"consensus_decisions":{"type":"Any","constraint":"valid input","description":"Parameter consensus_decisions"},"variation_scores":{"type":"Any","constraint":"valid input","description":"Parameter variation_scores"},"return_value":{"type":"Dict[str, EnginePerformanceMetrics]","constraint":"valid dictionary","description":"Dict[str, EnginePerformanceMetrics] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\engine_analytics.py","line_number":538,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8958520889282227,"execution_count":1,"average_duration":0.8958520889282227,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"analyze_project","module":"analyze_missing_files_and_functions","class":null,"description":"Analyze the entire project for missing files and functions.","parameters":[],"return_type":"Any","test_file":"tests/unit/test_analyze_missing_files_and_functions.py","test_description":"Tests analyze_project functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8891410827636719,"execution_count":1,"average_duration":0.8891410827636719,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"analyze_project_coverage","module":"functions.analyze_project_test_coverage","class":null,"description":"Analyze the entire project for function coverage","parameters":[],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_project_analysis.py","test_description":"Tests comprehensive project test coverage analysis","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Complete coverage analysis results"}},"side_effects":["File I/O operations","Creates or modifies files","Logging operations"],"dependencies":["ast","pathlib","json"],"test_functions":["TestAnalyzeProjectCoverage.test_analyze_project_coverage_success"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1264936923980713,"execution_count":1,"average_duration":1.1264936923980713,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"analyze_python_file","module":"analyze_missing_files_and_functions","class":null,"description":"Analyze a Python file and extract all functions and classes.","parameters":["file_path: Any"],"return_type":"Any","test_file":"tests/unit/test_analyze_missing_files_and_functions.py","test_description":"Tests analyze_python_file functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":["TestAnalyzePythonFile.test_analyze_python_file_success"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8891410827636719,"execution_count":1,"average_duration":0.8891410827636719,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"analyze_python_file","module":"src.functions.analyze_project_test_coverage","class":null,"description":"Analyze a Python file for functions and classes.","parameters":["file_path: Any"],"return_type":"Any","test_file":"tests/unit/test_functions_analyze_project_test_coverage.py","test_description":"Tests analyze_python_file functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":["TestAnalyzePythonFile.test_analyze_python_file_success"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9731612205505371,"execution_count":1,"average_duration":0.9731612205505371,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"analyze_test_file","module":"build_test_catalog","class":null,"description":"Analyze a test file and extract test function information.","parameters":["file_path: Any"],"return_type":"Any","test_file":"tests/unit/test_build_test_catalog.py","test_description":"Tests analyze_test_file functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":["TestEngineValidator.test_analyze_test_file"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.862572431564331,"execution_count":1,"average_duration":0.862572431564331,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"batch_consensus_decisions","module":"src.compareblocks.consensus.policy","class":null,"description":"Make consensus decisions for multiple batches of variations.","parameters":["variation_batches","thresholds"],"return_type":"Any","test_file":"tests/unit/test_consensus_policy.py","test_description":"Tests batch_consensus_decisions functionality with real consensus data","field_attributes":{"variation_batches":{"type":"Any","constraint":"valid input","description":"Parameter variation_batches"},"thresholds":{"type":"Any","constraint":"valid input","description":"Parameter thresholds"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.110443353652954,"execution_count":1,"average_duration":1.110443353652954,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"batch_decisions","module":"src.compareblocks.consensus.policy","class":null,"description":"Make decisions for multiple batches of variations.","parameters":["self","variation_batches","context_texts"],"return_type":"Any","test_file":"tests/unit/test_consensus_policy.py","test_description":"Tests batch_decisions functionality with real consensus data","field_attributes":{"variation_batches":{"type":"Any","constraint":"valid input","description":"Parameter variation_batches"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":["TestBatchDecisions.test_batch_decisions"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.110443353652954,"execution_count":1,"average_duration":1.110443353652954,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"build_test_catalog","module":"build_test_catalog","class":null,"description":"Build the complete test catalog.","parameters":[],"return_type":"Any","test_file":"tests/unit/test_build_test_catalog.py","test_description":"Tests build_test_catalog functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.862572431564331,"execution_count":1,"average_duration":0.862572431564331,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"calculate_block_consistency_for_json","module":"src.compareblocks.features.consistency","class":null,"description":"Calculate consistency metrics for a block formatted for JSON output.","parameters":["block_id: Any","variations: Any","override_terms: Any","normalize_for_comparison: Any"],"return_type":"Any","test_file":"tests/integration/test_consistency.py","test_description":"Tests calculate_block_consistency_for_json functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"calculate_char_per_line_ratio","module":"src.compareblocks.features.anomaly","class":null,"description":"Calculate average characters per line.","parameters":["self","text"],"return_type":"float","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests calculate_char_per_line_ratio functionality with real PDF data","field_attributes":{"return_value":{"type":"float","constraint":"0.0 <= value <= 1.0","description":"Calculated float result"},"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":["TestAnomalyDetector.test_calculate_char_per_line_ratio"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"calculate_character_alignment_score","module":"src.compareblocks.consensus.merge","class":null,"description":"Calculate character-level alignment score between two texts.","parameters":["text1","text2"],"return_type":"Any","test_file":"tests/unit/test_consensus_merge.py","test_description":"Tests calculate_character_alignment_score functionality with real consensus data","field_attributes":{"text1":{"type":"Any","constraint":"valid input","description":"Parameter text1"},"text2":{"type":"Any","constraint":"valid input","description":"Parameter text2"},"return_value":{"type":"Any","constraint":"valid return value","description":"Calculated any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0672316551208496,"execution_count":1,"average_duration":1.0672316551208496,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"calculate_digit_ratio","module":"src.compareblocks.features.anomaly","class":null,"description":"Calculate ratio of digit characters to total characters.","parameters":["self","text"],"return_type":"float","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests calculate_digit_ratio functionality with real PDF data","field_attributes":{"return_value":{"type":"float","constraint":"0.0 <= value <= 1.0","description":"Calculated float result"},"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":["TestAnomalyDetector.test_calculate_digit_ratio"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"calculate_dynamic_consistency_percentage","module":"src.compareblocks.features.consistency","class":null,"description":"Calculate dynamic consistency percentages across multiple blocks.","parameters":["consistencies: Any"],"return_type":"Any","test_file":"tests/integration/test_consistency.py","test_description":"Tests calculate_dynamic_consistency_percentage functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":["TestConvenienceFunctions.test_calculate_dynamic_consistency_percentage"],"test_count":1}
{"function_name":"calculate_entropy","module":"src.compareblocks.features.anomaly","class":null,"description":"Calculate Shannon entropy of text.","parameters":["self","text"],"return_type":"float","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests calculate_entropy functionality with real PDF data","field_attributes":{"return_value":{"type":"float","constraint":">= 0.0","description":"Calculated float result"},"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"calculate_median_length_consistency","module":"src.compareblocks.consensus.score","class":null,"description":"Calculate length consistency score based on median variation length.","parameters":["variations"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests calculate_median_length_consistency functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Calculated any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"calculate_merge_confidence","module":"src.compareblocks.consensus.merge","class":null,"description":"Calculate confidence score for a merge result.","parameters":["texts","merged_text"],"return_type":"Any","test_file":"tests/unit/test_consensus_merge.py","test_description":"Tests calculate_merge_confidence functionality with real consensus data","field_attributes":{"texts":{"type":"Any","constraint":"valid input","description":"Parameter texts"},"merged_text":{"type":"Any","constraint":"valid input","description":"Parameter merged_text"},"return_value":{"type":"Any","constraint":"valid return value","description":"Calculated any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0672316551208496,"execution_count":1,"average_duration":1.0672316551208496,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"calculate_orientation_penalty","module":"src.compareblocks.consensus.score","class":null,"description":"Calculate orientation penalty for a variation.","parameters":["variation","expected_orientation"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests calculate_orientation_penalty functionality with real consensus data","field_attributes":{"variation":{"type":"Any","constraint":"valid input","description":"Parameter variation"},"expected_orientation":{"type":"Any","constraint":"valid input","description":"Parameter expected_orientation"},"return_value":{"type":"Any","constraint":"valid return value","description":"Calculated any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"calculate_repetition_score","module":"src.compareblocks.features.anomaly","class":null,"description":"Calculate repetition score based on repeated patterns.","parameters":["self","text"],"return_type":"float","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests calculate_repetition_score functionality with real PDF data","field_attributes":{"return_value":{"type":"float","constraint":"0.0 <= value <= 1.0","description":"Normalized score or IoU value"},"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":["TestAnomalyDetector.test_calculate_repetition_score"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"calculate_space_ratio","module":"src.compareblocks.features.anomaly","class":null,"description":"Calculate ratio of whitespace characters to total characters.","parameters":["self","text"],"return_type":"float","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests calculate_space_ratio functionality with real PDF data","field_attributes":{"return_value":{"type":"float","constraint":"0.0 <= value <= 1.0","description":"Calculated float result"},"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":["TestAnomalyDetector.test_calculate_space_ratio"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"calculate_special_char_ratio","module":"src.compareblocks.features.anomaly","class":null,"description":"Calculate ratio of special characters (non-alphanumeric, non-space).","parameters":["self","text"],"return_type":"float","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests calculate_special_char_ratio functionality with real PDF data","field_attributes":{"return_value":{"type":"float","constraint":"0.0 <= value <= 1.0","description":"Calculated float result"},"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":["TestAnomalyDetector.test_calculate_special_char_ratio"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"calculate_text_similarity","module":"src.compareblocks.consensus.policy","class":null,"description":"Calculate similarity between two text strings.","parameters":["text1","text2"],"return_type":"Any","test_file":"tests/unit/test_consensus_policy.py","test_description":"Tests calculate_text_similarity functionality with real consensus data","field_attributes":{"text1":{"type":"Any","constraint":"valid input","description":"Parameter text1"},"text2":{"type":"Any","constraint":"valid input","description":"Parameter text2"},"return_value":{"type":"Any","constraint":"valid return value","description":"Calculated any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.110443353652954,"execution_count":1,"average_duration":1.110443353652954,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"check_close_competition","module":"src.compareblocks.consensus.guard","class":null,"description":"Check if multiple variations have very close scores (close competition).","parameters":["scores","threshold"],"return_type":"Any","test_file":"tests/unit/test_consensus_guard.py","test_description":"Tests check_close_competition functionality with real consensus data","field_attributes":{"scores":{"type":"Any","constraint":"valid input","description":"Parameter scores"},"threshold":{"type":"Any","constraint":"valid input","description":"Parameter threshold"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":0.8132691383361816,"execution_count":1,"average_duration":0.8132691383361816,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"check_dependencies","module":"validate_setup","class":null,"description":"Check if key dependencies are installed","parameters":[],"return_type":"bool","test_file":"tests/unit/test_setup_validation.py","test_description":"Tests installation status of key project dependencies","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"True if all dependencies are installed"}},"side_effects":["Logging operations"],"dependencies":["importlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":2.583890438079834,"execution_count":1,"average_duration":2.583890438079834,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"check_immutable_runners","module":"validate_setup","class":null,"description":"Check if immutable runner files exist and work","parameters":[],"return_type":"bool","test_file":"tests/unit/test_setup_validation.py","test_description":"Tests existence and functionality of immutable runner files","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"True if runner files exist and work"}},"side_effects":["File I/O operations","Logging operations"],"dependencies":["pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":2.583890438079834,"execution_count":1,"average_duration":2.583890438079834,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"check_package_structure","module":"validate_setup","class":null,"description":"Check if package structure is correct","parameters":[],"return_type":"bool","test_file":"tests/unit/test_setup_validation.py","test_description":"Tests project directory structure validation","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"True if package structure is correct"}},"side_effects":["File I/O operations","Logging operations"],"dependencies":["pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":2.583890438079834,"execution_count":1,"average_duration":2.583890438079834,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"check_project_files","module":"validate_setup","class":null,"description":"Check if essential project files exist","parameters":[],"return_type":"bool","test_file":"tests/unit/test_setup_validation.py","test_description":"Tests existence of essential project configuration files","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"True if all essential files exist"}},"side_effects":["File I/O operations","Logging operations"],"dependencies":["pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":2.583890438079834,"execution_count":1,"average_duration":2.583890438079834,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"check_python_version","module":"validate_setup","class":null,"description":"Check Python version requirement","parameters":[],"return_type":"bool","test_file":"tests/unit/test_setup_validation.py","test_description":"Tests Python version requirement validation","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"True if Python version meets requirements"}},"side_effects":["Logging operations"],"dependencies":["sys"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":2.583890438079834,"execution_count":1,"average_duration":2.583890438079834,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"check_virtual_environment","module":"validate_setup","class":null,"description":"Check if virtual environment exists and is activated","parameters":[],"return_type":"bool","test_file":"tests/unit/test_setup_validation.py","test_description":"Tests virtual environment detection and activation status","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"True if virtual environment is properly set up"}},"side_effects":["File I/O operations","Logging operations"],"dependencies":["pathlib","sys"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":2.583890438079834,"execution_count":1,"average_duration":2.583890438079834,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"compare_context_relevance","module":"src.compareblocks.features.context","class":null,"description":"Compare context relevance scores across variations.","parameters":["self","variations","context_texts"],"return_type":"Any","test_file":"tests/unit/test_features_context.py","test_description":"Tests compare_context_relevance functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":["TestContextSimilarityExtractor.test_compare_context_relevance"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2251174449920654,"execution_count":1,"average_duration":1.2251174449920654,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"compare_engine_performance","module":"compareblocks.testing.performance_tracker","class":null,"description":"Compare performance across engines for a function.","parameters":["engine_names","function_name"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_performance_tracker.py","test_description":"Tests compare_engine_performance functionality","field_attributes":{"engine_names":{"type":"Any","constraint":"valid input","description":"Parameter engine_names"},"function_name":{"type":"Any","constraint":"valid input","description":"Parameter function_name"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Dict[str, Any] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\performance_tracker.py","line_number":594,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846070766448975,"execution_count":1,"average_duration":0.8846070766448975,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"compare_language_fitness","module":"src.compareblocks.features.language","class":null,"description":"Compare language fitness scores across variations.","parameters":["self","variations"],"return_type":"Any","test_file":"tests/unit/test_features_language.py","test_description":"Tests compare_language_fitness functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":["TestLanguageFeatureExtractor.test_compare_language_fitness"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.128654956817627,"execution_count":1,"average_duration":1.128654956817627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"complete_processing_workflow","module":"src.compareblocks.config.file_manager","class":null,"description":"Complete the processing workflow by moving files from processing to final output","parameters":[],"return_type":"Dict[str, str]","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests convenience function for completing processing workflow","field_attributes":{"return_value":{"type":"Dict[str, str]","constraint":"valid dictionary","description":"Processed dict[str, str] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Processing state changes"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"compute_consistency_score","module":"src.compareblocks.features.core","class":null,"description":"Compute length consistency scores for variations based on median length.","parameters":["self","variations"],"return_type":"Any","test_file":"tests/unit/test_features_lengths.py","test_description":"Tests compute_consistency_score functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Calculated any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":["TestCoreFeatureExtractor.test_compute_consistency_score"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.21600341796875,"execution_count":1,"average_duration":1.21600341796875,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"create_aggressive_config","module":"src.compareblocks.normalize.textnorm","class":null,"description":"Create aggressive normalization configuration for noisy OCR text","parameters":[],"return_type":"NormalizationConfig","test_file":"tests/unit/test_normalization.py","test_description":"Tests aggressive configuration for noisy OCR text","field_attributes":{"return_value":{"type":"NormalizationConfig","constraint":"valid return value","description":"Created or built object"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["NormalizationConfig"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2236049175262451,"execution_count":1,"average_duration":1.2236049175262451,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"create_conservative_policy_thresholds","module":"src.compareblocks.consensus.policy","class":null,"description":"Create conservative policy thresholds that favor manual review.","parameters":[],"return_type":"Any","test_file":"tests/unit/test_consensus_policy.py","test_description":"Tests create_conservative_policy_thresholds functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Created or built object"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.110443353652954,"execution_count":1,"average_duration":1.110443353652954,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"create_conservative_scoring_weights","module":"src.compareblocks.consensus.score","class":null,"description":"Create conservative scoring weights that prioritize quality over speed.","parameters":[],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests create_conservative_scoring_weights functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Created or built object"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":["TestScoringWeights.test_create_conservative_scoring_weights"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"create_consistency_integration_manager","module":"src.compareblocks.features.consistency_integration","class":null,"description":"Create a new consistency integration manager with default settings.","parameters":[],"return_type":"Any","test_file":"tests/integration/test_consistency_integration.py","test_description":"Tests create_consistency_integration_manager functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"create_default_guard_thresholds","module":"src.compareblocks.consensus.guard","class":null,"description":"Create default guard thresholds for hallucination detection.","parameters":[],"return_type":"Any","test_file":"tests/unit/test_consensus_guard.py","test_description":"Tests create_default_guard_thresholds functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Created or built object"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":0.8132691383361816,"execution_count":1,"average_duration":0.8132691383361816,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"create_default_policy_thresholds","module":"src.compareblocks.consensus.policy","class":null,"description":"Create default policy thresholds for decision making.","parameters":[],"return_type":"Any","test_file":"tests/unit/test_consensus_policy.py","test_description":"Tests create_default_policy_thresholds functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Created or built object"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.110443353652954,"execution_count":1,"average_duration":1.110443353652954,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"create_default_scoring_thresholds","module":"src.compareblocks.consensus.score","class":null,"description":"Create default scoring thresholds for consensus evaluation.","parameters":[],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests create_default_scoring_thresholds functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Created or built object"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":["TestScoringThresholds.test_create_default_scoring_thresholds"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"create_default_scoring_weights","module":"src.compareblocks.consensus.score","class":null,"description":"Create default scoring weights for consensus evaluation.","parameters":[],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests create_default_scoring_weights functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Created or built object"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":["TestScoringWeights.test_create_default_scoring_weights"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"create_input_feed_config","module":"visual_ocr_testing_functions","class":null,"description":"Create an InputFeedConfig from a file path with automatic type detection and parameter optimization","parameters":[{"name":"name","type":"str","description":"Name for the feed"},{"name":"file_path","type":"str","description":"Path to the file or directory"},{"name":"feed_type","type":"Optional[str]","description":"Override automatic type detection","default":null}],"return_type":"InputFeedConfig","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests automatic type detection and parameter optimization for different file types","field_attributes":{"return_value":{"type":"InputFeedConfig","constraint":"valid feed configuration","description":"Configured input feed ready for use","calculation":"Auto-detects type from file extension and path, sets optimal refresh interval"},"return_value.refresh_interval":{"type":"int","constraint":">= 30","description":"Optimized refresh interval based on feed type","calculation":"json: 60s, file: 30s, api: 120s, database: 90s, code: 300s, mcp: 60s"},"return_value.parameters":{"type":"Dict[str, Any]","constraint":"type-specific parameters","description":"Auto-generated parameters based on file analysis"}},"side_effects":["File system access for type detection and JSON parsing"],"dependencies":["pathlib","json","visual_ocr_testing_tool.InputFeedConfig"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"create_input_feed_config","module":"functions.visual_ocr_testing_functions","class":null,"description":"Create an InputFeedConfig from a file path with automatic type detection","parameters":["name: str","file_path: str","feed_type: str = None"],"return_type":"InputFeedConfig","test_file":"tests/unit/test_visual_ocr_functions.py","test_description":"Tests creation of input feed configurations with automatic type detection","field_attributes":{"name":{"type":"str","constraint":"non-empty string","description":"Name for the feed"},"file_path":{"type":"str","constraint":"valid file path","description":"Path to the file or directory"},"feed_type":{"type":"str","constraint":"valid string","description":"Override automatic type detection","default":"None"},"return_value":{"type":"InputFeedConfig","constraint":"valid return value","description":"InputFeedConfig object ready for use"}},"side_effects":["File I/O operations"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0623822212219238,"execution_count":1,"average_duration":1.0623822212219238,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"create_merge_alignment","module":"src.compareblocks.consensus.merge","class":null,"description":"Create character-level alignment for multiple texts.","parameters":["texts"],"return_type":"Any","test_file":"tests/unit/test_consensus_merge.py","test_description":"Tests create_merge_alignment functionality with real consensus data","field_attributes":{"texts":{"type":"Any","constraint":"valid input","description":"Parameter texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Created or built object"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0672316551208496,"execution_count":1,"average_duration":1.0672316551208496,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"create_performance_dashboard","module":"compareblocks.analytics.dashboard","class":null,"description":"Convenience function to create a performance dashboard.","parameters":["metrics"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_dashboard.py","test_description":"Tests create_performance_dashboard functionality","field_attributes":{"metrics":{"type":"Any","constraint":"valid input","description":"Parameter metrics"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Created or built object"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\dashboard.py","line_number":543,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8501503467559814,"execution_count":3,"average_duration":2.2074271043141684,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"create_project_structure","module":"src.compareblocks.project.manager","class":null,"description":"Convenience function to create project structure.","parameters":["pdf_path: Any"],"return_type":"Any","test_file":"tests/unit/test_manager.py","test_description":"Tests create_project_structure functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":["TestProjectManager.test_create_project_structure"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"create_quality_dashboard","module":"compareblocks.analytics.dashboard","class":null,"description":"Convenience function to create a quality dashboard.","parameters":["variation_scores","consensus_decisions"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_dashboard.py","test_description":"Tests create_quality_dashboard functionality","field_attributes":{"variation_scores":{"type":"Any","constraint":"valid input","description":"Parameter variation_scores"},"consensus_decisions":{"type":"Any","constraint":"valid input","description":"Parameter consensus_decisions"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Created or built object"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\dashboard.py","line_number":557,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8501503467559814,"execution_count":3,"average_duration":2.2074271043141684,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"create_root_pdf_json","module":"compareblocks.io.pdf_metadata","class":null,"description":"Create root PDF JSON using the PDFMetadataExtractor.","parameters":["pdf_path","associated_files"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_pdf_metadata.py","test_description":"Tests create_root_pdf_json functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"associated_files":{"type":"Any","constraint":"valid input","description":"Parameter associated_files"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Created or built object"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["json","PyMuPDF","pathlib","fitz"],"source_file":"src\\compareblocks\\io\\pdf_metadata.py","line_number":199,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2184178829193115,"execution_count":1,"average_duration":1.2184178829193115,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"create_standard_config","module":"src.compareblocks.normalize.textnorm","class":null,"description":"Create standard normalization configuration for PDF text","parameters":[],"return_type":"NormalizationConfig","test_file":"tests/unit/test_normalization.py","test_description":"Tests standard configuration for PDF text","field_attributes":{"return_value":{"type":"NormalizationConfig","constraint":"valid return value","description":"Created or built object"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["NormalizationConfig"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2236049175262451,"execution_count":1,"average_duration":1.2236049175262451,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"create_strict_guard_thresholds","module":"src.compareblocks.consensus.guard","class":null,"description":"Create strict guard thresholds for conservative hallucination detection.","parameters":[],"return_type":"Any","test_file":"tests/unit/test_consensus_guard.py","test_description":"Tests create_strict_guard_thresholds functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Created or built object"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":0.8132691383361816,"execution_count":1,"average_duration":0.8132691383361816,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"create_strict_scoring_thresholds","module":"src.compareblocks.consensus.score","class":null,"description":"Create strict scoring thresholds for high-quality requirements.","parameters":[],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests create_strict_scoring_thresholds functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Created or built object"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":["TestScoringThresholds.test_create_strict_scoring_thresholds"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"create_test_catalog_entry","module":"build_test_catalog","class":null,"description":"Create a test catalog entry.","parameters":["test_info: Any","test_file_info: Any","function_catalog: Any"],"return_type":"Any","test_file":"tests/unit/test_build_test_catalog.py","test_description":"Tests create_test_catalog_entry functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.862572431564331,"execution_count":1,"average_duration":0.862572431564331,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"create_test_result_database","module":"visual_ocr_testing_functions","class":null,"description":"Create and initialize a test results database with proper schema and indexes","parameters":[{"name":"db_path","type":"str","description":"Path where the database should be created","default":"output/ocr_test_results.db"}],"return_type":"bool","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests database creation, schema initialization, and index creation","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"Whether the database was created successfully"}},"side_effects":["Creates database file and parent directories","Creates test_results and feed_data tables","Creates performance indexes","File system write operations"],"dependencies":["sqlite3","pathlib"],"test_functions":["TestDatabaseOperations.test_create_test_result_database_success","TestDatabaseOperations.test_create_test_result_database_failure"],"test_count":2,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"create_test_result_database","module":"functions.visual_ocr_testing_functions","class":null,"description":"Create and initialize a test results database","parameters":["db_path: str = \"output/ocr_test_results.db\""],"return_type":"bool","test_file":"tests/unit/test_visual_ocr_functions.py","test_description":"Tests creation and initialization of SQLite test results database","field_attributes":{"db_path":{"type":"str","constraint":"valid file path","description":"Path where the database should be created","default":"\"output/ocr_test_results.db\""},"return_value":{"type":"bool","constraint":"boolean value","description":"True if database was created successfully"}},"side_effects":["Creates or modifies files","File I/O operations"],"dependencies":["sqlite3","pathlib"],"test_functions":["TestDatabaseOperations.test_create_test_result_database_success","TestDatabaseOperations.test_create_test_result_database_failure"],"test_count":2,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0623822212219238,"execution_count":1,"average_duration":1.0623822212219238,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"detect_format","module":"compareblocks.association.parsers","class":null,"description":"Detect format from file extension.","parameters":["file_path"],"return_type":"str","test_file":"tests/unit/test_parsers.py","test_description":"Tests detect_format functionality","field_attributes":{"file_path":{"type":"Any","constraint":"valid input","description":"Parameter file_path"},"return_value":{"type":"str","constraint":"valid string","description":"str result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\association\\parsers.py","line_number":416,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846378326416016,"execution_count":1,"average_duration":0.8846378326416016,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"detect_hallucination_patterns","module":"src.compareblocks.consensus.guard","class":null,"description":"Detect potential hallucination patterns in a text variation.","parameters":["variation"],"return_type":"Any","test_file":"tests/unit/test_consensus_guard.py","test_description":"Tests detect_hallucination_patterns functionality with real consensus data","field_attributes":{"variation":{"type":"Any","constraint":"valid input","description":"Parameter variation"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":0.8132691383361816,"execution_count":1,"average_duration":0.8132691383361816,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"detect_reprocessing_needs","module":"src.compareblocks.processing.dynamic_reprocessor","class":null,"description":"Detect if reprocessing is needed for a PDF.","parameters":["pdf_path: Any"],"return_type":"Any","test_file":"tests/unit/test_dynamic_reprocessor.py","test_description":"Tests detect_reprocessing_needs functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8613464832305908,"execution_count":1,"average_duration":0.8613464832305908,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"detect_specific_patterns","module":"src.compareblocks.features.anomaly","class":null,"description":"Detect specific anomaly patterns in text.","parameters":["self","text"],"return_type":"Any","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests detect_specific_patterns functionality with real PDF data","field_attributes":{"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":["TestAnomalyDetector.test_detect_specific_patterns"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"determine_test_status","module":"functions.analyze_project_test_coverage","class":null,"description":"Determine if a source file has corresponding tests","parameters":["file_path: str","test_files: Set[str]"],"return_type":"Dict","test_file":"tests/unit/test_project_analysis.py","test_description":"Tests determination of test coverage status for source files","field_attributes":{"file_path":{"type":"str","constraint":"valid file path","description":"Path to source file"},"test_files":{"type":"Set[str]","constraint":"valid set","description":"Set of available test files"},"return_value":{"type":"Dict","constraint":"valid dictionary","description":"Test status information"}},"side_effects":[],"dependencies":["pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1264936923980713,"execution_count":1,"average_duration":1.1264936923980713,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"discover_source_docs_json_files","module":"visual_ocr_testing_functions","class":null,"description":"Discover JSON files in Source_docs directory recursively with type detection and metadata","parameters":[{"name":"source_docs_path","type":"str","description":"Path to Source_docs directory","default":"Source_docs"}],"return_type":"List[Dict[str, Any]]","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests discovery of JSON files with proper type detection and metadata extraction","field_attributes":{"return_value":{"type":"List[Dict[str, Any]]","constraint":"list of file information dictionaries","description":"List of discovered JSON files with metadata","calculation":"Recursively scans directory for *.json files and extracts metadata"},"return_value[].path":{"type":"str","constraint":"valid file path","description":"Full path to the discovered JSON file"},"return_value[].relative_path":{"type":"str","constraint":"path relative to source_docs_path","description":"Path relative to the Source_docs directory"},"return_value[].type":{"type":"str","constraint":"one of: gbg_analysis, consensus_decisions, corrections, verified, diff_decisions, configuration","description":"Detected file type based on filename patterns"},"return_value[].size":{"type":"int","constraint":">= 0","description":"File size in bytes"},"return_value[].modified":{"type":"datetime","constraint":"valid datetime","description":"Last modification timestamp"}},"side_effects":["File system access for directory scanning and stat operations"],"dependencies":["pathlib","datetime","typing"],"test_functions":["TestSourceDocsDiscovery.test_discover_source_docs_json_files_success"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"discover_source_docs_json_files","module":"functions.visual_ocr_testing_functions","class":null,"description":"Discover JSON files in Source_docs directory recursively","parameters":["source_docs_path: str = \"Source_docs\""],"return_type":"List[Dict[str, Any]]","test_file":"tests/unit/test_visual_ocr_functions.py","test_description":"Tests recursive discovery of JSON files in Source_docs directory","field_attributes":{"source_docs_path":{"type":"str","constraint":"valid file path","description":"Path to Source_docs directory","default":"\"Source_docs\""},"return_value":{"type":"List[Dict[str, Any]]","constraint":"valid list","description":"List of discovered file information dictionaries"}},"side_effects":["File I/O operations"],"dependencies":["pathlib","datetime"],"test_functions":["TestSourceDocsDiscovery.test_discover_source_docs_json_files_success"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0623822212219238,"execution_count":1,"average_duration":1.0623822212219238,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"ensure_output_directories","module":"src.compareblocks.config.file_manager","class":null,"description":"Convenience function to ensure output directories exist","parameters":[],"return_type":"None","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests convenience function for ensuring output directories exist","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":["TestFileManagerDirectoryManagement.test_ensure_output_directories"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"evaluate_variation_quality","module":"src.compareblocks.consensus.guard","class":null,"description":"Evaluate the quality of a single variation for hallucination detection.","parameters":["variation","thresholds"],"return_type":"Any","test_file":"tests/unit/test_consensus_guard.py","test_description":"Tests evaluate_variation_quality functionality with real consensus data","field_attributes":{"variation":{"type":"Any","constraint":"valid input","description":"Parameter variation"},"thresholds":{"type":"Any","constraint":"valid input","description":"Parameter thresholds"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":0.8132691383361816,"execution_count":1,"average_duration":0.8132691383361816,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"evaluate_variations","module":"src.compareblocks.consensus.guard","class":null,"description":"Evaluate variations and make a guard decision.","parameters":["self","variations","context_texts"],"return_type":"Any","test_file":"tests/unit/test_consensus_guard.py","test_description":"Tests evaluate_variations functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":0.8132691383361816,"execution_count":1,"average_duration":0.8132691383361816,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"example_usage","module":"src.functions.visual_ocr_testing_functions","class":null,"description":"Example usage of the Visual OCR Testing Tool functions.","parameters":[],"return_type":"Any","test_file":"tests/unit/test_functions_visual_ocr_testing_functions.py","test_description":"Tests example_usage functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":["TestExampleUsage.test_example_usage_success"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9834001064300537,"execution_count":1,"average_duration":0.9834001064300537,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"export_analytics_report","module":"compareblocks.analytics.export","class":null,"description":"Convenience function to export analytics report.","parameters":["report","format_type","output_path"],"return_type":"Path","test_file":"tests/unit/test_export.py","test_description":"Tests export_analytics_report functionality","field_attributes":{"report":{"type":"Any","constraint":"valid input","description":"Parameter report"},"format_type":{"type":"Any","constraint":"valid input","description":"Parameter format_type"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"return_value":{"type":"Path","constraint":"valid return value","description":"Path result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\export.py","line_number":444,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9331314563751221,"execution_count":1,"average_duration":0.9331314563751221,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"export_engine_metrics","module":"compareblocks.analytics.export","class":null,"description":"Convenience function to export engine metrics.","parameters":["metrics","format_type","output_path"],"return_type":"Path","test_file":"tests/unit/test_export.py","test_description":"Tests export_engine_metrics functionality","field_attributes":{"metrics":{"type":"Any","constraint":"valid input","description":"Parameter metrics"},"format_type":{"type":"Any","constraint":"valid input","description":"Parameter format_type"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"return_value":{"type":"Path","constraint":"valid return value","description":"Path result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\export.py","line_number":418,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9331314563751221,"execution_count":1,"average_duration":0.9331314563751221,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"extract_anomaly_features","module":"src.compareblocks.features.anomaly","class":null,"description":"Extract anomaly detection features from text.","parameters":["self","text"],"return_type":"AnomalyFeatures","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests extract_anomaly_features functionality with real PDF data","field_attributes":{"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"return_value":{"type":"AnomalyFeatures","constraint":"valid return value","description":"Extracted anomalyfeatures data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"extract_block_region","module":"optimize_tesseract_for_clear_text","class":null,"description":"Extract the specific block region for testing","parameters":["pdf_path","page_num","block_index=0"],"return_type":"Tuple[numpy.ndarray, str, str]","test_file":"tests/unit/test_ocr_optimization.py","test_description":"Tests extraction of specific PDF block regions for OCR testing","field_attributes":{"pdf_path":{"type":"str","constraint":"valid file path","description":"Path to PDF file"},"page_num":{"type":"int","constraint":">= 0","description":"Page number to extract from"},"block_index":{"type":"int","constraint":">= 0","description":"Block index within page","default":"0"},"return_value":{"type":"Tuple[numpy.ndarray, str, str]","constraint":"valid tuple","description":"Tuple of (region_image, expected_text, block_id)"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing","File I/O operations"],"dependencies":["fitz","PyMuPDF","cv2","PIL","json"],"test_functions":["TestBlockExtraction.test_extract_block_region_success"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1013386249542236,"execution_count":1,"average_duration":1.1013386249542236,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"extract_context_features","module":"src.compareblocks.features.context","class":null,"description":"Extract context similarity features from text.","parameters":["self","text","context_texts"],"return_type":"ContextFeatures","test_file":"tests/unit/test_features_context.py","test_description":"Tests extract_context_features functionality with real PDF data","field_attributes":{"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"ContextFeatures","constraint":"valid return value","description":"Extracted contextfeatures data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2251174449920654,"execution_count":1,"average_duration":1.2251174449920654,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"extract_debug_images_for_page","module":"compareblocks.debug.image_extractor","class":null,"description":"Extract debug images for a specific page.","parameters":["pdf_path","page_num","max_blocks"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_image_extractor.py","test_description":"Tests extract_debug_images_for_page functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"page_num":{"type":"Any","constraint":"valid input","description":"Parameter page_num"},"max_blocks":{"type":"Any","constraint":"valid input","description":"Parameter max_blocks"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Extracted dict[str, any] data"},"performance":{"memory_usage":"Medium - Image data processing"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["matplotlib","cv2","PIL"],"source_file":"src\\compareblocks\\debug\\image_extractor.py","line_number":292,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8857457637786865,"execution_count":1,"average_duration":0.8857457637786865,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"extract_docling","module":"compareblocks.engines.docling_engine","class":null,"description":"Extract text using Docling.","parameters":["pdf_path","pipeline","export_format"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_docling_engine.py","test_description":"Tests extract_docling functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"pipeline":{"type":"Any","constraint":"valid input","description":"Parameter pipeline"},"export_format":{"type":"Any","constraint":"valid input","description":"Parameter export_format"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Extracted dict[str, any] data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\docling_engine.py","line_number":321,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8686854839324951,"execution_count":1,"average_duration":0.8686854839324951,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"extract_features_for_variations","module":"src.compareblocks.features.core","class":null,"description":"Extract features for multiple variations and compute consistency scores.","parameters":["self","variations"],"return_type":"Any","test_file":"tests/unit/test_features_lengths.py","test_description":"Tests extract_features_for_variations functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Extracted any data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":["TestAnomalyDetector.test_extract_features_for_variations","TestContextSimilarityExtractor.test_extract_features_for_variations","TestLanguageFeatureExtractor.test_extract_features_for_variations","TestCoreFeatureExtractor.test_extract_features_for_variations"],"test_count":4,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.21600341796875,"execution_count":1,"average_duration":1.21600341796875,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"extract_features_for_variations","module":"src.compareblocks.features.language","class":null,"description":"Extract language features for multiple variations.","parameters":["self","variations"],"return_type":"Any","test_file":"tests/unit/test_features_language.py","test_description":"Tests extract_features_for_variations functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Extracted any data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":["TestAnomalyDetector.test_extract_features_for_variations","TestContextSimilarityExtractor.test_extract_features_for_variations","TestLanguageFeatureExtractor.test_extract_features_for_variations","TestCoreFeatureExtractor.test_extract_features_for_variations"],"test_count":4,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.128654956817627,"execution_count":1,"average_duration":1.128654956817627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"extract_features_for_variations","module":"src.compareblocks.features.anomaly","class":null,"description":"Extract anomaly features for multiple variations.","parameters":["self","variations"],"return_type":"Any","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests extract_features_for_variations functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Extracted any data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":["TestAnomalyDetector.test_extract_features_for_variations","TestContextSimilarityExtractor.test_extract_features_for_variations","TestLanguageFeatureExtractor.test_extract_features_for_variations","TestCoreFeatureExtractor.test_extract_features_for_variations"],"test_count":4,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"extract_features_for_variations","module":"src.compareblocks.features.context","class":null,"description":"Extract context features for multiple variations.","parameters":["self","variations","context_texts"],"return_type":"Any","test_file":"tests/unit/test_features_context.py","test_description":"Tests extract_features_for_variations functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Extracted any data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":["TestAnomalyDetector.test_extract_features_for_variations","TestContextSimilarityExtractor.test_extract_features_for_variations","TestLanguageFeatureExtractor.test_extract_features_for_variations","TestCoreFeatureExtractor.test_extract_features_for_variations"],"test_count":4,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2251174449920654,"execution_count":1,"average_duration":1.2251174449920654,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"extract_kreuzberg","module":"compareblocks.engines.kreuzberg_engine","class":null,"description":"Extract text using Kreuzberg.","parameters":["pdf_path","ocr_backend","output_format"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_kreuzberg_engine.py","test_description":"Tests extract_kreuzberg functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"ocr_backend":{"type":"Any","constraint":"valid input","description":"Parameter ocr_backend"},"output_format":{"type":"Any","constraint":"valid input","description":"Parameter output_format"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Extracted dict[str, any] data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\kreuzberg_engine.py","line_number":253,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9168534278869629,"execution_count":1,"average_duration":0.9168534278869629,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"extract_language_features","module":"src.compareblocks.features.language","class":null,"description":"Extract language fitness features from text.","parameters":["self","text"],"return_type":"LanguageFeatures","test_file":"tests/unit/test_features_language.py","test_description":"Tests extract_language_features functionality with real PDF data","field_attributes":{"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"return_value":{"type":"LanguageFeatures","constraint":"valid return value","description":"Extracted languagefeatures data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.128654956817627,"execution_count":1,"average_duration":1.128654956817627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"extract_length_features","module":"src.compareblocks.features.core","class":null,"description":"Extract length and line features from a single text variation.","parameters":["self","text"],"return_type":"LengthFeatures","test_file":"tests/unit/test_features_lengths.py","test_description":"Tests extract_length_features functionality with real PDF data","field_attributes":{"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"return_value":{"type":"LengthFeatures","constraint":"valid return value","description":"Extracted lengthfeatures data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.21600341796875,"execution_count":1,"average_duration":1.21600341796875,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"extract_paddleocr","module":"compareblocks.engines.paddleocr_engine","class":null,"description":"Extract text using PaddleOCR.","parameters":["pdf_path","lang","use_gpu"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_paddleocr_engine.py","test_description":"Tests extract_paddleocr functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"lang":{"type":"Any","constraint":"valid input","description":"Parameter lang"},"use_gpu":{"type":"Any","constraint":"valid input","description":"Parameter use_gpu"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Extracted dict[str, any] data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["paddleocr","PyMuPDF","tesseract","fitz"],"source_file":"src\\compareblocks\\engines\\paddleocr_engine.py","line_number":339,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9843807220458984,"execution_count":1,"average_duration":0.9843807220458984,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"extract_pdf_metadata","module":"compareblocks.io.pdf_metadata","class":null,"description":"Extract PDF metadata using the PDFMetadataExtractor.","parameters":["pdf_path"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_pdf_metadata.py","test_description":"Tests extract_pdf_metadata functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Extracted dict[str, any] data"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["json","PyMuPDF","pathlib","fitz"],"source_file":"src\\compareblocks\\io\\pdf_metadata.py","line_number":193,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2184178829193115,"execution_count":1,"average_duration":1.2184178829193115,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"extract_raw_pymupdf","module":"compareblocks.enginesmupdf_engine","class":null,"description":"Extract raw PyMuPDF data from PDF.","parameters":["pdf_path"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_enginesmupdf_engine.py","test_description":"Tests extract_raw_pymupdf functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Extracted dict[str, any] data"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\pymupdf_engine.py","line_number":249,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8638079166412354,"execution_count":1,"average_duration":0.8638079166412354,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"extract_tesseract_ocr","module":"compareblocks.engines.tesseract_engine","class":null,"description":"Extract text using Tesseract OCR.","parameters":["pdf_path","dpi","lang"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_tesseract_engine.py","test_description":"Tests extract_tesseract_ocr functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"dpi":{"type":"Any","constraint":"valid input","description":"Parameter dpi"},"lang":{"type":"Any","constraint":"valid input","description":"Parameter lang"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Extracted dict[str, any] data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["paddleocr","PyMuPDF","tesseract","fitz"],"source_file":"src\\compareblocks\\engines\\tesseract_engine.py","line_number":352,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":23.896570682525635,"execution_count":1,"average_duration":23.896570682525635,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"extract_with_all_engines","module":"compareblocks.engines.manager","class":null,"description":"Extract text using all available engines.","parameters":["pdf_path","parallel"],"return_type":"Dict[str, EngineResult]","test_file":"tests/unit/test_manager.py","test_description":"Tests extract_with_all_engines functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"parallel":{"type":"Any","constraint":"valid input","description":"Parameter parallel"},"return_value":{"type":"Dict[str, EngineResult]","constraint":"valid dictionary","description":"Extracted dict[str, engineresult] data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\manager.py","line_number":386,"test_functions":["TestExtractionEngineManager.test_extract_with_all_engines"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"extract_with_engines","module":"compareblocks.engines.manager","class":null,"description":"Extract text using specified engines.","parameters":["engine_names","pdf_path","parallel"],"return_type":"Dict[str, EngineResult]","test_file":"tests/unit/test_manager.py","test_description":"Tests extract_with_engines functionality","field_attributes":{"engine_names":{"type":"Any","constraint":"valid input","description":"Parameter engine_names"},"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"parallel":{"type":"Any","constraint":"valid input","description":"Parameter parallel"},"return_value":{"type":"Dict[str, EngineResult]","constraint":"valid dictionary","description":"Extracted dict[str, engineresult] data"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\manager.py","line_number":392,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"find_all_python_files","module":"analyze_missing_files_and_functions","class":null,"description":"Find all Python files in the project, excluding test files and __pycache__.","parameters":[],"return_type":"List[Any]","test_file":"tests/unit/test_analyze_missing_files_and_functions.py","test_description":"Tests find_all_python_files functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8891410827636719,"execution_count":1,"average_duration":0.8891410827636719,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"find_common_subsequence","module":"src.compareblocks.consensus.merge","class":null,"description":"Find the longest common subsequence between two texts.","parameters":["text1","text2"],"return_type":"Any","test_file":"tests/unit/test_consensus_merge.py","test_description":"Tests find_common_subsequence functionality with real consensus data","field_attributes":{"text1":{"type":"Any","constraint":"valid input","description":"Parameter text1"},"text2":{"type":"Any","constraint":"valid input","description":"Parameter text2"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"performance":{"time_complexity":"O(n)"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0672316551208496,"execution_count":1,"average_duration":1.0672316551208496,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"find_source_files","module":"functions.analyze_project_test_coverage","class":null,"description":"Find all Python source files in the project","parameters":[],"return_type":"List[Path]","test_file":"tests/unit/test_project_analysis.py","test_description":"Tests discovery of Python source files across project directories","field_attributes":{"return_value":{"type":"List[Path]","constraint":"non-empty list","description":"List of source file paths"}},"side_effects":["File I/O operations"],"dependencies":["pathlib"],"test_functions":["TestFindSourceFiles.test_find_source_files_success"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1264936923980713,"execution_count":1,"average_duration":1.1264936923980713,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"find_test_files","module":"functions.analyze_project_test_coverage","class":null,"description":"Find all test files in the project","parameters":[],"return_type":"Set[str]","test_file":"tests/unit/test_project_analysis.py","test_description":"Tests discovery of test files across project directories","field_attributes":{"return_value":{"type":"Set[str]","constraint":"valid set","description":"Set of test file paths"}},"side_effects":["File I/O operations"],"dependencies":["pathlib"],"test_functions":["TestEngineValidator.test_find_test_files","TestFindTestFiles.test_find_test_files_success"],"test_count":2,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1264936923980713,"execution_count":1,"average_duration":1.1264936923980713,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"flag_for_manual_review","module":"src.compareblocks.consensus.guard","class":null,"description":"Flag variations for manual review with detailed reasoning.","parameters":["variations","scores","reason"],"return_type":"Any","test_file":"tests/unit/test_consensus_guard.py","test_description":"Tests flag_for_manual_review functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"scores":{"type":"Any","constraint":"valid input","description":"Parameter scores"},"reason":{"type":"Any","constraint":"valid input","description":"Parameter reason"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":0.8132691383361816,"execution_count":1,"average_duration":0.8132691383361816,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"fuzzy_match_content","module":"compareblocks.association.alignment","class":null,"description":"Calculate fuzzy match score between two texts.","parameters":["text1","text2"],"return_type":"float","test_file":"tests/unit/test_alignment.py","test_description":"Tests fuzzy_match_content functionality","field_attributes":{"text1":{"type":"Any","constraint":"valid input","description":"Parameter text1"},"text2":{"type":"Any","constraint":"valid input","description":"Parameter text2"},"return_value":{"type":"float","constraint":">= 0.0","description":"float result"},"performance":{"time_complexity":"O(n*m)"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","rapidfuzz","pathlib"],"source_file":"src\\compareblocks\\association\\alignment.py","line_number":63,"test_functions":["TestAssociationAlignment.test_fuzzy_match_content"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8660709857940674,"execution_count":1,"average_duration":0.8660709857940674,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"generate_analytics_report","module":"compareblocks.analytics.report_generator","class":null,"description":"Convenience function to generate a comprehensive analytics report.","parameters":["engine_results","consensus_decisions","variation_scores","pdf_path"],"return_type":"AnalyticsReport","test_file":"tests/unit/test_report_generator.py","test_description":"Tests generate_analytics_report functionality","field_attributes":{"engine_results":{"type":"Any","constraint":"valid input","description":"Parameter engine_results"},"consensus_decisions":{"type":"Any","constraint":"valid input","description":"Parameter consensus_decisions"},"variation_scores":{"type":"Any","constraint":"valid input","description":"Parameter variation_scores"},"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"AnalyticsReport","constraint":"valid return value","description":"AnalyticsReport result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\report_generator.py","line_number":548,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":1.0116229057312012,"execution_count":1,"average_duration":1.0116229057312012,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"generate_coverage_report","module":"compareblocks.testing.coverage_tracker","class":null,"description":"Generate coverage report for engines.","parameters":["engine_name"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_coverage_tracker.py","test_description":"Tests generate_coverage_report functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Dict[str, Any] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\coverage_tracker.py","line_number":612,"test_functions":["TestEngineValidator.test_generate_coverage_report","TestCoverageTracker.test_generate_coverage_report"],"test_count":2,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8736326694488525,"execution_count":1,"average_duration":0.8736326694488525,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"generate_cross_reference_report","module":"build_test_catalog","class":null,"description":"Generate a cross-reference report between functions and tests.","parameters":["test_entries: Any","function_catalog: Any"],"return_type":"Any","test_file":"tests/unit/test_build_test_catalog.py","test_description":"Tests generate_cross_reference_report functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.862572431564331,"execution_count":1,"average_duration":0.862572431564331,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"generate_function_name","module":"analyze_missing_files_and_functions","class":null,"description":"Generate function name in catalog format.","parameters":["func_info: Any","class_name: Any","module_path: Any"],"return_type":"Any","test_file":"tests/unit/test_analyze_missing_files_and_functions.py","test_description":"Tests generate_function_name functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8891410827636719,"execution_count":1,"average_duration":0.8891410827636719,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"generate_performance_report","module":"compareblocks.testing.performance_tracker","class":null,"description":"Generate performance report for engines.","parameters":["engine_name"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_performance_tracker.py","test_description":"Tests generate_performance_report functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Dict[str, Any] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\performance_tracker.py","line_number":588,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846070766448975,"execution_count":1,"average_duration":0.8846070766448975,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_anomaly_statistics","module":"src.compareblocks.features.anomaly","class":null,"description":"Get anomaly statistics for a set of variations.","parameters":["self","variations"],"return_type":"Any","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests get_anomaly_statistics functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":["TestAnomalyDetector.test_get_anomaly_statistics"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_anomaly_summary","module":"src.compareblocks.consensus.guard","class":null,"description":"Get summary of anomalies detected in variations.","parameters":["self","variations"],"return_type":"Any","test_file":"tests/unit/test_consensus_guard.py","test_description":"Tests get_anomaly_summary functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":0.8132691383361816,"execution_count":1,"average_duration":0.8132691383361816,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_available_engines","module":"compareblocks.engines.manager","class":null,"description":"Get list of available extraction engines.","parameters":[],"return_type":"List[str]","test_file":"tests/unit/test_manager.py","test_description":"Tests get_available_engines functionality","field_attributes":{"return_value":{"type":"List[str]","constraint":"valid list","description":"Extracted or retrieved items"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\manager.py","line_number":399,"test_functions":["TestExtractionEngineManager.test_get_available_engines"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_available_engines_for_gbg_integration","module":"compareblocks.engines.comprehensive_engine_gbg_processor","class":null,"description":"Get list of available engines for GBG integration.","parameters":[],"return_type":"List[str]","test_file":"tests/unit/test_comprehensive_engine_gbg_processor.py","test_description":"Tests get_available_engines_for_gbg_integration functionality","field_attributes":{"return_value":{"type":"List[str]","constraint":"valid list","description":"List of results"}},"side_effects":[],"dependencies":[],"source_file":"src\\compareblocks\\engines\\comprehensive_engine_gbg_processor.py","line_number":719,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8798336982727051,"execution_count":1,"average_duration":0.8798336982727051,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_available_parsers","module":"compareblocks.association.parsers","class":null,"description":"Get all available parsers.","parameters":[],"return_type":"Dict[str, FormatParser]","test_file":"tests/unit/test_parsers.py","test_description":"Tests get_available_parsers functionality","field_attributes":{"return_value":{"type":"Dict[str, FormatParser]","constraint":"valid dictionary","description":"Retrieved dict[str, formatparser] value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\association\\parsers.py","line_number":448,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846378326416016,"execution_count":1,"average_duration":0.8846378326416016,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_best_variation","module":"src.compareblocks.consensus.score","class":null,"description":"Get the best scoring variation.","parameters":["self","variations","context_texts"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests get_best_variation functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_configuration","module":"src.compareblocks.consensus.score","class":null,"description":"Get current scorer configuration.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests get_configuration functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["statistics"],"test_functions":["TestScorerConfiguration.test_get_configuration"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_consensus_schema","module":"src.compareblocks.io.schemas","class":null,"description":"Get the consensus output schema for validation","parameters":[],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_io_validation.py","test_description":"Tests retrieval of consensus schema for NDJSON validation","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Retrieved dict[str, any] value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_context_statistics","module":"src.compareblocks.features.context","class":null,"description":"Get context statistics for a set of variations.","parameters":["self","variations","context_texts"],"return_type":"Any","test_file":"tests/unit/test_features_context.py","test_description":"Tests get_context_statistics functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":["TestContextSimilarityExtractor.test_get_context_statistics"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2251174449920654,"execution_count":1,"average_duration":1.2251174449920654,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_decision_statistics","module":"src.compareblocks.consensus.policy","class":null,"description":"Calculate statistics for a set of consensus decisions.","parameters":["decisions"],"return_type":"Any","test_file":"tests/unit/test_consensus_policy.py","test_description":"Tests get_decision_statistics functionality with real consensus data","field_attributes":{"decisions":{"type":"Any","constraint":"valid input","description":"Parameter decisions"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":["TestBatchDecisions.test_get_decision_statistics"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.110443353652954,"execution_count":1,"average_duration":1.110443353652954,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_decision_statistics","module":"src.compareblocks.consensus.policy","class":null,"description":"Get statistics for a set of decisions.","parameters":["self","decisions"],"return_type":"Any","test_file":"tests/unit/test_consensus_policy.py","test_description":"Tests get_decision_statistics functionality with real consensus data","field_attributes":{"decisions":{"type":"Any","constraint":"valid input","description":"Parameter decisions"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":["TestBatchDecisions.test_get_decision_statistics"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.110443353652954,"execution_count":1,"average_duration":1.110443353652954,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_engine_rankings","module":"compareblocks.analytics.engine_analytics","class":null,"description":"Convenience function to get engine rankings.","parameters":["metrics"],"return_type":"List[Tuple[str, float]]","test_file":"tests/unit/test_engine_analytics.py","test_description":"Tests get_engine_rankings functionality","field_attributes":{"metrics":{"type":"Any","constraint":"valid input","description":"Parameter metrics"},"return_value":{"type":"List[Tuple[str, float]]","constraint":"valid list","description":"Extracted or retrieved items"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["numpy","pandas"],"source_file":"src\\compareblocks\\analytics\\engine_analytics.py","line_number":570,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8958520889282227,"execution_count":1,"average_duration":0.8958520889282227,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_files_in_index","module":"analyze_missing_files_and_functions","class":null,"description":"Get files mentioned in file_index_readme.md.","parameters":[],"return_type":"Any","test_file":"tests/unit/test_analyze_missing_files_and_functions.py","test_description":"Tests get_files_in_index functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8891410827636719,"execution_count":1,"average_duration":0.8891410827636719,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_guard_configuration","module":"src.compareblocks.consensus.guard","class":null,"description":"Get current guard configuration.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_consensus_guard.py","test_description":"Tests get_guard_configuration functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":0.8132691383361816,"execution_count":1,"average_duration":0.8132691383361816,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_input_schema","module":"src.compareblocks.io.schemas","class":null,"description":"Get the input variation schema for validation","parameters":[],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_io_validation.py","test_description":"Tests retrieval of input schema for NDJSON validation","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Retrieved dict[str, any] value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_language_statistics","module":"src.compareblocks.features.language","class":null,"description":"Get language statistics for a set of variations.","parameters":["self","variations"],"return_type":"Any","test_file":"tests/unit/test_features_language.py","test_description":"Tests get_language_statistics functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":["TestLanguageFeatureExtractor.test_get_language_statistics"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.128654956817627,"execution_count":1,"average_duration":1.128654956817627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_merge_preview","module":"src.compareblocks.consensus.merge","class":null,"description":"Get a preview of what merging would produce without full processing.","parameters":["self","variations","max_differences"],"return_type":"Any","test_file":"tests/unit/test_consensus_merge.py","test_description":"Tests get_merge_preview functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"max_differences":{"type":"Any","constraint":"valid input","description":"Parameter max_differences"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0672316551208496,"execution_count":1,"average_duration":1.0672316551208496,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_output_directory","module":"src.compareblocks.config.file_manager","class":null,"description":"Convenience function to get output directory","parameters":[],"return_type":"str","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests convenience function for getting output directory","field_attributes":{"return_value":{"type":"str","constraint":"non-empty string","description":"Retrieved str value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_policy_configuration","module":"src.compareblocks.consensus.policy","class":null,"description":"Get current policy configuration.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_consensus_policy.py","test_description":"Tests get_policy_configuration functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Configuration state changes"],"dependencies":["statistics"],"test_functions":["TestPolicyConfiguration.test_get_policy_configuration"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.110443353652954,"execution_count":1,"average_duration":1.110443353652954,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_project_summary","module":"src.compareblocks.project.manager","class":null,"description":"Convenience function to get project summary.","parameters":["pdf_path: Any"],"return_type":"Any","test_file":"tests/unit/test_manager.py","test_description":"Tests get_project_summary functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_scoring_statistics","module":"src.compareblocks.consensus.score","class":null,"description":"Calculate statistics for a set of variation scores.","parameters":["scores"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests get_scoring_statistics functionality with real consensus data","field_attributes":{"scores":{"type":"Any","constraint":"valid input","description":"Parameter scores"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_scoring_statistics","module":"src.compareblocks.consensus.score","class":null,"description":"Get scoring statistics for a set of variations.","parameters":["self","variations","context_texts"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests get_scoring_statistics functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_target_pdf_path","module":"src.compareblocks.config.file_manager","class":null,"description":"Convenience function to get target PDF path","parameters":[],"return_type":"str","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests convenience function for getting target PDF path","field_attributes":{"return_value":{"type":"str","constraint":"valid string","description":"String result"}},"side_effects":["Opens/closes PDF documents"],"dependencies":["fitz","PyMuPDF"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_test_results_from_database","module":"visual_ocr_testing_functions","class":null,"description":"Retrieve test results from the database with filtering and deserialization","parameters":[{"name":"db_path","type":"str","description":"Path to the database","default":"output/ocr_test_results.db"},{"name":"limit","type":"int","description":"Maximum number of results to return","default":100},{"name":"test_type","type":"Optional[str]","description":"Filter by test type","default":null}],"return_type":"List[TestResult]","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests retrieval with filtering, ordering, and proper deserialization of TestResult objects","field_attributes":{"return_value":{"type":"List[TestResult]","constraint":"list of TestResult objects","description":"Retrieved test results ordered by timestamp descending","calculation":"Queries database with optional filtering and converts rows to TestResult objects"},"limit":{"type":"int","constraint":"> 0","description":"Maximum number of results to return"}},"side_effects":["Database read operation","JSON deserialization of metadata","Timestamp parsing from ISO format"],"dependencies":["sqlite3","json","datetime","typing","visual_ocr_testing_tool.TestResult"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_test_results_from_database","module":"functions.visual_ocr_testing_functions","class":null,"description":"Retrieve test results from the database","parameters":["db_path: str = \"output/ocr_test_results.db\"","limit: int = 100","test_type: str = None"],"return_type":"List[TestResult]","test_file":"tests/unit/test_visual_ocr_functions.py","test_description":"Tests retrieval of test results from SQLite database with filtering","field_attributes":{"db_path":{"type":"str","constraint":"valid file path","description":"Path to the database","default":"\"output/ocr_test_results.db\""},"limit":{"type":"int","constraint":">= 0","description":"Maximum number of results to return","default":"100"},"test_type":{"type":"str","constraint":"valid string","description":"Filter by test type (optional)","default":"None"},"return_value":{"type":"List[TestResult]","constraint":"valid list","description":"List of TestResult objects"}},"side_effects":["File I/O operations"],"dependencies":["sqlite3","json","datetime"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0623822212219238,"execution_count":1,"average_duration":1.0623822212219238,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"get_variation_statistics","module":"src.compareblocks.features.core","class":null,"description":"Get summary statistics for a set of variations.","parameters":["self","variations"],"return_type":"Any","test_file":"tests/unit/test_features_lengths.py","test_description":"Tests get_variation_statistics functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Retrieved any value"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":["TestCoreFeatureExtractor.test_get_variation_statistics"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.21600341796875,"execution_count":1,"average_duration":1.21600341796875,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"identify_merge_candidates","module":"src.compareblocks.consensus.policy","class":null,"description":"Identify pairs of variations that are candidates for merging.","parameters":["variations","similarity_threshold"],"return_type":"Any","test_file":"tests/unit/test_consensus_policy.py","test_description":"Tests identify_merge_candidates functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"similarity_threshold":{"type":"Any","constraint":"valid input","description":"Parameter similarity_threshold"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":["TestMergeCandidateIdentification.test_identify_merge_candidates"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.110443353652954,"execution_count":1,"average_duration":1.110443353652954,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"incremental_processing_for_new_files","module":"src.compareblocks.processing.dynamic_reprocessor","class":null,"description":"Process new files incrementally.","parameters":["pdf_path: Any","new_files: Any"],"return_type":"Any","test_file":"tests/unit/test_dynamic_reprocessor.py","test_description":"Tests incremental_processing_for_new_files functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8613464832305908,"execution_count":1,"average_duration":0.8613464832305908,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"is_anomalous","module":"src.compareblocks.features.anomaly","class":null,"description":"Check if text is anomalous based on threshold.","parameters":["self","text","threshold"],"return_type":"bool","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests is_anomalous functionality with real PDF data","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"bool result"},"text":{"type":"Any","constraint":"valid input","description":"Parameter text"},"threshold":{"type":"Any","constraint":"valid input","description":"Parameter threshold"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":["TestAnomalyDetector.test_is_anomalous"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"is_variation_safe_for_auto_selection","module":"src.compareblocks.consensus.guard","class":null,"description":"Quick check if a single variation is safe for auto-selection.","parameters":["self","variation_text","engine_name"],"return_type":"Any","test_file":"tests/unit/test_consensus_guard.py","test_description":"Tests is_variation_safe_for_auto_selection functionality with real consensus data","field_attributes":{"variation_text":{"type":"Any","constraint":"valid input","description":"Parameter variation_text"},"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":0.8132691383361816,"execution_count":1,"average_duration":0.8132691383361816,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"load_and_validate_json_file","module":"visual_ocr_testing_functions","class":null,"description":"Load and validate a JSON file with comprehensive error handling and format detection","parameters":[{"name":"file_path","type":"str","description":"Path to the JSON file"}],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests loading of valid JSON, invalid JSON syntax, and missing files with proper error handling","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"complete loading results","description":"Comprehensive results of JSON file loading and validation","required_keys":["success","data","error","validation","file_info"]},"return_value.success":{"type":"bool","constraint":"boolean value","description":"Whether the file was successfully loaded and validated"},"return_value.data":{"type":"Optional[Any]","constraint":"present when success is True","description":"Parsed JSON data if loading was successful"},"return_value.error":{"type":"Optional[str]","constraint":"present when success is False","description":"Detailed error message explaining the failure"},"return_value.validation":{"type":"Optional[Dict[str, Any]]","constraint":"present when JSON parsing succeeded","description":"Format validation results from validate_json_format"},"return_value.file_info":{"type":"Dict[str, Any]","constraint":"file metadata","description":"File system metadata including size and modification time","required_keys":["path","size","modified","name"]}},"side_effects":["File system access for reading and stat operations"],"dependencies":["pathlib","json","datetime","typing"],"test_functions":["TestJSONFileOperations.test_load_and_validate_json_file_success"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"load_and_validate_json_file","module":"functions.visual_ocr_testing_functions","class":null,"description":"Load and validate a JSON file with comprehensive error handling","parameters":["file_path: str"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_visual_ocr_functions.py","test_description":"Tests loading and validation of JSON files with error handling","field_attributes":{"file_path":{"type":"str","constraint":"valid file path","description":"Path to the JSON file"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Loading results with data, validation, and error information"}},"side_effects":["File I/O operations","May raise FileNotFoundError"],"dependencies":["pathlib","json","datetime"],"test_functions":["TestJSONFileOperations.test_load_and_validate_json_file_success"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0623822212219238,"execution_count":1,"average_duration":1.0623822212219238,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"load_associations_for_pdf","module":"compareblocks.association.manager","class":null,"description":"Convenience function to load associations for a PDF.","parameters":["pdf_path"],"return_type":"PDFAssociations","test_file":"tests/unit/test_manager.py","test_description":"Tests load_associations_for_pdf functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"PDFAssociations","constraint":"valid return value","description":"PDFAssociations result"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","May raise FileNotFoundError"],"dependencies":["json","PyMuPDF","pathlib","fitz"],"source_file":"src\\compareblocks\\association\\manager.py","line_number":142,"test_functions":["TestAssociationManager.test_load_associations_for_pdf"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"load_function_catalog","module":"analyze_missing_files_and_functions","class":null,"description":"Load existing function catalog.","parameters":[],"return_type":"Any","test_file":"tests/unit/test_analyze_missing_files_and_functions.py","test_description":"Tests load_function_catalog functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8891410827636719,"execution_count":1,"average_duration":0.8891410827636719,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"load_function_catalog","module":"build_test_catalog","class":null,"description":"Load the function catalog and create a lookup by function name.","parameters":["catalog_path: Any"],"return_type":"Any","test_file":"tests/unit/test_build_test_catalog.py","test_description":"Tests load_function_catalog functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.862572431564331,"execution_count":1,"average_duration":0.862572431564331,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"load_ndjson_file","module":"src.compareblocks.io.loader","class":null,"description":"Convenience function to load and validate an NDJSON file","parameters":["file_path: Path"],"return_type":"List[Dict[str, Any]]","test_file":"tests/unit/test_io_validation.py","test_description":"Tests convenience function for NDJSON file loading","field_attributes":{"return_value":{"type":"List[Dict[str, Any]]","constraint":"validated records","description":"List of processed records"}},"side_effects":["File I/O operations"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"main","module":"src.compareblocks.gbg.processor","class":null,"description":"Main function for command-line usage of GBG processor","parameters":[],"return_type":"None","test_file":"tests/integration/test_gbg_seed.py","test_description":"Tests command-line interface for GBG processor","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["PyMuPDF","fitz"],"test_functions":["TestMainFunction.test_main_success","TestMainFunction.test_main_validation_success","TestMainFunction.test_main_validation_with_errors","TestMainFunction.test_main_validation_with_warnings","TestMainFunction.test_main_all_tests_pass","TestMainFunction.test_main_some_tests_fail","TestMainFunction.test_main_test_exception","TestMainFunction.test_main_list_engines","TestMainFunction.test_main_process_all_engines_success","TestMainFunction.test_main_process_specific_engines","TestMainFunction.test_main_process_failure","TestMainFunction.test_main_exception_handling","TestMainFunction.test_main_compare_configurations_not_implemented","TestFunctionCatalogValidation.test_main_validation_success","TestFunctionCatalogValidation.test_main_validation_failure","TestFunctionCatalogValidation.test_main_validation_exception","TestFunctionCatalogValidation.test_main_function_exists","TestDocumentationAndUsage.test_main_function_docstring","TestMainFunction.test_main_no_missing_functions","TestMainFunction.test_main_with_missing_functions_no_append","TestMainFunction.test_main_with_append","TestMainFunction.test_main_success","TestMainFunction.test_main_extraction_error","TestProjectStructure.test_main_package_import","TestMainFunction.test_main_all_checks_pass","TestMainFunction.test_main_some_checks_fail","TestMainFunction.test_main_check_exception"],"test_count":27}
{"function_name":"main","module":"src.compareblocks.gui.app","class":null,"description":"Main entry point for BECR application","parameters":["args: Optional[list] = None"],"return_type":"int","test_file":"tests/integration/test_configuration_integration.py","test_description":"Tests main application entry point through integration testing","field_attributes":{"return_value":{"type":"int","constraint":">= 0","description":"Application exit code (0 for success)"}},"side_effects":["Starts GUI application","Processes command line arguments"],"dependencies":["PySide6","sys"],"test_functions":["TestMainFunction.test_main_success","TestMainFunction.test_main_validation_success","TestMainFunction.test_main_validation_with_errors","TestMainFunction.test_main_validation_with_warnings","TestMainFunction.test_main_all_tests_pass","TestMainFunction.test_main_some_tests_fail","TestMainFunction.test_main_test_exception","TestMainFunction.test_main_list_engines","TestMainFunction.test_main_process_all_engines_success","TestMainFunction.test_main_process_specific_engines","TestMainFunction.test_main_process_failure","TestMainFunction.test_main_exception_handling","TestMainFunction.test_main_compare_configurations_not_implemented","TestFunctionCatalogValidation.test_main_validation_success","TestFunctionCatalogValidation.test_main_validation_failure","TestFunctionCatalogValidation.test_main_validation_exception","TestFunctionCatalogValidation.test_main_function_exists","TestDocumentationAndUsage.test_main_function_docstring","TestMainFunction.test_main_no_missing_functions","TestMainFunction.test_main_with_missing_functions_no_append","TestMainFunction.test_main_with_append","TestMainFunction.test_main_success","TestMainFunction.test_main_extraction_error","TestProjectStructure.test_main_package_import","TestMainFunction.test_main_all_checks_pass","TestMainFunction.test_main_some_checks_fail","TestMainFunction.test_main_check_exception"],"test_count":27}
{"function_name":"main","module":"run_becr","class":null,"description":"Main entry point for BECR application","parameters":[],"return_type":"int","test_file":"tests/unit/test_immutable_runners.py","test_description":"Tests main entry point for BECR application startup and error handling","field_attributes":{"return_value":{"type":"int","constraint":"0 for success, 1 for error","description":"Exit code indicating success or failure"}},"side_effects":["Initializes GUI application","May raise ImportError or other exceptions","System exit with return code"],"dependencies":["PySide6","pathlib","sys"],"test_functions":["TestMainFunction.test_main_success","TestMainFunction.test_main_validation_success","TestMainFunction.test_main_validation_with_errors","TestMainFunction.test_main_validation_with_warnings","TestMainFunction.test_main_all_tests_pass","TestMainFunction.test_main_some_tests_fail","TestMainFunction.test_main_test_exception","TestMainFunction.test_main_list_engines","TestMainFunction.test_main_process_all_engines_success","TestMainFunction.test_main_process_specific_engines","TestMainFunction.test_main_process_failure","TestMainFunction.test_main_exception_handling","TestMainFunction.test_main_compare_configurations_not_implemented","TestFunctionCatalogValidation.test_main_validation_success","TestFunctionCatalogValidation.test_main_validation_failure","TestFunctionCatalogValidation.test_main_validation_exception","TestFunctionCatalogValidation.test_main_function_exists","TestDocumentationAndUsage.test_main_function_docstring","TestMainFunction.test_main_no_missing_functions","TestMainFunction.test_main_with_missing_functions_no_append","TestMainFunction.test_main_with_append","TestMainFunction.test_main_success","TestMainFunction.test_main_extraction_error","TestProjectStructure.test_main_package_import","TestMainFunction.test_main_all_checks_pass","TestMainFunction.test_main_some_checks_fail","TestMainFunction.test_main_check_exception"],"test_count":27,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.158782958984375,"execution_count":1,"average_duration":1.158782958984375,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"main","module":"run_tests","class":null,"description":"Main entry point for BECR test suite","parameters":[],"return_type":"int","test_file":"tests/unit/test_immutable_runners.py","test_description":"Tests test suite execution with coverage reporting","field_attributes":{"return_value":{"type":"int","constraint":"0 for success, non-zero for failure","description":"Exit code from pytest execution"}},"side_effects":["File I/O operations","Creates or modifies files","Subprocess execution of pytest"],"dependencies":["pytest","subprocess","pathlib"],"test_functions":["TestMainFunction.test_main_success","TestMainFunction.test_main_validation_success","TestMainFunction.test_main_validation_with_errors","TestMainFunction.test_main_validation_with_warnings","TestMainFunction.test_main_all_tests_pass","TestMainFunction.test_main_some_tests_fail","TestMainFunction.test_main_test_exception","TestMainFunction.test_main_list_engines","TestMainFunction.test_main_process_all_engines_success","TestMainFunction.test_main_process_specific_engines","TestMainFunction.test_main_process_failure","TestMainFunction.test_main_exception_handling","TestMainFunction.test_main_compare_configurations_not_implemented","TestFunctionCatalogValidation.test_main_validation_success","TestFunctionCatalogValidation.test_main_validation_failure","TestFunctionCatalogValidation.test_main_validation_exception","TestFunctionCatalogValidation.test_main_function_exists","TestDocumentationAndUsage.test_main_function_docstring","TestMainFunction.test_main_no_missing_functions","TestMainFunction.test_main_with_missing_functions_no_append","TestMainFunction.test_main_with_append","TestMainFunction.test_main_success","TestMainFunction.test_main_extraction_error","TestProjectStructure.test_main_package_import","TestMainFunction.test_main_all_checks_pass","TestMainFunction.test_main_some_checks_fail","TestMainFunction.test_main_check_exception"],"test_count":27,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.158782958984375,"execution_count":1,"average_duration":1.158782958984375,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"main","module":"src.compareblocks.utils.test_runner","class":null,"description":"Main entry point for test runner utility","parameters":["args: Optional[List[str]] = None"],"return_type":"int","test_file":"tests/unit/test_test_runner.py","test_description":"Tests programmatic test execution with various argument configurations","field_attributes":{"args":{"type":"Optional[List[str]]","constraint":"valid list","description":"Additional pytest arguments","default":"None"},"return_value":{"type":"int","constraint":"0 for success, non-zero for failure","description":"Exit code from pytest"}},"side_effects":["Subprocess execution of pytest","Processing state changes"],"dependencies":["pytest","subprocess","pathlib"],"test_functions":["TestMainFunction.test_main_success","TestMainFunction.test_main_validation_success","TestMainFunction.test_main_validation_with_errors","TestMainFunction.test_main_validation_with_warnings","TestMainFunction.test_main_all_tests_pass","TestMainFunction.test_main_some_tests_fail","TestMainFunction.test_main_test_exception","TestMainFunction.test_main_list_engines","TestMainFunction.test_main_process_all_engines_success","TestMainFunction.test_main_process_specific_engines","TestMainFunction.test_main_process_failure","TestMainFunction.test_main_exception_handling","TestMainFunction.test_main_compare_configurations_not_implemented","TestFunctionCatalogValidation.test_main_validation_success","TestFunctionCatalogValidation.test_main_validation_failure","TestFunctionCatalogValidation.test_main_validation_exception","TestFunctionCatalogValidation.test_main_function_exists","TestDocumentationAndUsage.test_main_function_docstring","TestMainFunction.test_main_no_missing_functions","TestMainFunction.test_main_with_missing_functions_no_append","TestMainFunction.test_main_with_append","TestMainFunction.test_main_success","TestMainFunction.test_main_extraction_error","TestProjectStructure.test_main_package_import","TestMainFunction.test_main_all_checks_pass","TestMainFunction.test_main_some_checks_fail","TestMainFunction.test_main_check_exception"],"test_count":27,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1115083694458008,"execution_count":1,"average_duration":1.1115083694458008,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"main","module":"optimize_tesseract_for_clear_text","class":null,"description":"Test different OCR configurations to find optimal settings","parameters":[],"return_type":"int","test_file":"tests/unit/test_ocr_optimization.py","test_description":"Tests complete OCR optimization workflow","field_attributes":{"return_value":{"type":"int","constraint":"0 for success, 1 for error","description":"Exit code indicating success or failure"}},"side_effects":["File I/O operations","Opens/closes PDF documents","Creates or modifies files","Memory allocation for PDF processing"],"dependencies":["fitz","PyMuPDF","cv2","tesseract","rapidfuzz","json","pathlib"],"test_functions":["TestMainFunction.test_main_success","TestMainFunction.test_main_validation_success","TestMainFunction.test_main_validation_with_errors","TestMainFunction.test_main_validation_with_warnings","TestMainFunction.test_main_all_tests_pass","TestMainFunction.test_main_some_tests_fail","TestMainFunction.test_main_test_exception","TestMainFunction.test_main_list_engines","TestMainFunction.test_main_process_all_engines_success","TestMainFunction.test_main_process_specific_engines","TestMainFunction.test_main_process_failure","TestMainFunction.test_main_exception_handling","TestMainFunction.test_main_compare_configurations_not_implemented","TestFunctionCatalogValidation.test_main_validation_success","TestFunctionCatalogValidation.test_main_validation_failure","TestFunctionCatalogValidation.test_main_validation_exception","TestFunctionCatalogValidation.test_main_function_exists","TestDocumentationAndUsage.test_main_function_docstring","TestMainFunction.test_main_no_missing_functions","TestMainFunction.test_main_with_missing_functions_no_append","TestMainFunction.test_main_with_append","TestMainFunction.test_main_success","TestMainFunction.test_main_extraction_error","TestProjectStructure.test_main_package_import","TestMainFunction.test_main_all_checks_pass","TestMainFunction.test_main_some_checks_fail","TestMainFunction.test_main_check_exception"],"test_count":27,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1013386249542236,"execution_count":1,"average_duration":1.1013386249542236,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"main","module":"validate_configuration","class":null,"description":"Run all validation tests","parameters":[],"return_type":"int","test_file":"tests/unit/test_configuration_validation.py","test_description":"Tests complete configuration validation workflow","field_attributes":{"return_value":{"type":"int","constraint":"0 for success, 1 for failure","description":"Exit code indicating validation result"}},"side_effects":["File I/O operations","Configuration state changes","Logging operations"],"dependencies":["pathlib","json","sys"],"test_functions":["TestMainFunction.test_main_success","TestMainFunction.test_main_validation_success","TestMainFunction.test_main_validation_with_errors","TestMainFunction.test_main_validation_with_warnings","TestMainFunction.test_main_all_tests_pass","TestMainFunction.test_main_some_tests_fail","TestMainFunction.test_main_test_exception","TestMainFunction.test_main_list_engines","TestMainFunction.test_main_process_all_engines_success","TestMainFunction.test_main_process_specific_engines","TestMainFunction.test_main_process_failure","TestMainFunction.test_main_exception_handling","TestMainFunction.test_main_compare_configurations_not_implemented","TestFunctionCatalogValidation.test_main_validation_success","TestFunctionCatalogValidation.test_main_validation_failure","TestFunctionCatalogValidation.test_main_validation_exception","TestFunctionCatalogValidation.test_main_function_exists","TestDocumentationAndUsage.test_main_function_docstring","TestMainFunction.test_main_no_missing_functions","TestMainFunction.test_main_with_missing_functions_no_append","TestMainFunction.test_main_with_append","TestMainFunction.test_main_success","TestMainFunction.test_main_extraction_error","TestProjectStructure.test_main_package_import","TestMainFunction.test_main_all_checks_pass","TestMainFunction.test_main_some_checks_fail","TestMainFunction.test_main_check_exception"],"test_count":27,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0275442600250244,"execution_count":1,"average_duration":1.0275442600250244,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"main","module":"validate_function_catalog","class":null,"description":"Run the function catalog validation","parameters":[],"return_type":"int","test_file":"tests/unit/test_function_catalog_validation.py","test_description":"Tests function catalog validation against default file","field_attributes":{"return_value":{"type":"int","constraint":"0 for success, 1 for failure","description":"Exit code indicating validation result"}},"side_effects":["File I/O operations","Logging operations"],"dependencies":["pathlib","sys"],"test_functions":["TestMainFunction.test_main_success","TestMainFunction.test_main_validation_success","TestMainFunction.test_main_validation_with_errors","TestMainFunction.test_main_validation_with_warnings","TestMainFunction.test_main_all_tests_pass","TestMainFunction.test_main_some_tests_fail","TestMainFunction.test_main_test_exception","TestMainFunction.test_main_list_engines","TestMainFunction.test_main_process_all_engines_success","TestMainFunction.test_main_process_specific_engines","TestMainFunction.test_main_process_failure","TestMainFunction.test_main_exception_handling","TestMainFunction.test_main_compare_configurations_not_implemented","TestFunctionCatalogValidation.test_main_validation_success","TestFunctionCatalogValidation.test_main_validation_failure","TestFunctionCatalogValidation.test_main_validation_exception","TestFunctionCatalogValidation.test_main_function_exists","TestDocumentationAndUsage.test_main_function_docstring","TestMainFunction.test_main_no_missing_functions","TestMainFunction.test_main_with_missing_functions_no_append","TestMainFunction.test_main_with_append","TestMainFunction.test_main_success","TestMainFunction.test_main_extraction_error","TestProjectStructure.test_main_package_import","TestMainFunction.test_main_all_checks_pass","TestMainFunction.test_main_some_checks_fail","TestMainFunction.test_main_check_exception"],"test_count":27,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1151437759399414,"execution_count":1,"average_duration":1.1151437759399414,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"main","module":"functions.enhance_catalog_fields","class":null,"description":"Main execution function","parameters":[],"return_type":"None","test_file":"tests/unit/test_catalog_enhancement.py","test_description":"Tests complete catalog enhancement workflow","field_attributes":{"return_value":{"type":"None","constraint":"no return value","description":"Executes enhancement process"}},"side_effects":["File I/O operations","Creates or modifies files","Logging operations"],"dependencies":["pathlib"],"test_functions":["TestMainFunction.test_main_success","TestMainFunction.test_main_validation_success","TestMainFunction.test_main_validation_with_errors","TestMainFunction.test_main_validation_with_warnings","TestMainFunction.test_main_all_tests_pass","TestMainFunction.test_main_some_tests_fail","TestMainFunction.test_main_test_exception","TestMainFunction.test_main_list_engines","TestMainFunction.test_main_process_all_engines_success","TestMainFunction.test_main_process_specific_engines","TestMainFunction.test_main_process_failure","TestMainFunction.test_main_exception_handling","TestMainFunction.test_main_compare_configurations_not_implemented","TestFunctionCatalogValidation.test_main_validation_success","TestFunctionCatalogValidation.test_main_validation_failure","TestFunctionCatalogValidation.test_main_validation_exception","TestFunctionCatalogValidation.test_main_function_exists","TestDocumentationAndUsage.test_main_function_docstring","TestMainFunction.test_main_no_missing_functions","TestMainFunction.test_main_with_missing_functions_no_append","TestMainFunction.test_main_with_append","TestMainFunction.test_main_success","TestMainFunction.test_main_extraction_error","TestProjectStructure.test_main_package_import","TestMainFunction.test_main_all_checks_pass","TestMainFunction.test_main_some_checks_fail","TestMainFunction.test_main_check_exception"],"test_count":27,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.033219575881958,"execution_count":1,"average_duration":1.033219575881958,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"main","module":"visual_ocr_testing_tool","class":null,"description":"Main entry point with multi-input feed support","parameters":[],"return_type":"int","test_file":"tests/unit/test_visual_ocr_tool.py","test_description":"Tests main application entry point with command-line argument handling","field_attributes":{"return_value":{"type":"int","constraint":"0 for success, non-zero for failure","description":"Exit code indicating application result"}},"side_effects":["GUI state changes","Processing state changes","File I/O operations","Configuration state changes"],"dependencies":["argparse","PySide6","sys","pathlib","json"],"test_functions":["TestMainFunction.test_main_success","TestMainFunction.test_main_validation_success","TestMainFunction.test_main_validation_with_errors","TestMainFunction.test_main_validation_with_warnings","TestMainFunction.test_main_all_tests_pass","TestMainFunction.test_main_some_tests_fail","TestMainFunction.test_main_test_exception","TestMainFunction.test_main_list_engines","TestMainFunction.test_main_process_all_engines_success","TestMainFunction.test_main_process_specific_engines","TestMainFunction.test_main_process_failure","TestMainFunction.test_main_exception_handling","TestMainFunction.test_main_compare_configurations_not_implemented","TestFunctionCatalogValidation.test_main_validation_success","TestFunctionCatalogValidation.test_main_validation_failure","TestFunctionCatalogValidation.test_main_validation_exception","TestFunctionCatalogValidation.test_main_function_exists","TestDocumentationAndUsage.test_main_function_docstring","TestMainFunction.test_main_no_missing_functions","TestMainFunction.test_main_with_missing_functions_no_append","TestMainFunction.test_main_with_append","TestMainFunction.test_main_success","TestMainFunction.test_main_extraction_error","TestProjectStructure.test_main_package_import","TestMainFunction.test_main_all_checks_pass","TestMainFunction.test_main_some_checks_fail","TestMainFunction.test_main_check_exception"],"test_count":27}
{"function_name":"make_consensus_decision","module":"src.compareblocks.consensus.policy","class":null,"description":"Make a consensus decision for a set of variations.","parameters":["variations","scores","thresholds"],"return_type":"Any","test_file":"tests/unit/test_consensus_policy.py","test_description":"Tests make_consensus_decision functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"scores":{"type":"Any","constraint":"valid input","description":"Parameter scores"},"thresholds":{"type":"Any","constraint":"valid input","description":"Parameter thresholds"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.110443353652954,"execution_count":1,"average_duration":1.110443353652954,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"make_decision","module":"src.compareblocks.consensus.policy","class":null,"description":"Make a consensus decision for the given variations.","parameters":["self","variations","context_texts"],"return_type":"Any","test_file":"tests/unit/test_consensus_policy.py","test_description":"Tests make_decision functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.110443353652954,"execution_count":1,"average_duration":1.110443353652954,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"match_pymupdf_blocks_to_gbg","module":"compareblocks.associationmupdf_matcher","class":null,"description":"Match PyMuPDF engine blocks to GBG blocks.","parameters":["gbg_data","engine_data","similarity_threshold"],"return_type":"List[PyMuPDFMatch]","test_file":"tests/unit/test_associationmupdf_matcher.py","test_description":"Tests match_pymupdf_blocks_to_gbg functionality","field_attributes":{"gbg_data":{"type":"Any","constraint":"valid input","description":"Parameter gbg_data"},"engine_data":{"type":"Any","constraint":"valid input","description":"Parameter engine_data"},"similarity_threshold":{"type":"Any","constraint":"valid input","description":"Parameter similarity_threshold"},"return_value":{"type":"List[PyMuPDFMatch]","constraint":"valid list","description":"List[PyMuPDFMatch] result"},"performance":{"time_complexity":"O(n*m)","memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["json","PyMuPDF","rapidfuzz","pathlib","fitz"],"source_file":"src\\compareblocks\\association\\pymupdf_matcher.py","line_number":1192,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8719310760498047,"execution_count":1,"average_duration":0.8719310760498047,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"merge_by_confidence","module":"src.compareblocks.consensus.merge","class":null,"description":"Merge texts by selecting characters based on confidence scores.","parameters":["texts","confidences"],"return_type":"Any","test_file":"tests/unit/test_consensus_merge.py","test_description":"Tests merge_by_confidence functionality with real consensus data","field_attributes":{"texts":{"type":"Any","constraint":"valid input","description":"Parameter texts"},"confidences":{"type":"Any","constraint":"valid input","description":"Parameter confidences"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0672316551208496,"execution_count":1,"average_duration":1.0672316551208496,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"merge_by_majority_vote","module":"src.compareblocks.consensus.merge","class":null,"description":"Merge texts by character-level majority voting.","parameters":["texts"],"return_type":"Any","test_file":"tests/unit/test_consensus_merge.py","test_description":"Tests merge_by_majority_vote functionality with real consensus data","field_attributes":{"texts":{"type":"Any","constraint":"valid input","description":"Parameter texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0672316551208496,"execution_count":1,"average_duration":1.0672316551208496,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"merge_variations","module":"src.compareblocks.consensus.merge","class":null,"description":"Merge multiple text variations using specified strategy.","parameters":["self","variations","variation_qualities","strategy"],"return_type":"Any","test_file":"tests/unit/test_consensus_merge.py","test_description":"Tests merge_variations functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"variation_qualities":{"type":"Any","constraint":"valid input","description":"Parameter variation_qualities"},"strategy":{"type":"Any","constraint":"valid input","description":"Parameter strategy"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0672316551208496,"execution_count":1,"average_duration":1.0672316551208496,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"merge_with_quality_weights","module":"src.compareblocks.consensus.merge","class":null,"description":"Merge variations using their quality scores as weights.","parameters":["self","variations"],"return_type":"Any","test_file":"tests/unit/test_consensus_merge.py","test_description":"Tests merge_with_quality_weights functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0672316551208496,"execution_count":1,"average_duration":1.0672316551208496,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"normalize","module":"src.compareblocks.consensus.score","class":null,"description":"Normalize weights to sum to 1.0.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests normalize functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"normalize_preserving_structure","module":"src.compareblocks.normalize.textnorm","class":null,"description":"Convenience function for structure-preserving normalization","parameters":["text: str","config: Optional[NormalizationConfig] = None"],"return_type":"str","test_file":"tests/unit/test_normalization.py","test_description":"Tests convenience normalize_preserving_structure function","field_attributes":{"return_value":{"type":"str","constraint":"valid string","description":"str result"},"text":{"type":"str","constraint":"non-empty string","description":"Parameter text"},"config":{"type":"Optional[NormalizationConfig]","constraint":"valid input","description":"Parameter config","default":"None"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["TokenPreservingNormalizer"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2236049175262451,"execution_count":1,"average_duration":1.2236049175262451,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"normalize_text","module":"src.compareblocks.normalize.textnorm","class":null,"description":"Convenience function for basic text normalization","parameters":["text: str","config: Optional[NormalizationConfig] = None"],"return_type":"str","test_file":"tests/unit/test_normalization.py","test_description":"Tests convenience normalize_text function","field_attributes":{"return_value":{"type":"str","constraint":"valid string","description":"str result"},"text":{"type":"str","constraint":"non-empty string","description":"Parameter text"},"config":{"type":"Optional[NormalizationConfig]","constraint":"valid input","description":"Parameter config","default":"None"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["TextNormalizer"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2236049175262451,"execution_count":1,"average_duration":1.2236049175262451,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"parse_association_file","module":"compareblocks.association.parsers","class":null,"description":"Parse an association file using the appropriate format parser.","parameters":["file_path","content"],"return_type":"ParsedContent","test_file":"tests/unit/test_parsers.py","test_description":"Tests parse_association_file functionality","field_attributes":{"file_path":{"type":"Any","constraint":"valid input","description":"Parameter file_path"},"content":{"type":"Any","constraint":"valid input","description":"Parameter content"},"return_value":{"type":"ParsedContent","constraint":"valid return value","description":"ParsedContent result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\association\\parsers.py","line_number":436,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846378326416016,"execution_count":1,"average_duration":0.8846378326416016,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"process_all_engines_dual_output","module":"compareblocks.engines.dual_output_processor","class":null,"description":"Process all available engines with dual output.","parameters":["pdf_path"],"return_type":"Dict[str, DualOutputResult]","test_file":"tests/unit/test_dual_output_processor.py","test_description":"Tests process_all_engines_dual_output functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"Dict[str, DualOutputResult]","constraint":"valid dictionary","description":"Processed dict[str, dualoutputresult] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Processing state changes"],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\dual_output_processor.py","line_number":538,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8411269187927246,"execution_count":1,"average_duration":0.8411269187927246,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"process_all_engines_with_gbg_integration","module":"compareblocks.engines.comprehensive_engine_gbg_processor","class":null,"description":"Process all engines with optimized configurations and integrate into GBG analysis.","parameters":["pdf_path","gbg_analysis_path"],"return_type":"ComprehensiveProcessingResult","test_file":"tests/unit/test_comprehensive_engine_gbg_processor.py","test_description":"Tests process_all_engines_with_gbg_integration functionality","field_attributes":{},"side_effects":[],"dependencies":[],"source_file":"src\\compareblocks\\engines\\comprehensive_engine_gbg_processor.py","line_number":704,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8798336982727051,"execution_count":1,"average_duration":0.8798336982727051,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"process_engine_dual_output","module":"compareblocks.engines.dual_output_processor","class":null,"description":"Process single engine with dual output.","parameters":["engine_name","pdf_path"],"return_type":"DualOutputResult","test_file":"tests/unit/test_dual_output_processor.py","test_description":"Tests process_engine_dual_output functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"DualOutputResult","constraint":"valid return value","description":"Processed dualoutputresult result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Processing state changes"],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\dual_output_processor.py","line_number":532,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8411269187927246,"execution_count":1,"average_duration":0.8411269187927246,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"process_engines_with_gbg_integration","module":"compareblocks.engines.gbg_integrated_processor","class":null,"description":"Process engines and integrate into GBG analysis.","parameters":["pdf_path"],"return_type":"GBGIntegratedResult","test_file":"tests/unit/test_gbg_integrated_processor.py","test_description":"Tests process_engines_with_gbg_integration functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"GBGIntegratedResult","constraint":"valid return value","description":"Processed gbgintegratedresult result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Processing state changes"],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\gbg_integrated_processor.py","line_number":546,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8957972526550293,"execution_count":1,"average_duration":0.8957972526550293,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"process_pdf_with_integrated_engines","module":"compareblocks.engines.integrated_processor","class":null,"description":"Process PDF with integrated engine approach.","parameters":["pdf_path"],"return_type":"IntegratedResult","test_file":"tests/unit/test_integrated_processor.py","test_description":"Tests process_pdf_with_integrated_engines functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"IntegratedResult","constraint":"valid return value","description":"Processed integratedresult result"},"performance":{"time_complexity":"O(pages)","memory_usage":"High - PDF document in memory","io_operations":"PDF file access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["PyMuPDF","fitz"],"source_file":"src\\compareblocks\\engines\\integrated_processor.py","line_number":370,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9608924388885498,"execution_count":1,"average_duration":0.9608924388885498,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"rank_by_anomaly_score","module":"src.compareblocks.features.anomaly","class":null,"description":"Rank variations by anomaly score (lower is better).","parameters":["self","variations"],"return_type":"Any","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests rank_by_anomaly_score functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":["TestAnomalyDetector.test_rank_by_anomaly_score"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"rank_by_context_relevance","module":"src.compareblocks.features.context","class":null,"description":"Rank variations by context relevance score.","parameters":["self","variations","context_texts"],"return_type":"Any","test_file":"tests/unit/test_features_context.py","test_description":"Tests rank_by_context_relevance functionality with real PDF data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":["TestContextSimilarityExtractor.test_rank_by_context_relevance"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2251174449920654,"execution_count":1,"average_duration":1.2251174449920654,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"rank_variations","module":"src.compareblocks.consensus.score","class":null,"description":"Rank variations by score (best first).","parameters":["self","variations","context_texts"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests rank_variations functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"rank_variations_by_score","module":"src.compareblocks.consensus.score","class":null,"description":"Rank variations by their final scores in descending order.","parameters":["scores"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests rank_variations_by_score functionality with real consensus data","field_attributes":{"scores":{"type":"Any","constraint":"valid input","description":"Parameter scores"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":["TestVariationRanking.test_rank_variations_by_score"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"rebuild_all_comparisons","module":"src.compareblocks.processing.dynamic_reprocessor","class":null,"description":"Rebuild all comparisons for a PDF.","parameters":["pdf_path: Any","storage_mode: Any"],"return_type":"Any","test_file":"tests/unit/test_dynamic_reprocessor.py","test_description":"Tests rebuild_all_comparisons functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8613464832305908,"execution_count":1,"average_duration":0.8613464832305908,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"record_performance","module":"compareblocks.testing.performance_tracker","class":null,"description":"Record a performance metric.","parameters":["engine_name","function_name","pdf_file","pdf_size_mb","pdf_pages","execution_time","success","memory_usage_mb","cpu_usage_percent","output_size_bytes","error_message"],"return_type":"Any","test_file":"tests/unit/test_performance_tracker.py","test_description":"Tests record_performance functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"function_name":{"type":"Any","constraint":"valid input","description":"Parameter function_name"},"pdf_file":{"type":"Any","constraint":"valid input","description":"Parameter pdf_file"},"pdf_size_mb":{"type":"Any","constraint":"valid input","description":"Parameter pdf_size_mb"},"pdf_pages":{"type":"Any","constraint":"valid input","description":"Parameter pdf_pages"},"execution_time":{"type":"Any","constraint":"valid input","description":"Parameter execution_time"},"success":{"type":"Any","constraint":"valid input","description":"Parameter success"},"memory_usage_mb":{"type":"Any","constraint":"valid input","description":"Parameter memory_usage_mb"},"cpu_usage_percent":{"type":"Any","constraint":"valid input","description":"Parameter cpu_usage_percent"},"output_size_bytes":{"type":"Any","constraint":"valid input","description":"Parameter output_size_bytes"},"error_message":{"type":"Any","constraint":"valid input","description":"Parameter error_message"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\performance_tracker.py","line_number":563,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846070766448975,"execution_count":1,"average_duration":0.8846070766448975,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"register_parser","module":"compareblocks.association.parsers","class":null,"description":"Register a new parser for a format type.","parameters":["format_type","parser"],"return_type":"None","test_file":"tests/unit/test_parsers.py","test_description":"Tests register_parser functionality","field_attributes":{"format_type":{"type":"Any","constraint":"valid input","description":"Parameter format_type"},"parser":{"type":"Any","constraint":"valid input","description":"Parameter parser"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\association\\parsers.py","line_number":453,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8846378326416016,"execution_count":1,"average_duration":0.8846378326416016,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"run_basic_tests","module":"validate_setup","class":null,"description":"Run basic project structure tests","parameters":[],"return_type":"bool","test_file":"tests/unit/test_setup_validation.py","test_description":"Tests execution of basic project structure validation tests","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"True if basic tests pass"}},"side_effects":["Subprocess execution of pytest","Processing state changes"],"dependencies":["subprocess","pytest"],"test_functions":["TestBasicTestsRun.test_run_basic_tests_success","TestBasicTestsRun.test_run_basic_tests_failure"],"test_count":2,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":2.583890438079834,"execution_count":1,"average_duration":2.583890438079834,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"run_cli_mode","module":"compareblocks.gui.app","class":null,"description":"Run the CLI version of the application.","parameters":[],"return_type":"int","test_file":"tests/unit/test_app.py","test_description":"Tests run_cli_mode functionality","field_attributes":{"return_value":{"type":"int","constraint":"valid integer","description":"int result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\app.py","line_number":460,"test_functions":[],"test_count":0}
{"function_name":"run_cli_optimization","module":"visual_ocr_testing_tool","class":null,"description":"Run CLI OCR optimization with feed support","parameters":["args","engine=None"],"return_type":"int","test_file":"tests/unit/test_visual_ocr_tool.py","test_description":"Tests CLI-based OCR optimization workflow","field_attributes":{"args":{"type":"argparse.Namespace","constraint":"valid input","description":"Command-line arguments"},"engine":{"type":"OCROptimizationEngine","constraint":"valid input","description":"OCR engine instance","default":"None"},"return_value":{"type":"int","constraint":"0 for success, 1 for failure","description":"Exit code indicating optimization result"}},"side_effects":["Processing state changes","File I/O operations","Logging operations"],"dependencies":["pathlib","datetime","json"],"test_functions":[],"test_count":0}
{"function_name":"run_comprehensive_engine_validation","module":"compareblocks.testing.engine_validator","class":null,"description":"Run comprehensive validation of all engines.","parameters":["pdf_path"],"return_type":"str","test_file":"tests/unit/test_engine_validator.py","test_description":"Tests run_comprehensive_engine_validation functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"str","constraint":"valid string","description":"str result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\engine_validator.py","line_number":633,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.865286111831665,"execution_count":1,"average_duration":0.865286111831665,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"run_debug_extraction","module":"visual_ocr_testing_tool","class":null,"description":"Run debug image extraction","parameters":["args"],"return_type":"int","test_file":"tests/unit/test_visual_ocr_tool.py","test_description":"Tests debug image extraction workflow","field_attributes":{"args":{"type":"argparse.Namespace","constraint":"valid input","description":"Command-line arguments"},"return_value":{"type":"int","constraint":"0 for success, 1 for failure","description":"Exit code indicating extraction result"}},"side_effects":["Creates or modifies files","File I/O operations","Opens browser for report viewing"],"dependencies":["pathlib","webbrowser"],"test_functions":[],"test_count":0}
{"function_name":"run_engine_test","module":"visual_ocr_testing_tool","class":null,"description":"Run improved engine test with feed support","parameters":["args","engine=None"],"return_type":"int","test_file":"tests/unit/test_visual_ocr_tool.py","test_description":"Tests improved OCR engine testing workflow","field_attributes":{"args":{"type":"argparse.Namespace","constraint":"valid input","description":"Command-line arguments"},"engine":{"type":"OCROptimizationEngine","constraint":"valid input","description":"OCR engine instance","default":"None"},"return_value":{"type":"int","constraint":"0 for success, 1 for failure","description":"Exit code indicating test result"}},"side_effects":["Processing state changes","File I/O operations","Logging operations"],"dependencies":["pathlib","datetime"],"test_functions":[],"test_count":0}
{"function_name":"run_gui_mode","module":"compareblocks.gui.app","class":null,"description":"Run the GUI application.","parameters":[],"return_type":"int","test_file":"tests/unit/test_app.py","test_description":"Tests run_gui_mode functionality","field_attributes":{"return_value":{"type":"int","constraint":"valid integer","description":"int result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["GUI state changes","User interaction events"],"dependencies":["PySide6"],"source_file":"src\\compareblocks\\gui\\app.py","line_number":443,"test_functions":[],"test_count":0}
{"function_name":"run_mcp_tests","module":"functions.run_mcp_tests","class":null,"description":"Run all MCP tests with coverage","parameters":[],"return_type":"None","test_file":"tests/unit/test_mcp_test_runner.py","test_description":"Tests execution of MCP integration tests with coverage tracking","field_attributes":{"return_value":{"type":"None","constraint":"no return value","description":"Executes MCP tests"}},"side_effects":["Subprocess execution of pytest","Processing state changes","Logging operations"],"dependencies":["subprocess","pytest","sys"],"test_functions":["TestRunMCPTests.test_run_mcp_tests_success","TestRunMCPTests.test_run_mcp_tests_failure"],"test_count":2,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9502336978912354,"execution_count":1,"average_duration":0.9502336978912354,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"save_analytics_report","module":"compareblocks.analytics.report_generator","class":null,"description":"Convenience function to save an analytics report.","parameters":["report","output_path"],"return_type":"Path","test_file":"tests/unit/test_report_generator.py","test_description":"Tests save_analytics_report functionality","field_attributes":{"report":{"type":"Any","constraint":"valid input","description":"Parameter report"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"return_value":{"type":"Path","constraint":"valid return value","description":"Path result"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","Creates or modifies files"],"dependencies":["numpy","pandas","pathlib"],"source_file":"src\\compareblocks\\analytics\\report_generator.py","line_number":573,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":1.0116229057312012,"execution_count":1,"average_duration":1.0116229057312012,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"save_debug_images","module":"optimize_tesseract_for_clear_text","class":null,"description":"Save debug images for visual inspection","parameters":["region","expected_text","block_id","preprocessing_methods"],"return_type":"Path","test_file":"tests/unit/test_ocr_optimization.py","test_description":"Tests saving of debug images for OCR analysis","field_attributes":{"region":{"type":"numpy.ndarray","constraint":"valid input","description":"Original image region"},"expected_text":{"type":"str","constraint":"non-empty string","description":"Expected text for labeling"},"block_id":{"type":"str","constraint":"non-empty string","description":"Block identifier for naming"},"preprocessing_methods":{"type":"List[Tuple[str, Callable]]","constraint":"valid list","description":"List of preprocessing methods"},"return_value":{"type":"Path","constraint":"valid file path","description":"Path to debug images directory"}},"side_effects":["Creates or modifies files","File I/O operations"],"dependencies":["cv2","pathlib"],"test_functions":["TestDebugImages.test_save_debug_images"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1013386249542236,"execution_count":1,"average_duration":1.1013386249542236,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"save_docling_extraction","module":"compareblocks.engines.docling_engine","class":null,"description":"Extract and save Docling data.","parameters":["pdf_path","output_path","pipeline","export_format"],"return_type":"str","test_file":"tests/unit/test_docling_engine.py","test_description":"Tests save_docling_extraction functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"pipeline":{"type":"Any","constraint":"valid input","description":"Parameter pipeline"},"export_format":{"type":"Any","constraint":"valid input","description":"Parameter export_format"},"return_value":{"type":"str","constraint":"valid string","description":"Extracted str data"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","Creates or modifies files"],"dependencies":["PyMuPDF","pathlib","fitz"],"source_file":"src\\compareblocks\\engines\\docling_engine.py","line_number":329,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8686854839324951,"execution_count":1,"average_duration":0.8686854839324951,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"save_integrated_engine_processing","module":"compareblocks.engines.integrated_processor","class":null,"description":"Process and save integrated engine results.","parameters":["pdf_path","output_path"],"return_type":"str","test_file":"tests/unit/test_integrated_processor.py","test_description":"Tests save_integrated_engine_processing functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"return_value":{"type":"str","constraint":"valid string","description":"Processed str result"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","Creates or modifies files"],"dependencies":["PyMuPDF","pathlib","fitz"],"source_file":"src\\compareblocks\\engines\\integrated_processor.py","line_number":376,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9608924388885498,"execution_count":1,"average_duration":0.9608924388885498,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"save_kreuzberg_extraction","module":"compareblocks.engines.kreuzberg_engine","class":null,"description":"Extract and save Kreuzberg data.","parameters":["pdf_path","output_path","ocr_backend","output_format"],"return_type":"str","test_file":"tests/unit/test_kreuzberg_engine.py","test_description":"Tests save_kreuzberg_extraction functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"ocr_backend":{"type":"Any","constraint":"valid input","description":"Parameter ocr_backend"},"output_format":{"type":"Any","constraint":"valid input","description":"Parameter output_format"},"return_value":{"type":"str","constraint":"valid string","description":"Extracted str data"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","Creates or modifies files"],"dependencies":["PyMuPDF","pathlib","fitz"],"source_file":"src\\compareblocks\\engines\\kreuzberg_engine.py","line_number":261,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9168534278869629,"execution_count":1,"average_duration":0.9168534278869629,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"save_paddleocr_extraction","module":"compareblocks.engines.paddleocr_engine","class":null,"description":"Extract and save PaddleOCR data.","parameters":["pdf_path","output_path","lang","use_gpu"],"return_type":"str","test_file":"tests/unit/test_paddleocr_engine.py","test_description":"Tests save_paddleocr_extraction functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"lang":{"type":"Any","constraint":"valid input","description":"Parameter lang"},"use_gpu":{"type":"Any","constraint":"valid input","description":"Parameter use_gpu"},"return_value":{"type":"str","constraint":"valid string","description":"Extracted str data"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","Creates or modifies files"],"dependencies":["PyMuPDF","fitz","tesseract","pathlib","paddleocr"],"source_file":"src\\compareblocks\\engines\\paddleocr_engine.py","line_number":346,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9843807220458984,"execution_count":1,"average_duration":0.9843807220458984,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"save_raw_pymupdf_extraction","module":"compareblocks.enginesmupdf_engine","class":null,"description":"Extract and save raw PyMuPDF data.","parameters":["pdf_path","output_path"],"return_type":"str","test_file":"tests/unit/test_enginesmupdf_engine.py","test_description":"Tests save_raw_pymupdf_extraction functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"return_value":{"type":"str","constraint":"valid string","description":"Extracted str data"},"performance":{"memory_usage":"High - PDF document in memory","io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","Creates or modifies files"],"dependencies":["PyMuPDF","pathlib","fitz"],"source_file":"src\\compareblocks\\engines\\pymupdf_engine.py","line_number":255,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8638079166412354,"execution_count":1,"average_duration":0.8638079166412354,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"save_tesseract_extraction","module":"compareblocks.engines.tesseract_engine","class":null,"description":"Extract and save Tesseract OCR data.","parameters":["pdf_path","output_path","dpi","lang"],"return_type":"str","test_file":"tests/unit/test_tesseract_engine.py","test_description":"Tests save_tesseract_extraction functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"output_path":{"type":"Any","constraint":"valid input","description":"Parameter output_path"},"dpi":{"type":"Any","constraint":"valid input","description":"Parameter dpi"},"lang":{"type":"Any","constraint":"valid input","description":"Parameter lang"},"return_value":{"type":"str","constraint":"valid string","description":"Extracted str data"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations","Creates or modifies files"],"dependencies":["PyMuPDF","pathlib","fitz"],"source_file":"src\\compareblocks\\engines\\tesseract_engine.py","line_number":359,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":23.896570682525635,"execution_count":1,"average_duration":23.896570682525635,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"save_test_result_to_database","module":"visual_ocr_testing_functions","class":null,"description":"Save a test result to the database with proper serialization and error handling","parameters":[{"name":"result","type":"TestResult","description":"TestResult object to save"},{"name":"db_path","type":"str","description":"Path to the database","default":"output/ocr_test_results.db"}],"return_type":"bool","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests saving test results with proper serialization of metadata and timestamps","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"bool result"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["Database write operation","JSON serialization of metadata","Timestamp conversion to ISO format"],"dependencies":["sqlite3","json","visual_ocr_testing_tool.TestResult"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"save_test_result_to_database","module":"functions.visual_ocr_testing_functions","class":null,"description":"Save a test result to the database","parameters":["result: TestResult","db_path: str = \"output/ocr_test_results.db\""],"return_type":"bool","test_file":"tests/unit/test_visual_ocr_functions.py","test_description":"Tests saving test results to SQLite database","field_attributes":{"result":{"type":"TestResult","constraint":"valid input","description":"TestResult object to save"},"db_path":{"type":"str","constraint":"valid file path","description":"Path to the database","default":"\"output/ocr_test_results.db\""},"return_value":{"type":"bool","constraint":"boolean value","description":"True if save was successful"}},"side_effects":["Creates or modifies files","File I/O operations"],"dependencies":["sqlite3","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0623822212219238,"execution_count":1,"average_duration":1.0623822212219238,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"score_single_variation","module":"src.compareblocks.consensus.score","class":null,"description":"Score a single text variation using all available features.","parameters":["variation","context_variations","weights","thresholds"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests score_single_variation functionality with real consensus data","field_attributes":{"variation":{"type":"Any","constraint":"valid input","description":"Parameter variation"},"context_variations":{"type":"Any","constraint":"valid input","description":"Parameter context_variations"},"weights":{"type":"Any","constraint":"valid input","description":"Parameter weights"},"thresholds":{"type":"Any","constraint":"valid input","description":"Parameter thresholds"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":["TestConsensusScoring.test_score_single_variation"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"score_variation","module":"src.compareblocks.consensus.score","class":null,"description":"Score a single text variation.","parameters":["self","variation_text","engine_name","variation_index","all_variations","expected_orientation","actual_orientation","context_texts"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests score_variation functionality with real consensus data","field_attributes":{"variation_text":{"type":"Any","constraint":"valid input","description":"Parameter variation_text"},"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"variation_index":{"type":"Any","constraint":"valid input","description":"Parameter variation_index"},"all_variations":{"type":"Any","constraint":"valid input","description":"Parameter all_variations"},"expected_orientation":{"type":"Any","constraint":"valid input","description":"Parameter expected_orientation"},"actual_orientation":{"type":"Any","constraint":"valid input","description":"Parameter actual_orientation"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"score_variations","module":"src.compareblocks.consensus.score","class":null,"description":"Score multiple text variations.","parameters":["self","variations","context_texts"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests score_variations functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"context_texts":{"type":"Any","constraint":"valid input","description":"Parameter context_texts"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"should_be_in_index","module":"analyze_missing_files_and_functions","class":null,"description":"Determine if a file should be in the file index.","parameters":["file_info: Any"],"return_type":"bool","test_file":"tests/unit/test_analyze_missing_files_and_functions.py","test_description":"Tests should_be_in_index functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8891410827636719,"execution_count":1,"average_duration":0.8891410827636719,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"should_merge_variations","module":"src.compareblocks.consensus.policy","class":null,"description":"Determine if variations should be merged based on similarity.","parameters":["variations","scores","threshold"],"return_type":"Any","test_file":"tests/unit/test_consensus_policy.py","test_description":"Tests should_merge_variations functionality with real consensus data","field_attributes":{"variations":{"type":"Any","constraint":"valid input","description":"Parameter variations"},"scores":{"type":"Any","constraint":"valid input","description":"Parameter scores"},"threshold":{"type":"Any","constraint":"valid input","description":"Parameter threshold"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":["TestMergeCandidateIdentification.test_should_merge_variations"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.110443353652954,"execution_count":1,"average_duration":1.110443353652954,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"show_remaining_issues","module":"show_remaining_issues","class":null,"description":"Show the remaining matching issues.","parameters":[],"return_type":"Any","test_file":"tests/unit/test_show_remaining_issues.py","test_description":"Tests show_remaining_issues functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":["TestShowRemainingIssues.test_show_remaining_issues_success"],"test_count":1}
{"function_name":"test_configuration","module":"validate_configuration","class":null,"description":"Test the configuration setup","parameters":[],"return_type":"bool","test_file":"tests/unit/test_configuration_validation.py","test_description":"Tests configuration loading and validation","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"True if configuration is valid"}},"side_effects":["Configuration state changes","May raise ValidationError"],"dependencies":["pathlib","json"],"test_functions":["TestConfigurationValidation.test_test_configuration_success"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0275442600250244,"execution_count":1,"average_duration":1.0275442600250244,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"test_current_preprocessing","module":"optimize_tesseract_for_clear_text","class":null,"description":"Test current aggressive preprocessing (for comparison)","parameters":["image"],"return_type":"numpy.ndarray","test_file":"tests/unit/test_ocr_optimization.py","test_description":"Tests aggressive preprocessing with adaptive thresholding","field_attributes":{"image":{"type":"numpy.ndarray","constraint":"valid input","description":"Input image array"},"return_value":{"type":"numpy.ndarray","constraint":"valid return value","description":"Processed enhanced image"}},"side_effects":["Memory allocation for image processing"],"dependencies":["cv2","numpy"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1013386249542236,"execution_count":1,"average_duration":1.1013386249542236,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"test_enhanced_preprocessing","module":"optimize_tesseract_for_clear_text","class":null,"description":"Test enhanced preprocessing with morphological operations","parameters":["image"],"return_type":"numpy.ndarray","test_file":"tests/unit/test_ocr_optimization.py","test_description":"Tests enhanced preprocessing with morphological cleaning","field_attributes":{"image":{"type":"numpy.ndarray","constraint":"valid input","description":"Input image array"},"return_value":{"type":"numpy.ndarray","constraint":"valid return value","description":"Processed cleaned image"}},"side_effects":["Memory allocation for image processing"],"dependencies":["cv2","numpy"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1013386249542236,"execution_count":1,"average_duration":1.1013386249542236,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"test_file_paths","module":"validate_configuration","class":null,"description":"Test all configured file paths","parameters":[],"return_type":"bool","test_file":"tests/unit/test_configuration_validation.py","test_description":"Tests validation of all configured file paths","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"True if all paths are valid"}},"side_effects":["File I/O operations","May raise FileNotFoundError"],"dependencies":["pathlib"],"test_functions":["TestFilePathValidation.test_test_file_paths_success"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0275442600250244,"execution_count":1,"average_duration":1.0275442600250244,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"test_gbg_processor","module":"validate_configuration","class":null,"description":"Test the GBG processor with configuration","parameters":[],"return_type":"bool","test_file":"tests/unit/test_configuration_validation.py","test_description":"Tests GBG processor initialization and basic functionality","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"True if GBG processor works correctly"}},"side_effects":["Opens/closes PDF documents","Memory allocation for PDF processing"],"dependencies":["fitz","PyMuPDF"],"test_functions":["TestGBGProcessorValidation.test_test_gbg_processor_success"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0275442600250244,"execution_count":1,"average_duration":1.0275442600250244,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"test_light_preprocessing","module":"optimize_tesseract_for_clear_text","class":null,"description":"Test light preprocessing - grayscale + light denoising","parameters":["image"],"return_type":"numpy.ndarray","test_file":"tests/unit/test_ocr_optimization.py","test_description":"Tests light image preprocessing with bilateral filtering","field_attributes":{"image":{"type":"numpy.ndarray","constraint":"valid input","description":"Input image array"},"return_value":{"type":"numpy.ndarray","constraint":"valid return value","description":"Processed denoised image"}},"side_effects":["Memory allocation for image processing"],"dependencies":["cv2","numpy"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1013386249542236,"execution_count":1,"average_duration":1.1013386249542236,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"test_minimal_preprocessing","module":"optimize_tesseract_for_clear_text","class":null,"description":"Test minimal preprocessing - just grayscale conversion","parameters":["image"],"return_type":"numpy.ndarray","test_file":"tests/unit/test_ocr_optimization.py","test_description":"Tests minimal image preprocessing for OCR optimization","field_attributes":{"image":{"type":"numpy.ndarray","constraint":"valid input","description":"Input image array"},"return_value":{"type":"numpy.ndarray","constraint":"valid return value","description":"Processed grayscale image"}},"side_effects":["Memory allocation for image processing"],"dependencies":["cv2","numpy"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1013386249542236,"execution_count":1,"average_duration":1.1013386249542236,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"test_ocr_configuration","module":"optimize_tesseract_for_clear_text","class":null,"description":"Test a specific OCR configuration","parameters":["region","expected_text","preprocessing_func","tesseract_config"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_ocr_optimization.py","test_description":"Tests OCR configuration performance with specific parameters","field_attributes":{"region":{"type":"numpy.ndarray","constraint":"valid input","description":"Image region to process"},"expected_text":{"type":"str","constraint":"non-empty string","description":"Expected OCR result"},"preprocessing_func":{"type":"Callable","constraint":"valid input","description":"Preprocessing function to apply"},"tesseract_config":{"type":"Dict[str, str]","constraint":"valid dictionary","description":"Tesseract configuration dictionary"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"OCR test results with metrics"}},"side_effects":["OCR processing operations","Memory allocation for image processing"],"dependencies":["tesseract","cv2","numpy","rapidfuzz"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1013386249542236,"execution_count":1,"average_duration":1.1013386249542236,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"test_output_generation","module":"validate_configuration","class":null,"description":"Test output file generation","parameters":[],"return_type":"bool","test_file":"tests/unit/test_configuration_validation.py","test_description":"Tests generation and validation of output files","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"True if output generation works"}},"side_effects":["Creates or modifies files","File I/O operations"],"dependencies":["json","pathlib"],"test_functions":["TestOutputGeneration.test_test_output_generation_success"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0275442600250244,"execution_count":1,"average_duration":1.0275442600250244,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"test_tesseract_configs","module":"optimize_tesseract_for_clear_text","class":null,"description":"Test different Tesseract configurations","parameters":[],"return_type":"List[Dict[str, str]]","test_file":"tests/unit/test_ocr_optimization.py","test_description":"Tests various Tesseract configuration options","field_attributes":{"return_value":{"type":"List[Dict[str, str]]","constraint":"non-empty list","description":"List of Tesseract configuration dictionaries"}},"side_effects":[],"dependencies":["tesseract"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.1013386249542236,"execution_count":1,"average_duration":1.1013386249542236,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"to_dict","module":"src.compareblocks.features.core","class":null,"description":"Convert features to dictionary format.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_features_lengths.py","test_description":"Tests to_dict functionality with real PDF data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":["TestProcessingSession.test_to_dict"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.21600341796875,"execution_count":1,"average_duration":1.21600341796875,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"to_dict","module":"src.compareblocks.features.language","class":null,"description":"Convert features to dictionary format.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_features_language.py","test_description":"Tests to_dict functionality with real PDF data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":["TestProcessingSession.test_to_dict"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.128654956817627,"execution_count":1,"average_duration":1.128654956817627,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"to_dict","module":"src.compareblocks.features.anomaly","class":null,"description":"Convert features to dictionary format.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_features_anomalies.py","test_description":"Tests to_dict functionality with real PDF data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":["TestProcessingSession.test_to_dict"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.094435214996338,"execution_count":1,"average_duration":1.094435214996338,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"to_dict","module":"src.compareblocks.features.context","class":null,"description":"Convert features to dictionary format.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_features_context.py","test_description":"Tests to_dict functionality with real PDF data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["langdetect","rapidfuzz"],"test_functions":["TestProcessingSession.test_to_dict"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.2251174449920654,"execution_count":1,"average_duration":1.2251174449920654,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"to_dict","module":"src.compareblocks.consensus.guard","class":null,"description":"Convert to dictionary format.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_consensus_guard.py","test_description":"Tests to_dict functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":["TestProcessingSession.test_to_dict"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":0.8132691383361816,"execution_count":1,"average_duration":0.8132691383361816,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"to_dict","module":"src.compareblocks.consensus.merge","class":null,"description":"Convert to dictionary format.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_consensus_merge.py","test_description":"Tests to_dict functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":["TestProcessingSession.test_to_dict"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0672316551208496,"execution_count":1,"average_duration":1.0672316551208496,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"to_dict","module":"src.compareblocks.consensus.policy","class":null,"description":"Convert to dictionary format.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_consensus_policy.py","test_description":"Tests to_dict functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":["TestProcessingSession.test_to_dict"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.110443353652954,"execution_count":1,"average_duration":1.110443353652954,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"to_dict","module":"src.compareblocks.consensus.score","class":null,"description":"Convert to dictionary format.","parameters":["self"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests to_dict functionality with real consensus data","field_attributes":{"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":["TestProcessingSession.test_to_dict"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"track_association_metadata","module":"compareblocks.association.manager","class":null,"description":"Convenience function to get association metadata.","parameters":["pdf_path"],"return_type":"Dict[str, AssociationMetadata]","test_file":"tests/unit/test_manager.py","test_description":"Tests track_association_metadata functionality","field_attributes":{"pdf_path":{"type":"Any","constraint":"valid input","description":"Parameter pdf_path"},"return_value":{"type":"Dict[str, AssociationMetadata]","constraint":"valid dictionary","description":"Dict[str, AssociationMetadata] result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["json","pathlib"],"source_file":"src\\compareblocks\\association\\manager.py","line_number":148,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"track_character_consistency","module":"src.compareblocks.features.consistency","class":null,"description":"Convenience function to track character consistency for a block.","parameters":["block_id: Any","variations: Any","override_terms: Any"],"return_type":"Any","test_file":"tests/integration/test_consistency.py","test_description":"Tests track_character_consistency functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"track_file_type_test","module":"compareblocks.testing.coverage_tracker","class":null,"description":"Track a file type test result.","parameters":["engine_name","file_type","file_path","test_success","extraction_time","output_quality_score","error_message"],"return_type":"Any","test_file":"tests/unit/test_coverage_tracker.py","test_description":"Tests track_file_type_test functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"file_type":{"type":"Any","constraint":"valid input","description":"Parameter file_type"},"file_path":{"type":"Any","constraint":"valid input","description":"Parameter file_path"},"test_success":{"type":"Any","constraint":"valid input","description":"Parameter test_success"},"extraction_time":{"type":"Any","constraint":"valid input","description":"Parameter extraction_time"},"output_quality_score":{"type":"Any","constraint":"valid input","description":"Parameter output_quality_score"},"error_message":{"type":"Any","constraint":"valid input","description":"Parameter error_message"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\coverage_tracker.py","line_number":591,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8736326694488525,"execution_count":1,"average_duration":0.8736326694488525,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"track_parameter_test","module":"compareblocks.testing.coverage_tracker","class":null,"description":"Track a parameter test result.","parameters":["engine_name","function_name","parameter_set","test_success","execution_time","pdf_file","test_output_size","error_message"],"return_type":"Any","test_file":"tests/unit/test_coverage_tracker.py","test_description":"Tests track_parameter_test functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"function_name":{"type":"Any","constraint":"valid input","description":"Parameter function_name"},"parameter_set":{"type":"Any","constraint":"valid input","description":"Parameter parameter_set"},"test_success":{"type":"Any","constraint":"valid input","description":"Parameter test_success"},"execution_time":{"type":"Any","constraint":"valid input","description":"Parameter execution_time"},"pdf_file":{"type":"Any","constraint":"valid input","description":"Parameter pdf_file"},"test_output_size":{"type":"Any","constraint":"valid input","description":"Parameter test_output_size"},"error_message":{"type":"Any","constraint":"valid input","description":"Parameter error_message"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["time","pytest"],"source_file":"src\\compareblocks\\testing\\coverage_tracker.py","line_number":569,"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8736326694488525,"execution_count":1,"average_duration":0.8736326694488525,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"track_pdf_consistency","module":"src.compareblocks.features.consistency_integration","class":null,"description":"Convenience function to track consistency for all blocks in a PDF.","parameters":["pdf_path: Any","block_variations: Any"],"return_type":"Any","test_file":"tests/integration/test_consistency_integration.py","test_description":"Tests track_pdf_consistency functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0}
{"function_name":"update_consistency_percentages","module":"src.compareblocks.processing.dynamic_reprocessor","class":null,"description":"Update consistency percentages for a PDF.","parameters":["pdf_path: Any"],"return_type":"None","test_file":"tests/unit/test_dynamic_reprocessor.py","test_description":"Tests update_consistency_percentages functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.8613464832305908,"execution_count":1,"average_duration":0.8613464832305908,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"update_function_catalog_with_tests","module":"build_test_catalog","class":null,"description":"Update function catalog entries to include their corresponding test names.","parameters":["test_entries: Any"],"return_type":"None","test_file":"tests/unit/test_build_test_catalog.py","test_description":"Tests update_function_catalog_with_tests functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.862572431564331,"execution_count":1,"average_duration":0.862572431564331,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"update_guard_thresholds","module":"src.compareblocks.consensus.guard","class":null,"description":"Update guard thresholds.","parameters":["self","new_thresholds"],"return_type":"Any","test_file":"tests/unit/test_consensus_guard.py","test_description":"Tests update_guard_thresholds functionality with real consensus data","field_attributes":{"new_thresholds":{"type":"Any","constraint":"valid input","description":"Parameter new_thresholds"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":0.8132691383361816,"execution_count":1,"average_duration":0.8132691383361816,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"update_policy_thresholds","module":"src.compareblocks.consensus.policy","class":null,"description":"Update policy thresholds.","parameters":["self","new_thresholds"],"return_type":"Any","test_file":"tests/unit/test_consensus_policy.py","test_description":"Tests update_policy_thresholds functionality with real consensus data","field_attributes":{"new_thresholds":{"type":"Any","constraint":"valid input","description":"Parameter new_thresholds"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":["TestPolicyConfiguration.test_update_policy_thresholds"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.110443353652954,"execution_count":1,"average_duration":1.110443353652954,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"update_thresholds","module":"src.compareblocks.consensus.score","class":null,"description":"Update scoring thresholds.","parameters":["self","new_thresholds"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests update_thresholds functionality with real consensus data","field_attributes":{"new_thresholds":{"type":"Any","constraint":"valid input","description":"Parameter new_thresholds"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":["TestScorerConfiguration.test_update_thresholds"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"update_weights","module":"src.compareblocks.consensus.score","class":null,"description":"Update scoring weights.","parameters":["self","new_weights"],"return_type":"Any","test_file":"tests/unit/test_consensus_score.py","test_description":"Tests update_weights functionality with real consensus data","field_attributes":{"new_weights":{"type":"Any","constraint":"valid input","description":"Parameter new_weights"},"return_value":{"type":"Any","constraint":"valid return value","description":"Any result"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":[],"dependencies":["statistics"],"test_functions":["TestScorerConfiguration.test_update_weights"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":"2025-10-31T02:13:31.284628","last_error_message":null,"execution_duration":1.2991752624511719,"execution_count":2,"average_duration":1.750881314277649,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"validate_all_engines","module":"compareblocks.testing.engine_validator","class":null,"description":"Validate test coverage for all engines.","parameters":[],"return_type":"Dict[str, EngineTestCoverage]","test_file":"tests/unit/test_engine_validator.py","test_description":"Tests validate_all_engines functionality","field_attributes":{"return_value":{"type":"Dict[str, EngineTestCoverage]","constraint":"valid dictionary","description":"Validation result"},"performance":{"time_complexity":"O(1)","memory_usage":"Low - Validation operations"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["May raise ValidationError"],"dependencies":["jsonschema","time","pytest"],"source_file":"src\\compareblocks\\testing\\engine_validator.py","line_number":627,"test_functions":["TestEngineValidator.test_validate_all_engines"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.865286111831665,"execution_count":1,"average_duration":0.865286111831665,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"validate_catalog","module":"functions.validate_catalog","class":null,"description":"Validate the entire function catalog","parameters":["catalog_path: Path"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_catalog_validation.py","test_description":"Tests comprehensive validation of function catalog","field_attributes":{"catalog_path":{"type":"Path","constraint":"valid file path","description":"Path to function catalog file"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Validation results and statistics"}},"side_effects":["File I/O operations","May raise FileNotFoundError"],"dependencies":["json","pathlib"],"test_functions":["TestValidateCatalog.test_validate_catalog_success"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0509445667266846,"execution_count":1,"average_duration":1.0509445667266846,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"validate_configuration","module":"src.compareblocks.config.file_manager","class":null,"description":"Validate the current configuration","parameters":[],"return_type":"bool","test_file":"tests/unit/test_configuration_manager.py","test_description":"Tests validation of current configuration including PDF existence and directory creation","field_attributes":{"return_value":{"type":"bool","constraint":"boolean value","description":"Validation result"},"performance":{"time_complexity":"O(1)","memory_usage":"Low - Validation operations"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["May raise ValidationError"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0622410774230957,"execution_count":1,"average_duration":1.0622410774230957,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"validate_consensus_json_format","module":"visual_ocr_testing_functions","class":null,"description":"Validate consensus decisions JSON format with detailed examples and required field checking","parameters":[{"name":"data","type":"List[Dict[str, Any]]","description":"List of consensus decision dictionaries"}],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests validation of valid and invalid consensus decision arrays","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"complete validation results","description":"Validation results specific to consensus decisions format","required_keys":["valid","type"]},"data[0].doc_id":{"type":"str","constraint":"not empty","description":"Document identifier for the consensus decision"},"data[0].page":{"type":"int","constraint":">= 1","description":"One-based page number"},"data[0].block_id":{"type":"str","constraint":"not empty","description":"Unique block identifier"},"data[0].selected_engine":{"type":"str","constraint":"not empty","description":"Name of the selected OCR engine"},"data[0].final_text":{"type":"str","constraint":"any string","description":"Final consensus text for the block"}},"side_effects":["None - pure validation function"],"dependencies":["typing"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"validate_consensus_json_format","module":"functions.visual_ocr_testing_functions","class":null,"description":"Validate consensus decisions JSON format with detailed examples","parameters":["data: List[Dict[str, Any]]"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_visual_ocr_functions.py","test_description":"Tests validation of consensus decisions JSON structure","field_attributes":{"data":{"type":"List[Dict[str, Any]]","constraint":"valid list","description":"List of consensus decision dictionaries"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Validation results with examples if invalid"}},"side_effects":[],"dependencies":["json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0623822212219238,"execution_count":1,"average_duration":1.0623822212219238,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"validate_engine_coverage","module":"compareblocks.testing.engine_validator","class":null,"description":"Validate test coverage for a specific engine.","parameters":["engine_name"],"return_type":"EngineTestCoverage","test_file":"tests/unit/test_engine_validator.py","test_description":"Tests validate_engine_coverage functionality","field_attributes":{"engine_name":{"type":"Any","constraint":"valid input","description":"Parameter engine_name"},"return_value":{"type":"EngineTestCoverage","constraint":"valid return value","description":"Validation result"},"performance":{"time_complexity":"O(1)","memory_usage":"Low - Validation operations"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["May raise ValidationError"],"dependencies":["jsonschema","time","pytest"],"source_file":"src\\compareblocks\\testing\\engine_validator.py","line_number":621,"test_functions":["TestEngineValidator.test_validate_engine_coverage"],"test_count":1,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.865286111831665,"execution_count":1,"average_duration":0.865286111831665,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"validate_function_entry","module":"functions.validate_catalog","class":null,"description":"Validate a single function catalog entry","parameters":["entry: Dict[str, Any]","line_num: int"],"return_type":"List[str]","test_file":"tests/unit/test_catalog_validation.py","test_description":"Tests validation of individual function catalog entries","field_attributes":{"entry":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Function catalog entry to validate"},"line_num":{"type":"int","constraint":">= 0","description":"Line number for error reporting"},"return_value":{"type":"List[str]","constraint":"valid list","description":"List of validation errors"}},"side_effects":["File I/O operations"],"dependencies":["pathlib"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0509445667266846,"execution_count":1,"average_duration":1.0509445667266846,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"validate_gbg_json_format","module":"visual_ocr_testing_functions","class":null,"description":"Validate GBG analysis JSON format with detailed examples and field validation","parameters":[{"name":"data","type":"Dict[str, Any]","description":"Dictionary containing GBG analysis data"}],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests validation of valid and invalid GBG analysis JSON structures","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"complete validation results","description":"Validation results specific to GBG analysis format","required_keys":["valid","type"]},"data.pages":{"type":"Dict[str, Any]","constraint":"dictionary with page numbers as keys","description":"Page data indexed by page number strings"},"data.summary":{"type":"Dict[str, Any]","constraint":"dictionary with metadata","description":"Summary information about the GBG analysis"}},"side_effects":["None - pure validation function"],"dependencies":["typing"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"validate_gbg_json_format","module":"functions.visual_ocr_testing_functions","class":null,"description":"Validate GBG analysis JSON format with detailed examples","parameters":["data: Dict[str, Any]"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_visual_ocr_functions.py","test_description":"Tests validation of GBG analysis JSON structure","field_attributes":{"data":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Dictionary containing GBG analysis data"},"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Validation results with examples if invalid"}},"side_effects":[],"dependencies":["json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0623822212219238,"execution_count":1,"average_duration":1.0623822212219238,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"validate_json_format","module":"visual_ocr_testing_functions","class":null,"description":"Validate JSON format and return validation result with examples for different data types","parameters":[{"name":"data","type":"Any","description":"Parsed JSON data to validate"}],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_visual_ocr_testing_tool.py","test_description":"Tests validation of GBG analysis, consensus decisions, and unknown formats","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"complete validation results","description":"Validation results with type detection and error information","required_keys":["valid","type"],"calculation":"Analyzes JSON structure to determine type and validity"},"return_value.valid":{"type":"bool","constraint":"boolean value","description":"Whether the JSON format is valid for its detected type"},"return_value.type":{"type":"str","constraint":"one of: gbg_analysis, consensus_decisions, corrections_data, processing_results, configuration, list_data, invalid_root_type, validation_error","description":"Detected JSON data type based on structure analysis"},"return_value.error":{"type":"Optional[str]","constraint":"present when valid is False","description":"Detailed error message explaining validation failure"},"return_value.example":{"type":"Optional[Dict[str, Any]]","constraint":"present when valid is False","description":"Example of correct format for the detected type"}},"side_effects":["None - pure validation function"],"dependencies":["json","typing"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9241909980773926,"execution_count":1,"average_duration":0.9241909980773926,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"validate_merge_result","module":"src.compareblocks.consensus.merge","class":null,"description":"Validate the quality of a merge result.","parameters":["original_texts","merged_text"],"return_type":"Any","test_file":"tests/unit/test_consensus_merge.py","test_description":"Tests validate_merge_result functionality with real consensus data","field_attributes":{"original_texts":{"type":"Any","constraint":"valid input","description":"Parameter original_texts"},"merged_text":{"type":"Any","constraint":"valid input","description":"Parameter merged_text"},"return_value":{"type":"Any","constraint":"valid return value","description":"Validation result"},"performance":{"time_complexity":"O(1)","memory_usage":"Low - Validation operations"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["May raise ValidationException"],"dependencies":["jsonschema"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.0672316551208496,"execution_count":1,"average_duration":1.0672316551208496,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"validate_ndjson_record","module":"src.compareblocks.io.loader","class":null,"description":"Convenience function to validate a single NDJSON record","parameters":["record: Dict[str, Any]"],"return_type":"Dict[str, Any]","test_file":"tests/unit/test_io_validation.py","test_description":"Tests convenience function for single record validation","field_attributes":{"return_value":{"type":"Dict[str, Any]","constraint":"valid dictionary","description":"Dictionary result"}},"side_effects":["May raise ValidationException"],"dependencies":["jsonschema"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"validate_project_structure","module":"src.compareblocks.project.manager","class":null,"description":"Convenience function to validate project structure.","parameters":["pdf_path: Any"],"return_type":"Any","test_file":"tests/unit/test_manager.py","test_description":"Tests validate_project_structure functionality with real data","field_attributes":{"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27","auto_generated":true}},"side_effects":[],"dependencies":[],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":"2025-10-31T03:36:27.804517","last_failure_timestamp":null,"last_error_message":null,"execution_duration":0.9514291286468506,"execution_count":1,"average_duration":0.9514291286468506,"success_rate":1.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"write_analytics_file","module":"src.compareblocks.io.writer","class":null,"description":"Convenience function to write analytics data to NDJSON file","parameters":["analytics_data: Dict[str, Any]","file_path: Path","overwrite: bool = False"],"return_type":"None","test_file":"tests/unit/test_io_validation.py","test_description":"Tests convenience function for writing analytics files","field_attributes":{"analytics_data":{"type":"Dict[str, Any]","constraint":"non-empty string","description":"Parameter analytics_data"},"file_path":{"type":"Path","constraint":"valid file path","description":"Parameter file_path"},"overwrite":{"type":"bool","constraint":"boolean value","description":"Parameter overwrite","default":"False"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
{"function_name":"write_consensus_file","module":"src.compareblocks.io.writer","class":null,"description":"Convenience function to write consensus records to NDJSON file","parameters":["records: List[Dict[str, Any]]","file_path: Path","overwrite: bool = False"],"return_type":"None","test_file":"tests/unit/test_io_validation.py","test_description":"Tests convenience function for writing consensus files","field_attributes":{"records":{"type":"List[Dict[str, Any]]","constraint":"non-empty string","description":"Parameter records"},"file_path":{"type":"Path","constraint":"valid file path","description":"Parameter file_path"},"overwrite":{"type":"bool","constraint":"boolean value","description":"Parameter overwrite","default":"False"},"performance":{"io_operations":"File system access"},"metadata":{"enhanced":true,"enhancement_version":"2.0","last_updated":"2024-10-27"}},"side_effects":["File I/O operations"],"dependencies":["pathlib","json"],"test_functions":[],"test_count":0,"last_run_time":"2025-10-31T03:36:27.804517","last_passing_timestamp":null,"last_failure_timestamp":"2025-10-31T03:36:27.804517","last_error_message":"","execution_duration":1.187697172164917,"execution_count":1,"average_duration":1.187697172164917,"success_rate":0.0,"metadata":{"last_test_update":"2025-10-31T03:36:27.804517","test_runner_integration":true}}
