{"created": 1761633119.9410846, "duration": 4.165647745132446, "exitcode": 1, "root": "C:\\Projects\\PDFConcensus", "environment": {}, "summary": {"passed": 35, "failed": 4, "total": 39, "collected": 39}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_project_structure.py", "type": "Module"}, {"nodeid": "tests/unit/test_io_validation.py", "type": "Module"}, {"nodeid": "tests/unit/test_immutable_runners.py", "type": "Module"}]}, {"nodeid": "tests/unit/test_project_structure.py::TestProjectStructure", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_project_structure.py::TestProjectStructure::test_src_package_structure", "type": "Function", "lineno": 13}, {"nodeid": "tests/unit/test_project_structure.py::TestProjectStructure::test_test_structure", "type": "Function", "lineno": 35}, {"nodeid": "tests/unit/test_project_structure.py::TestProjectStructure::test_main_package_import", "type": "Function", "lineno": 53}, {"nodeid": "tests/unit/test_project_structure.py::TestProjectStructure::test_immutable_runners_exist", "type": "Function", "lineno": 62}, {"nodeid": "tests/unit/test_project_structure.py::TestProjectStructure::test_pyproject_toml_exists", "type": "Function", "lineno": 76}, {"nodeid": "tests/unit/test_project_structure.py::TestProjectStructure::test_file_path_comments", "type": "Function", "lineno": 89}]}, {"nodeid": "tests/unit/test_project_structure.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_project_structure.py::TestProjectStructure", "type": "Class"}]}, {"nodeid": "tests/unit/test_io_validation.py::TestInputValidation", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_io_validation.py::TestInputValidation::test_valid_input_record_with_all_fields", "type": "Function", "lineno": 25}, {"nodeid": "tests/unit/test_io_validation.py::TestInputValidation::test_valid_input_record_minimal_required_fields", "type": "Function", "lineno": 44}, {"nodeid": "tests/unit/test_io_validation.py::TestInputValidation::test_valid_input_record_with_block_id_only", "type": "Function", "lineno": 59}, {"nodeid": "tests/unit/test_io_validation.py::TestInputValidation::test_invalid_input_missing_required_field", "type": "Function", "lineno": 73}, {"nodeid": "tests/unit/test_io_validation.py::TestInputValidation::test_invalid_input_missing_mapping_fields", "type": "Function", "lineno": 87}, {"nodeid": "tests/unit/test_io_validation.py::TestInputValidation::test_invalid_input_wrong_data_types", "type": "Function", "lineno": 102}, {"nodeid": "tests/unit/test_io_validation.py::TestInputValidation::test_invalid_bbox_wrong_length", "type": "Function", "lineno": 117}, {"nodeid": "tests/unit/test_io_validation.py::TestInputValidation::test_invalid_confidence_out_of_range", "type": "Function", "lineno": 132}]}, {"nodeid": "tests/unit/test_io_validation.py::TestConsensusValidation", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_io_validation.py::TestConsensusValidation::test_valid_consensus_record_complete", "type": "Function", "lineno": 152}, {"nodeid": "tests/unit/test_io_validation.py::TestConsensusValidation::test_valid_consensus_record_minimal", "type": "Function", "lineno": 175}, {"nodeid": "tests/unit/test_io_validation.py::TestConsensusValidation::test_invalid_consensus_missing_required_field", "type": "Function", "lineno": 193}, {"nodeid": "tests/unit/test_io_validation.py::TestConsensusValidation::test_invalid_decision_reason_enum", "type": "Function", "lineno": 211}]}, {"nodeid": "tests/unit/test_io_validation.py::TestNDJSONFileOperations", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_io_validation.py::TestNDJSONFileOperations::test_load_valid_ndjson_file", "type": "Function", "lineno": 242}, {"nodeid": "tests/unit/test_io_validation.py::TestNDJSONFileOperations::test_load_file_with_validation_error", "type": "Function", "lineno": 272}, {"nodeid": "tests/unit/test_io_validation.py::TestNDJSONFileOperations::test_load_file_with_json_syntax_error", "type": "Function", "lineno": 301}, {"nodeid": "tests/unit/test_io_validation.py::TestNDJSONFileOperations::test_stream_loading", "type": "Function", "lineno": 317}]}, {"nodeid": "tests/unit/test_io_validation.py::TestRoundTripCompatibility", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_io_validation.py::TestRoundTripCompatibility::test_consensus_round_trip", "type": "Function", "lineno": 346}, {"nodeid": "tests/unit/test_io_validation.py::TestRoundTripCompatibility::test_analytics_export_format", "type": "Function", "lineno": 407}]}, {"nodeid": "tests/unit/test_io_validation.py::TestErrorHandling", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_io_validation.py::TestErrorHandling::test_file_not_found_error", "type": "Function", "lineno": 466}, {"nodeid": "tests/unit/test_io_validation.py::TestErrorHandling::test_export_file_exists_error", "type": "Function", "lineno": 473}, {"nodeid": "tests/unit/test_io_validation.py::TestErrorHandling::test_empty_file_handling", "type": "Function", "lineno": 497}, {"nodeid": "tests/unit/test_io_validation.py::TestErrorHandling::test_file_with_empty_lines", "type": "Function", "lineno": 508}]}, {"nodeid": "tests/unit/test_io_validation.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_io_validation.py::TestInputValidation", "type": "Class"}, {"nodeid": "tests/unit/test_io_validation.py::TestConsensusValidation", "type": "Class"}, {"nodeid": "tests/unit/test_io_validation.py::TestNDJSONFileOperations", "type": "Class"}, {"nodeid": "tests/unit/test_io_validation.py::TestRoundTripCompatibility", "type": "Class"}, {"nodeid": "tests/unit/test_io_validation.py::TestErrorHandling", "type": "Class"}]}, {"nodeid": "tests/unit/test_immutable_runners.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_immutable_runners.py::test_run_becr_main_success", "type": "Function", "lineno": 15}, {"nodeid": "tests/unit/test_immutable_runners.py::test_run_becr_main_import_error", "type": "Function", "lineno": 29}, {"nodeid": "tests/unit/test_immutable_runners.py::test_run_becr_main_general_error", "type": "Function", "lineno": 40}, {"nodeid": "tests/unit/test_immutable_runners.py::test_run_tests_main_success", "type": "Function", "lineno": 50}, {"nodeid": "tests/unit/test_immutable_runners.py::test_run_tests_main_pytest_not_found", "type": "Function", "lineno": 72}, {"nodeid": "tests/unit/test_immutable_runners.py::test_run_tests_main_general_error", "type": "Function", "lineno": 82}, {"nodeid": "tests/unit/test_immutable_runners.py::test_run_tests_working_directory", "type": "Function", "lineno": 92}, {"nodeid": "tests/unit/test_immutable_runners.py::test_run_tests_sys_path_modification", "type": "Function", "lineno": 109}, {"nodeid": "tests/unit/test_immutable_runners.py::test_immutable_runners_exist", "type": "Function", "lineno": 126}, {"nodeid": "tests/unit/test_immutable_runners.py::test_immutable_runners_have_main_function", "type": "Function", "lineno": 140}, {"nodeid": "tests/unit/test_immutable_runners.py::test_immutable_runners_can_be_executed", "type": "Function", "lineno": 151}]}], "tests": [{"nodeid": "tests/unit/test_project_structure.py::TestProjectStructure::test_src_package_structure", "lineno": 13, "outcome": "passed", "keywords": ["test_src_package_structure", "unit", "TestProjectStructure", "test_project_structure.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.12995940004475415, "outcome": "passed"}, "call": {"duration": 0.0008553999941796064, "outcome": "passed"}, "teardown": {"duration": 0.0008002000395208597, "outcome": "passed"}}, {"nodeid": "tests/unit/test_project_structure.py::TestProjectStructure::test_test_structure", "lineno": 35, "outcome": "passed", "keywords": ["test_test_structure", "unit", "TestProjectStructure", "test_project_structure.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.0002655999269336462, "outcome": "passed"}, "call": {"duration": 0.0004474000306800008, "outcome": "passed"}, "teardown": {"duration": 0.00032270001247525215, "outcome": "passed"}}, {"nodeid": "tests/unit/test_project_structure.py::TestProjectStructure::test_main_package_import", "lineno": 53, "outcome": "passed", "keywords": ["test_main_package_import", "unit", "TestProjectStructure", "test_project_structure.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.00026489992160350084, "outcome": "passed"}, "call": {"duration": 0.0017969999462366104, "outcome": "passed"}, "teardown": {"duration": 0.0001816001022234559, "outcome": "passed"}}, {"nodeid": "tests/unit/test_project_structure.py::TestProjectStructure::test_immutable_runners_exist", "lineno": 62, "outcome": "passed", "keywords": ["test_immutable_runners_exist", "unit", "TestProjectStructure", "test_project_structure.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.00021510000806301832, "outcome": "passed"}, "call": {"duration": 0.00032860005740076303, "outcome": "passed"}, "teardown": {"duration": 0.0001770000671967864, "outcome": "passed"}}, {"nodeid": "tests/unit/test_project_structure.py::TestProjectStructure::test_pyproject_toml_exists", "lineno": 76, "outcome": "passed", "keywords": ["test_pyproject_toml_exists", "unit", "TestProjectStructure", "test_project_structure.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.00020220002625137568, "outcome": "passed"}, "call": {"duration": 0.0005163999740034342, "outcome": "passed"}, "teardown": {"duration": 0.00016170006711035967, "outcome": "passed"}}, {"nodeid": "tests/unit/test_project_structure.py::TestProjectStructure::test_file_path_comments", "lineno": 89, "outcome": "passed", "keywords": ["test_file_path_comments", "unit", "TestProjectStructure", "test_project_structure.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.0002180000301450491, "outcome": "passed"}, "call": {"duration": 0.0015190000412985682, "outcome": "passed"}, "teardown": {"duration": 0.00018009997438639402, "outcome": "passed"}}, {"nodeid": "tests/unit/test_io_validation.py::TestInputValidation::test_valid_input_record_with_all_fields", "lineno": 25, "outcome": "passed", "keywords": ["test_valid_input_record_with_all_fields", "unit", "TestInputValidation", "test_io_validation.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.0002237000735476613, "outcome": "passed"}, "call": {"duration": 0.0005734999431297183, "outcome": "passed"}, "teardown": {"duration": 0.00016050005797296762, "outcome": "passed"}}, {"nodeid": "tests/unit/test_io_validation.py::TestInputValidation::test_valid_input_record_minimal_required_fields", "lineno": 44, "outcome": "passed", "keywords": ["test_valid_input_record_minimal_required_fields", "unit", "TestInputValidation", "test_io_validation.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.00020320003386586905, "outcome": "passed"}, "call": {"duration": 0.0003735999343916774, "outcome": "passed"}, "teardown": {"duration": 0.00015469989739358425, "outcome": "passed"}}, {"nodeid": "tests/unit/test_io_validation.py::TestInputValidation::test_valid_input_record_with_block_id_only", "lineno": 59, "outcome": "passed", "keywords": ["test_valid_input_record_with_block_id_only", "unit", "TestInputValidation", "test_io_validation.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.0002533999504521489, "outcome": "passed"}, "call": {"duration": 0.0005225000204518437, "outcome": "passed"}, "teardown": {"duration": 0.00025669997557997704, "outcome": "passed"}}, {"nodeid": "tests/unit/test_io_validation.py::TestInputValidation::test_invalid_input_missing_required_field", "lineno": 73, "outcome": "passed", "keywords": ["test_invalid_input_missing_required_field", "unit", "TestInputValidation", "test_io_validation.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.0003154999576508999, "outcome": "passed"}, "call": {"duration": 0.0013243999565020204, "outcome": "passed"}, "teardown": {"duration": 0.00026549992617219687, "outcome": "passed"}}, {"nodeid": "tests/unit/test_io_validation.py::TestInputValidation::test_invalid_input_missing_mapping_fields", "lineno": 87, "outcome": "passed", "keywords": ["test_invalid_input_missing_mapping_fields", "unit", "TestInputValidation", "test_io_validation.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.00032380002085119486, "outcome": "passed"}, "call": {"duration": 0.0005297999596223235, "outcome": "passed"}, "teardown": {"duration": 0.0003141999477520585, "outcome": "passed"}}, {"nodeid": "tests/unit/test_io_validation.py::TestInputValidation::test_invalid_input_wrong_data_types", "lineno": 102, "outcome": "passed", "keywords": ["test_invalid_input_wrong_data_types", "unit", "TestInputValidation", "test_io_validation.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.00037240004166960716, "outcome": "passed"}, "call": {"duration": 0.00048379995860159397, "outcome": "passed"}, "teardown": {"duration": 0.00018420000560581684, "outcome": "passed"}}, {"nodeid": "tests/unit/test_io_validation.py::TestInputValidation::test_invalid_bbox_wrong_length", "lineno": 117, "outcome": "passed", "keywords": ["test_invalid_bbox_wrong_length", "unit", "TestInputValidation", "test_io_validation.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.00020169990602880716, "outcome": "passed"}, "call": {"duration": 0.0003961999900639057, "outcome": "passed"}, "teardown": {"duration": 0.000152900000102818, "outcome": "passed"}}, {"nodeid": "tests/unit/test_io_validation.py::TestInputValidation::test_invalid_confidence_out_of_range", "lineno": 132, "outcome": "passed", "keywords": ["test_invalid_confidence_out_of_range", "unit", "TestInputValidation", "test_io_validation.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.00018500001169741154, "outcome": "passed"}, "call": {"duration": 0.0004762000171467662, "outcome": "passed"}, "teardown": {"duration": 0.0001550000160932541, "outcome": "passed"}}, {"nodeid": "tests/unit/test_io_validation.py::TestConsensusValidation::test_valid_consensus_record_complete", "lineno": 152, "outcome": "failed", "keywords": ["test_valid_consensus_record_complete", "unit", "TestConsensusValidation", "test_io_validation.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.00018390000332146883, "outcome": "passed"}, "call": {"duration": 0.0002652000403031707, "outcome": "failed", "crash": {"path": "C:\\Projects\\PDFConcensus\\src\\compareblocks\\io\\writer.py", "lineno": 127, "message": "src.compareblocks.io.writer.ExportException: Consensus record validation failed: Validation error: 'character_consistency_score' is a required property"}, "traceback": [{"path": "tests\\unit\\test_io_validation.py", "lineno": 171, "message": "in test_valid_consensus_record_complete"}, {"path": "src\\compareblocks\\io\\writer.py", "lineno": 127, "message": "in validate_consensus_record"}], "longrepr": "src\\compareblocks\\io\\writer.py:120: in validate_consensus_record\n    self.validator.validate(record)\n.venv\\Lib\\site-packages\\jsonschema\\validators.py:451: in validate\n    raise error\nE   jsonschema.exceptions.ValidationError: 'character_consistency_score' is a required property\nE   \nE   Failed validating 'required' in schema:\nE       {'$schema': 'http://json-schema.org/draft-07/schema#',\nE        'type': 'object',\nE        'required': ['doc_id',\nE                     'page',\nE                     'block_id',\nE                     'selected_engine',\nE                     'final_text',\nE                     'decision_reason',\nE                     'engine_scores',\nE                     'anomaly_score',\nE                     'character_consistency_score'],\nE        'properties': {'doc_id': {'type': 'string',\nE                                  'description': 'Unique identifier for the '\nE                                                 'source document'},\nE                       'page': {'type': 'integer',\nE                                'minimum': 1,\nE                                'description': 'Page number (1-based)'},\nE                       'block_id': {'type': 'string',\nE                                    'description': 'Global Block Grid '\nE                                                   'identifier'},\nE                       'selected_engine': {'type': 'string',\nE                                           'description': 'Engine that '\nE                                                          'provided the '\nE                                                          'selected text'},\nE                       'final_text': {'type': 'string',\nE                                      'description': 'Final consensus text '\nE                                                     'after processing'},\nE                       'decision_reason': {'type': 'string',\nE                                           'enum': ['highest_score',\nE                                                    'manual_override',\nE                                                    'merged_result',\nE                                                    'flagged_review'],\nE                                           'description': 'Reason for the '\nE                                                          'consensus '\nE                                                          'decision'},\nE                       'engine_scores': {'type': 'object',\nE                                         'patternProperties': {'^.+$': {'type': 'number'}},\nE                                         'description': 'Scores for each '\nE                                                        'engine that provided '\nE                                                        'variations'},\nE                       'anomaly_score': {'type': 'number',\nE                                         'minimum': 0.0,\nE                                         'description': 'Anomaly detection '\nE                                                        'score for quality '\nE                                                        'assessment'},\nE                       'character_consistency_score': {'type': 'number',\nE                                                       'minimum': 0.0,\nE                                                       'maximum': 1.0,\nE                                                       'description': 'Character-level '\nE                                                                      'consistency '\nE                                                                      'score '\nE                                                                      'across '\nE                                                                      'all '\nE                                                                      'variations'},\nE                       'bbox': {'type': 'array',\nE                                'items': {'type': 'number'},\nE                                'minItems': 4,\nE                                'maxItems': 4,\nE                                'description': 'Final bounding box as [x, y, '\nE                                               'width, height]'},\nE                       'consensus_score': {'type': 'number',\nE                                           'description': 'Overall consensus '\nE                                                          'confidence score'},\nE                       'variations_count': {'type': 'integer',\nE                                            'minimum': 1,\nE                                            'description': 'Number of '\nE                                                           'variations '\nE                                                           'considered'},\nE                       'manual_override': {'type': 'boolean',\nE                                           'description': 'Whether this was '\nE                                                          'manually '\nE                                                          'overridden'},\nE                       'processing_metadata': {'type': 'object',\nE                                               'description': 'Additional '\nE                                                              'processing '\nE                                                              'information'},\nE                       'word_consistency_score': {'type': 'number',\nE                                                  'minimum': 0.0,\nE                                                  'maximum': 1.0,\nE                                                  'description': 'Word-level '\nE                                                                 'consistency '\nE                                                                 'score '\nE                                                                 'across '\nE                                                                 'variations'},\nE                       'spelling_accuracy_score': {'type': 'number',\nE                                                   'minimum': 0.0,\nE                                                   'maximum': 1.0,\nE                                                   'description': 'Spelling '\nE                                                                  'accuracy '\nE                                                                  'score for '\nE                                                                  'the block'},\nE                       'consistency_details': {'type': 'object',\nE                                               'properties': {'total_characters': {'type': 'integer',\nE                                                                                   'minimum': 0},\nE                                                              'consistent_characters': {'type': 'integer',\nE                                                                                        'minimum': 0},\nE                                                              'unique_variations': {'type': 'integer',\nE                                                                                    'minimum': 0},\nE                                                              'normalized_for_comparison': {'type': 'boolean'},\nE                                                              'override_terms_count': {'type': 'integer',\nE                                                                                       'minimum': 0}},\nE                                               'description': 'Detailed '\nE                                                              'consistency '\nE                                                              'analysis '\nE                                                              'metrics'}},\nE        'additionalProperties': False}\nE   \nE   On instance:\nE       {'doc_id': 'test_doc_001',\nE        'page': 1,\nE        'block_id': 'block_123',\nE        'selected_engine': 'tesseract',\nE        'final_text': 'Final consensus text.',\nE        'decision_reason': 'highest_score',\nE        'engine_scores': {'tesseract': 0.95, 'paddleocr': 0.87},\nE        'anomaly_score': 0.1,\nE        'bbox': [100.0, 200.0, 300.0, 150.0],\nE        'consensus_score': 0.95,\nE        'variations_count': 2,\nE        'manual_override': False}\n\nDuring handling of the above exception, another exception occurred:\ntests\\unit\\test_io_validation.py:171: in test_valid_consensus_record_complete\n    result = writer.validate_consensus_record(valid_consensus)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nsrc\\compareblocks\\io\\writer.py:127: in validate_consensus_record\n    raise ExportException(f\"Consensus record validation failed: {error_msg}\")\nE   src.compareblocks.io.writer.ExportException: Consensus record validation failed: Validation error: 'character_consistency_score' is a required property"}, "teardown": {"duration": 0.0003432000521570444, "outcome": "passed"}}, {"nodeid": "tests/unit/test_io_validation.py::TestConsensusValidation::test_valid_consensus_record_minimal", "lineno": 175, "outcome": "failed", "keywords": ["test_valid_consensus_record_minimal", "unit", "TestConsensusValidation", "test_io_validation.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.0002991999499499798, "outcome": "passed"}, "call": {"duration": 0.0003656999906525016, "outcome": "failed", "crash": {"path": "C:\\Projects\\PDFConcensus\\src\\compareblocks\\io\\writer.py", "lineno": 127, "message": "src.compareblocks.io.writer.ExportException: Consensus record validation failed: Validation error: 'character_consistency_score' is a required property"}, "traceback": [{"path": "tests\\unit\\test_io_validation.py", "lineno": 190, "message": "in test_valid_consensus_record_minimal"}, {"path": "src\\compareblocks\\io\\writer.py", "lineno": 127, "message": "in validate_consensus_record"}], "longrepr": "src\\compareblocks\\io\\writer.py:120: in validate_consensus_record\n    self.validator.validate(record)\n.venv\\Lib\\site-packages\\jsonschema\\validators.py:451: in validate\n    raise error\nE   jsonschema.exceptions.ValidationError: 'character_consistency_score' is a required property\nE   \nE   Failed validating 'required' in schema:\nE       {'$schema': 'http://json-schema.org/draft-07/schema#',\nE        'type': 'object',\nE        'required': ['doc_id',\nE                     'page',\nE                     'block_id',\nE                     'selected_engine',\nE                     'final_text',\nE                     'decision_reason',\nE                     'engine_scores',\nE                     'anomaly_score',\nE                     'character_consistency_score'],\nE        'properties': {'doc_id': {'type': 'string',\nE                                  'description': 'Unique identifier for the '\nE                                                 'source document'},\nE                       'page': {'type': 'integer',\nE                                'minimum': 1,\nE                                'description': 'Page number (1-based)'},\nE                       'block_id': {'type': 'string',\nE                                    'description': 'Global Block Grid '\nE                                                   'identifier'},\nE                       'selected_engine': {'type': 'string',\nE                                           'description': 'Engine that '\nE                                                          'provided the '\nE                                                          'selected text'},\nE                       'final_text': {'type': 'string',\nE                                      'description': 'Final consensus text '\nE                                                     'after processing'},\nE                       'decision_reason': {'type': 'string',\nE                                           'enum': ['highest_score',\nE                                                    'manual_override',\nE                                                    'merged_result',\nE                                                    'flagged_review'],\nE                                           'description': 'Reason for the '\nE                                                          'consensus '\nE                                                          'decision'},\nE                       'engine_scores': {'type': 'object',\nE                                         'patternProperties': {'^.+$': {'type': 'number'}},\nE                                         'description': 'Scores for each '\nE                                                        'engine that provided '\nE                                                        'variations'},\nE                       'anomaly_score': {'type': 'number',\nE                                         'minimum': 0.0,\nE                                         'description': 'Anomaly detection '\nE                                                        'score for quality '\nE                                                        'assessment'},\nE                       'character_consistency_score': {'type': 'number',\nE                                                       'minimum': 0.0,\nE                                                       'maximum': 1.0,\nE                                                       'description': 'Character-level '\nE                                                                      'consistency '\nE                                                                      'score '\nE                                                                      'across '\nE                                                                      'all '\nE                                                                      'variations'},\nE                       'bbox': {'type': 'array',\nE                                'items': {'type': 'number'},\nE                                'minItems': 4,\nE                                'maxItems': 4,\nE                                'description': 'Final bounding box as [x, y, '\nE                                               'width, height]'},\nE                       'consensus_score': {'type': 'number',\nE                                           'description': 'Overall consensus '\nE                                                          'confidence score'},\nE                       'variations_count': {'type': 'integer',\nE                                            'minimum': 1,\nE                                            'description': 'Number of '\nE                                                           'variations '\nE                                                           'considered'},\nE                       'manual_override': {'type': 'boolean',\nE                                           'description': 'Whether this was '\nE                                                          'manually '\nE                                                          'overridden'},\nE                       'processing_metadata': {'type': 'object',\nE                                               'description': 'Additional '\nE                                                              'processing '\nE                                                              'information'},\nE                       'word_consistency_score': {'type': 'number',\nE                                                  'minimum': 0.0,\nE                                                  'maximum': 1.0,\nE                                                  'description': 'Word-level '\nE                                                                 'consistency '\nE                                                                 'score '\nE                                                                 'across '\nE                                                                 'variations'},\nE                       'spelling_accuracy_score': {'type': 'number',\nE                                                   'minimum': 0.0,\nE                                                   'maximum': 1.0,\nE                                                   'description': 'Spelling '\nE                                                                  'accuracy '\nE                                                                  'score for '\nE                                                                  'the block'},\nE                       'consistency_details': {'type': 'object',\nE                                               'properties': {'total_characters': {'type': 'integer',\nE                                                                                   'minimum': 0},\nE                                                              'consistent_characters': {'type': 'integer',\nE                                                                                        'minimum': 0},\nE                                                              'unique_variations': {'type': 'integer',\nE                                                                                    'minimum': 0},\nE                                                              'normalized_for_comparison': {'type': 'boolean'},\nE                                                              'override_terms_count': {'type': 'integer',\nE                                                                                       'minimum': 0}},\nE                                               'description': 'Detailed '\nE                                                              'consistency '\nE                                                              'analysis '\nE                                                              'metrics'}},\nE        'additionalProperties': False}\nE   \nE   On instance:\nE       {'doc_id': 'test_doc_002',\nE        'page': 2,\nE        'block_id': 'block_456',\nE        'selected_engine': 'azure_vision',\nE        'final_text': 'Minimal consensus text.',\nE        'decision_reason': 'manual_override',\nE        'engine_scores': {'azure_vision': 0.88},\nE        'anomaly_score': 0.05}\n\nDuring handling of the above exception, another exception occurred:\ntests\\unit\\test_io_validation.py:190: in test_valid_consensus_record_minimal\n    result = writer.validate_consensus_record(minimal_consensus)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nsrc\\compareblocks\\io\\writer.py:127: in validate_consensus_record\n    raise ExportException(f\"Consensus record validation failed: {error_msg}\")\nE   src.compareblocks.io.writer.ExportException: Consensus record validation failed: Validation error: 'character_consistency_score' is a required property"}, "teardown": {"duration": 0.0007523000240325928, "outcome": "passed"}}, {"nodeid": "tests/unit/test_io_validation.py::TestConsensusValidation::test_invalid_consensus_missing_required_field", "lineno": 193, "outcome": "passed", "keywords": ["test_invalid_consensus_missing_required_field", "unit", "TestConsensusValidation", "test_io_validation.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.0004229999613016844, "outcome": "passed"}, "call": {"duration": 0.00041750003583729267, "outcome": "passed"}, "teardown": {"duration": 0.00031340005807578564, "outcome": "passed"}}, {"nodeid": "tests/unit/test_io_validation.py::TestConsensusValidation::test_invalid_decision_reason_enum", "lineno": 211, "outcome": "failed", "keywords": ["test_invalid_decision_reason_enum", "unit", "TestConsensusValidation", "test_io_validation.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.00030860002152621746, "outcome": "passed"}, "call": {"duration": 0.002500500064343214, "outcome": "failed", "crash": {"path": "C:\\Projects\\PDFConcensus\\tests\\unit\\test_io_validation.py", "lineno": 229, "message": "assert 'decision_reason' in \"Consensus record validation failed: Validation error: 'character_consistency_score' is a required property\"\n +  where \"Consensus record validation failed: Validation error: 'character_consistency_score' is a required property\" = str(ExportException(\"Consensus record validation failed: Validation error: 'character_consistency_score' is a required property\"))\n +    where ExportException(\"Consensus record validation failed: Validation error: 'character_consistency_score' is a required property\") = <ExceptionInfo ExportException(\"Consensus record validation failed: Validation error: 'character_consistency_score' is a required property\") tblen=2>.value"}, "traceback": [{"path": "tests\\unit\\test_io_validation.py", "lineno": 229, "message": "in test_invalid_decision_reason_enum"}], "longrepr": "tests\\unit\\test_io_validation.py:229: in test_invalid_decision_reason_enum\n    assert \"decision_reason\" in str(exc_info.value)\nE   assert 'decision_reason' in \"Consensus record validation failed: Validation error: 'character_consistency_score' is a required property\"\nE    +  where \"Consensus record validation failed: Validation error: 'character_consistency_score' is a required property\" = str(ExportException(\"Consensus record validation failed: Validation error: 'character_consistency_score' is a required property\"))\nE    +    where ExportException(\"Consensus record validation failed: Validation error: 'character_consistency_score' is a required property\") = <ExceptionInfo ExportException(\"Consensus record validation failed: Validation error: 'character_consistency_score' is a required property\") tblen=2>.value"}, "teardown": {"duration": 0.0003738000523298979, "outcome": "passed"}}, {"nodeid": "tests/unit/test_io_validation.py::TestNDJSONFileOperations::test_load_valid_ndjson_file", "lineno": 242, "outcome": "passed", "keywords": ["test_load_valid_ndjson_file", "unit", "TestNDJSONFileOperations", "test_io_validation.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.0005077000241726637, "outcome": "passed"}, "call": {"duration": 0.004609600058756769, "outcome": "passed"}, "teardown": {"duration": 0.0002442999975755811, "outcome": "passed"}}, {"nodeid": "tests/unit/test_io_validation.py::TestNDJSONFileOperations::test_load_file_with_validation_error", "lineno": 272, "outcome": "passed", "keywords": ["test_load_file_with_validation_error", "unit", "TestNDJSONFileOperations", "test_io_validation.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.00025649997405707836, "outcome": "passed"}, "call": {"duration": 0.0026071000611409545, "outcome": "passed"}, "teardown": {"duration": 0.00020180002320557833, "outcome": "passed"}}, {"nodeid": "tests/unit/test_io_validation.py::TestNDJSONFileOperations::test_load_file_with_json_syntax_error", "lineno": 301, "outcome": "passed", "keywords": ["test_load_file_with_json_syntax_error", "unit", "TestNDJSONFileOperations", "test_io_validation.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.0002712999703362584, "outcome": "passed"}, "call": {"duration": 0.0022194000193849206, "outcome": "passed"}, "teardown": {"duration": 0.0001810999820008874, "outcome": "passed"}}, {"nodeid": "tests/unit/test_io_validation.py::TestNDJSONFileOperations::test_stream_loading", "lineno": 317, "outcome": "passed", "keywords": ["test_stream_loading", "unit", "TestNDJSONFileOperations", "test_io_validation.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.00021900003775954247, "outcome": "passed"}, "call": {"duration": 0.004245099960826337, "outcome": "passed"}, "teardown": {"duration": 0.00048399996012449265, "outcome": "passed"}}, {"nodeid": "tests/unit/test_io_validation.py::TestRoundTripCompatibility::test_consensus_round_trip", "lineno": 346, "outcome": "failed", "keywords": ["test_consensus_round_trip", "unit", "TestRoundTripCompatibility", "test_io_validation.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.00041910004802048206, "outcome": "passed"}, "call": {"duration": 0.0023938000667840242, "outcome": "failed", "crash": {"path": "C:\\Projects\\PDFConcensus\\src\\compareblocks\\io\\writer.py", "lineno": 64, "message": "src.compareblocks.io.writer.ExportException: Failed to write NDJSON file C:\\Users\\Cane\\AppData\\Local\\Temp\\tmp1o_g2i0m.ndjson: Failed to write record 0: Consensus record validation failed: Validation error: 'character_consistency_score' is a required property"}, "traceback": [{"path": "tests\\unit\\test_io_validation.py", "lineno": 381, "message": "in test_consensus_round_trip"}, {"path": "src\\compareblocks\\io\\writer.py", "lineno": 251, "message": "in write_consensus_file"}, {"path": "src\\compareblocks\\io\\writer.py", "lineno": 64, "message": "in write_file"}], "longrepr": "src\\compareblocks\\io\\writer.py:120: in validate_consensus_record\n    self.validator.validate(record)\n.venv\\Lib\\site-packages\\jsonschema\\validators.py:451: in validate\n    raise error\nE   jsonschema.exceptions.ValidationError: 'character_consistency_score' is a required property\nE   \nE   Failed validating 'required' in schema:\nE       {'$schema': 'http://json-schema.org/draft-07/schema#',\nE        'type': 'object',\nE        'required': ['doc_id',\nE                     'page',\nE                     'block_id',\nE                     'selected_engine',\nE                     'final_text',\nE                     'decision_reason',\nE                     'engine_scores',\nE                     'anomaly_score',\nE                     'character_consistency_score'],\nE        'properties': {'doc_id': {'type': 'string',\nE                                  'description': 'Unique identifier for the '\nE                                                 'source document'},\nE                       'page': {'type': 'integer',\nE                                'minimum': 1,\nE                                'description': 'Page number (1-based)'},\nE                       'block_id': {'type': 'string',\nE                                    'description': 'Global Block Grid '\nE                                                   'identifier'},\nE                       'selected_engine': {'type': 'string',\nE                                           'description': 'Engine that '\nE                                                          'provided the '\nE                                                          'selected text'},\nE                       'final_text': {'type': 'string',\nE                                      'description': 'Final consensus text '\nE                                                     'after processing'},\nE                       'decision_reason': {'type': 'string',\nE                                           'enum': ['highest_score',\nE                                                    'manual_override',\nE                                                    'merged_result',\nE                                                    'flagged_review'],\nE                                           'description': 'Reason for the '\nE                                                          'consensus '\nE                                                          'decision'},\nE                       'engine_scores': {'type': 'object',\nE                                         'patternProperties': {'^.+$': {'type': 'number'}},\nE                                         'description': 'Scores for each '\nE                                                        'engine that provided '\nE                                                        'variations'},\nE                       'anomaly_score': {'type': 'number',\nE                                         'minimum': 0.0,\nE                                         'description': 'Anomaly detection '\nE                                                        'score for quality '\nE                                                        'assessment'},\nE                       'character_consistency_score': {'type': 'number',\nE                                                       'minimum': 0.0,\nE                                                       'maximum': 1.0,\nE                                                       'description': 'Character-level '\nE                                                                      'consistency '\nE                                                                      'score '\nE                                                                      'across '\nE                                                                      'all '\nE                                                                      'variations'},\nE                       'bbox': {'type': 'array',\nE                                'items': {'type': 'number'},\nE                                'minItems': 4,\nE                                'maxItems': 4,\nE                                'description': 'Final bounding box as [x, y, '\nE                                               'width, height]'},\nE                       'consensus_score': {'type': 'number',\nE                                           'description': 'Overall consensus '\nE                                                          'confidence score'},\nE                       'variations_count': {'type': 'integer',\nE                                            'minimum': 1,\nE                                            'description': 'Number of '\nE                                                           'variations '\nE                                                           'considered'},\nE                       'manual_override': {'type': 'boolean',\nE                                           'description': 'Whether this was '\nE                                                          'manually '\nE                                                          'overridden'},\nE                       'processing_metadata': {'type': 'object',\nE                                               'description': 'Additional '\nE                                                              'processing '\nE                                                              'information'},\nE                       'word_consistency_score': {'type': 'number',\nE                                                  'minimum': 0.0,\nE                                                  'maximum': 1.0,\nE                                                  'description': 'Word-level '\nE                                                                 'consistency '\nE                                                                 'score '\nE                                                                 'across '\nE                                                                 'variations'},\nE                       'spelling_accuracy_score': {'type': 'number',\nE                                                   'minimum': 0.0,\nE                                                   'maximum': 1.0,\nE                                                   'description': 'Spelling '\nE                                                                  'accuracy '\nE                                                                  'score for '\nE                                                                  'the block'},\nE                       'consistency_details': {'type': 'object',\nE                                               'properties': {'total_characters': {'type': 'integer',\nE                                                                                   'minimum': 0},\nE                                                              'consistent_characters': {'type': 'integer',\nE                                                                                        'minimum': 0},\nE                                                              'unique_variations': {'type': 'integer',\nE                                                                                    'minimum': 0},\nE                                                              'normalized_for_comparison': {'type': 'boolean'},\nE                                                              'override_terms_count': {'type': 'integer',\nE                                                                                       'minimum': 0}},\nE                                               'description': 'Detailed '\nE                                                              'consistency '\nE                                                              'analysis '\nE                                                              'metrics'}},\nE        'additionalProperties': False}\nE   \nE   On instance:\nE       {'doc_id': 'test_doc_001',\nE        'page': 1,\nE        'block_id': 'block_123',\nE        'selected_engine': 'tesseract',\nE        'final_text': 'Original consensus text.',\nE        'decision_reason': 'highest_score',\nE        'engine_scores': {'tesseract': 0.95,\nE                          'paddleocr': 0.87,\nE                          'azure_vision': 0.91},\nE        'anomaly_score': 0.15,\nE        'bbox': [100.5, 200.25, 300.75, 150.0],\nE        'consensus_score': 0.95,\nE        'variations_count': 3,\nE        'manual_override': False,\nE        'processing_metadata': {'timestamp': '2024-01-01T12:00:00Z'}}\n\nDuring handling of the above exception, another exception occurred:\nsrc\\compareblocks\\io\\writer.py:81: in write_stream\n    validated_record = self.validate_consensus_record(record)\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nsrc\\compareblocks\\io\\writer.py:127: in validate_consensus_record\n    raise ExportException(f\"Consensus record validation failed: {error_msg}\")\nE   src.compareblocks.io.writer.ExportException: Consensus record validation failed: Validation error: 'character_consistency_score' is a required property\n\nDuring handling of the above exception, another exception occurred:\nsrc\\compareblocks\\io\\writer.py:62: in write_file\n    self.write_stream(records, f)\nsrc\\compareblocks\\io\\writer.py:90: in write_stream\n    raise ExportException(f\"Failed to write record {i}: {e}\")\nE   src.compareblocks.io.writer.ExportException: Failed to write record 0: Consensus record validation failed: Validation error: 'character_consistency_score' is a required property\n\nDuring handling of the above exception, another exception occurred:\ntests\\unit\\test_io_validation.py:381: in test_consensus_round_trip\n    write_consensus_file(original_consensus, temp_file)\nsrc\\compareblocks\\io\\writer.py:251: in write_consensus_file\n    writer.write_file(records, file_path, overwrite)\nsrc\\compareblocks\\io\\writer.py:64: in write_file\n    raise ExportException(f\"Failed to write NDJSON file {file_path}: {e}\")\nE   src.compareblocks.io.writer.ExportException: Failed to write NDJSON file C:\\Users\\Cane\\AppData\\Local\\Temp\\tmp1o_g2i0m.ndjson: Failed to write record 0: Consensus record validation failed: Validation error: 'character_consistency_score' is a required property"}, "teardown": {"duration": 0.0003306999569758773, "outcome": "passed"}}, {"nodeid": "tests/unit/test_io_validation.py::TestRoundTripCompatibility::test_analytics_export_format", "lineno": 407, "outcome": "passed", "keywords": ["test_analytics_export_format", "unit", "TestRoundTripCompatibility", "test_io_validation.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.000291300006210804, "outcome": "passed"}, "call": {"duration": 0.004026700044050813, "outcome": "passed"}, "teardown": {"duration": 0.00024940003640949726, "outcome": "passed"}}, {"nodeid": "tests/unit/test_io_validation.py::TestErrorHandling::test_file_not_found_error", "lineno": 466, "outcome": "passed", "keywords": ["test_file_not_found_error", "unit", "TestErrorHandling", "test_io_validation.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.0002637000288814306, "outcome": "passed"}, "call": {"duration": 0.0005391999147832394, "outcome": "passed"}, "teardown": {"duration": 0.0001816001022234559, "outcome": "passed"}}, {"nodeid": "tests/unit/test_io_validation.py::TestErrorHandling::test_export_file_exists_error", "lineno": 473, "outcome": "passed", "keywords": ["test_export_file_exists_error", "unit", "TestErrorHandling", "test_io_validation.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.00020619994029402733, "outcome": "passed"}, "call": {"duration": 0.0014788999687880278, "outcome": "passed"}, "teardown": {"duration": 0.0001700000138953328, "outcome": "passed"}}, {"nodeid": "tests/unit/test_io_validation.py::TestErrorHandling::test_empty_file_handling", "lineno": 497, "outcome": "passed", "keywords": ["test_empty_file_handling", "unit", "TestErrorHandling", "test_io_validation.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.00020999996922910213, "outcome": "passed"}, "call": {"duration": 0.0017544000875204802, "outcome": "passed"}, "teardown": {"duration": 0.00017360004130750895, "outcome": "passed"}}, {"nodeid": "tests/unit/test_io_validation.py::TestErrorHandling::test_file_with_empty_lines", "lineno": 508, "outcome": "passed", "keywords": ["test_file_with_empty_lines", "unit", "TestErrorHandling", "test_io_validation.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.00020910007879137993, "outcome": "passed"}, "call": {"duration": 0.002381899976171553, "outcome": "passed"}, "teardown": {"duration": 0.00017370004206895828, "outcome": "passed"}}, {"nodeid": "tests/unit/test_immutable_runners.py::test_run_becr_main_success", "lineno": 15, "outcome": "passed", "keywords": ["test_run_becr_main_success", "unit", "test_immutable_runners.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.00023539992980659008, "outcome": "passed"}, "call": {"duration": 1.0245369999902323, "outcome": "passed"}, "teardown": {"duration": 0.0002802999224513769, "outcome": "passed"}}, {"nodeid": "tests/unit/test_immutable_runners.py::test_run_becr_main_import_error", "lineno": 29, "outcome": "passed", "keywords": ["test_run_becr_main_import_error", "unit", "test_immutable_runners.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.00030179996974766254, "outcome": "passed"}, "call": {"duration": 0.0011269999668002129, "outcome": "passed", "stdout": "Error importing BECR application: Missing dependency\nPlease ensure all dependencies are installed in the virtual environment.\n"}, "teardown": {"duration": 0.00019789999350905418, "outcome": "passed"}}, {"nodeid": "tests/unit/test_immutable_runners.py::test_run_becr_main_general_error", "lineno": 40, "outcome": "passed", "keywords": ["test_run_becr_main_general_error", "unit", "test_immutable_runners.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.0002280999906361103, "outcome": "passed"}, "call": {"duration": 0.0004897000035271049, "outcome": "passed", "stdout": "Error running BECR application: General error\n"}, "teardown": {"duration": 0.00018099998123943806, "outcome": "passed"}}, {"nodeid": "tests/unit/test_immutable_runners.py::test_run_tests_main_success", "lineno": 50, "outcome": "passed", "keywords": ["test_run_tests_main_success", "unit", "test_immutable_runners.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.00019970000721514225, "outcome": "passed"}, "call": {"duration": 0.0024802000261843204, "outcome": "passed", "stdout": "Running BECR test suite...\nCommand: C:\\Projects\\PDFConcensus\\.venv\\Scripts\\python.exe -m pytest --verbose --tb=short --cov=src/compareblocks --cov-report=term-missing --cov-report=html:htmlcov --cov-fail-under=95 tests/\n"}, "teardown": {"duration": 0.00017120002303272486, "outcome": "passed"}}, {"nodeid": "tests/unit/test_immutable_runners.py::test_run_tests_main_pytest_not_found", "lineno": 72, "outcome": "passed", "keywords": ["test_run_tests_main_pytest_not_found", "unit", "test_immutable_runners.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.00020380003843456507, "outcome": "passed"}, "call": {"duration": 0.0022643000120297074, "outcome": "passed", "stdout": "Running BECR test suite...\nCommand: C:\\Projects\\PDFConcensus\\.venv\\Scripts\\python.exe -m pytest --verbose --tb=short --cov=src/compareblocks --cov-report=term-missing --cov-report=html:htmlcov --cov-fail-under=95 tests/\nError: pytest not found. Please ensure pytest is installed in the virtual environment.\n"}, "teardown": {"duration": 0.00027760001830756664, "outcome": "passed"}}, {"nodeid": "tests/unit/test_immutable_runners.py::test_run_tests_main_general_error", "lineno": 82, "outcome": "passed", "keywords": ["test_run_tests_main_general_error", "unit", "test_immutable_runners.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.000314700067974627, "outcome": "passed"}, "call": {"duration": 0.0008035999489948153, "outcome": "passed", "stdout": "Running BECR test suite...\nCommand: C:\\Projects\\PDFConcensus\\.venv\\Scripts\\python.exe -m pytest --verbose --tb=short --cov=src/compareblocks --cov-report=term-missing --cov-report=html:htmlcov --cov-fail-under=95 tests/\nError running test suite: General error\n"}, "teardown": {"duration": 0.00017030001617968082, "outcome": "passed"}}, {"nodeid": "tests/unit/test_immutable_runners.py::test_run_tests_working_directory", "lineno": 92, "outcome": "passed", "keywords": ["test_run_tests_working_directory", "unit", "test_immutable_runners.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.00020330003462731838, "outcome": "passed"}, "call": {"duration": 0.0010036000749096274, "outcome": "passed", "stdout": "Running BECR test suite...\nCommand: C:\\Projects\\PDFConcensus\\.venv\\Scripts\\python.exe -m pytest --verbose --tb=short --cov=src/compareblocks --cov-report=term-missing --cov-report=html:htmlcov --cov-fail-under=95 tests/\n"}, "teardown": {"duration": 0.00016689999029040337, "outcome": "passed"}}, {"nodeid": "tests/unit/test_immutable_runners.py::test_run_tests_sys_path_modification", "lineno": 109, "outcome": "passed", "keywords": ["test_run_tests_sys_path_modification", "unit", "test_immutable_runners.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.00019689998589456081, "outcome": "passed"}, "call": {"duration": 0.0006886000046506524, "outcome": "passed", "stdout": "Running BECR test suite...\nCommand: C:\\Projects\\PDFConcensus\\.venv\\Scripts\\python.exe -m pytest --verbose --tb=short --cov=src/compareblocks --cov-report=term-missing --cov-report=html:htmlcov --cov-fail-under=95 tests/\n"}, "teardown": {"duration": 0.00017120002303272486, "outcome": "passed"}}, {"nodeid": "tests/unit/test_immutable_runners.py::test_immutable_runners_exist", "lineno": 126, "outcome": "passed", "keywords": ["test_immutable_runners_exist", "unit", "test_immutable_runners.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.0001957999775186181, "outcome": "passed"}, "call": {"duration": 0.0003131000557914376, "outcome": "passed"}, "teardown": {"duration": 0.00029619992710649967, "outcome": "passed"}}, {"nodeid": "tests/unit/test_immutable_runners.py::test_immutable_runners_have_main_function", "lineno": 140, "outcome": "passed", "keywords": ["test_immutable_runners_have_main_function", "unit", "test_immutable_runners.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.00032049999572336674, "outcome": "passed"}, "call": {"duration": 0.00030770001467317343, "outcome": "passed"}, "teardown": {"duration": 0.00023120001424103975, "outcome": "passed"}}, {"nodeid": "tests/unit/test_immutable_runners.py::test_immutable_runners_can_be_executed", "lineno": 151, "outcome": "passed", "keywords": ["test_immutable_runners_can_be_executed", "unit", "test_immutable_runners.py", "tests", "PDFConcensus", ""], "setup": {"duration": 0.0002866999711841345, "outcome": "passed"}, "call": {"duration": 0.0003541000187397003, "outcome": "passed"}, "teardown": {"duration": 0.00037610006984323263, "outcome": "passed"}}], "warnings": [{"message": "builtin type SwigPyPacked has no __module__ attribute", "category": "DeprecationWarning", "when": "runtest", "filename": "<frozen importlib._bootstrap>", "lineno": 488}, {"message": "builtin type SwigPyObject has no __module__ attribute", "category": "DeprecationWarning", "when": "runtest", "filename": "<frozen importlib._bootstrap>", "lineno": 488}, {"message": "builtin type SwigPyPacked has no __module__ attribute", "category": "DeprecationWarning", "when": "runtest", "filename": "<frozen importlib._bootstrap>", "lineno": 488}, {"message": "builtin type SwigPyObject has no __module__ attribute", "category": "DeprecationWarning", "when": "runtest", "filename": "<frozen importlib._bootstrap>", "lineno": 488}, {"message": "builtin type swigvarlink has no __module__ attribute", "category": "DeprecationWarning", "when": "runtest", "filename": "<frozen importlib._bootstrap>", "lineno": 488}]}